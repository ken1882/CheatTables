<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <Files>
    <Starter.lua Encoding="Ascii85">#aLT!6h^]$vnBt4yj5DUx=35yFG!1Ia3W$u76}tr=R_*BBbB=$*4lX]jjC#FysJowB85dfB)D)/3=_xr%;!XsC4(FrU$W.@RbQ%S#/3Uhj9P{NKKJvTOU.KLeel8jJlSM9qmm[LOHrYii1Gm=gCb#qsFab7,uJ11Vpd2tI_JlvynigRZmLKShh%wid6{%Il+:]q:NT_+qExBATv:G*ec/B+5wnPk=t,yg7kZhRw[l:u,DD%E^,XT0c{#P1cmHo;mHgxDOHz6.C{NfI0]+3]xLMHsoCO.,D^gVo;yR5sBAAqSGO5DZ83G=.W__cW;^NmlGN-C$iRAuW2/w-E$G^gMon[1pNWm59GG(Es)E{FvANLKZA7Vla!i3-::*no=vh_GSyc=jD4q1jL3/*cerX=!tF_dToD29Xkfz@ioAZy?n156aUMN%rsTtavsJ)iIlt^i}HR0T+3c5NfoUHx^A4,/4Dy$]M6##toT^vgYfbtYqx89o{PEO0^A6CKi%U9hpq3hFjkkBj3=7ITq(etdg9xO),!+dg8x$jBkY*LJc;Qd!ZJk!Pg#M3mGDL9BQEI]N[ibhxg:K??qrh3A-K#ht@PrA7EyUdt6xw2kS@511:9hSR[(!CbU[Aj3Mib!N!C(X!_NCU2A=TRLcw5HIGve$Et2B9CxEyg[l06]4%(!1cD_Zo}$;CtFMn]WT+4Q51oxPF(o8cJO:5bI]U+^7+k6K5}r6=r6nK+Gsa7/g,sxnbRoS@-Suz9j)=2qm__zk]*L1^BXTpWD3eO]{-uo)!32:h$=0T*VMjs6PucA]cQz+Lv_xMG+u{B:X=u57@=vo8N3gOAJAMn7(ldnP3-?J;K_1K1d7VzBDT#F6l]O2TOdodm1U@vuu}mX)+Q:n=FPSt-%D@}-(jjod_yw{ef{Ww45__Yrzyi*K$=0z2rYUF/(87nIt4R*JEg@axl,w=2.ra=0i2/67Tv5cBmFRAM}e5e80YwBYV{Wx%U2f^UA()Y;CO/txr4+Xl.2v.B]YnwMg,7RQIMG45^%X3s$wlsb72Wh6xR7iq@q:De9%}7NO#lxn3zDK;=GPPCYI{G4oblU)Bh6@)A+)cI%Kg!mfUy+njGlGS4?T%[pA._Rd$z$IzW=5]Oy_@ni[ow15!d!Uh4K(6#yEvE[grTM,GcHJ./Tc..@Q%i,GjQM4P:r:A;6O6vNnT0PgHfIz%dL1tb0k$kQRd5981XDXnP=7f60EzeKKsAe)cWUJ$wh]r_b4=+-8).ff!2nujZR[[1$yIsK/q^G$ft?TWrrKWZWG${$*L$J*SkFi?^/u05;@%AnGV]+5dNwcu?Vn;QQUXGFB]yQ8HFSCySg8cqSUa%YmfJ*8?U2Pn:M3M[^-ALu.?4)q@Ne(fYW7,3kApw,SlfFc;#2Bi/L?vYgAai=1%iJjwhoU^O-x5Pmf**WXE^T{v0D(:1(F7S^F*aInk2(s{c(6tcXBF,%Ob.$^xw,+zkh+?G8yw)8Wh:qXi:,5C9PZ.7Rx}+6bmSqeq24wL{5Zf]ZsSP8gw)?dQHuJJd(S;QAzTH,g*/)FLi!uh5q1sH0Ny((!k:aV7n!$-HV^E]$y_=hL8:Z[VniJT^VH.B/p@7fZO7S}PO/9#-8/e4Dnjcq/QnkEm+CP.U1@SkN#?]aW[eIY4X/qT?E+!SX?vQt$?PE26[?it7,utK;UQ6aP.9?JCEV_i+M3)o94A!OxklW:kNo^YgJK0^FB$Iz.6n]pP#SIH=z:rw?!3TZ(26XCIjWY*s:t=C/]%,qM^]}}n_3pY:l4,*T4etXw-#BH0K2?pPwD3d@Zv2m3PrTjTVCUZM=jGzYUWgI$wH%?a]BS^--^CX}a];},,z4%!;hs8}dn/7NOagzCbpahr[!C:K#aHd%t*{FoVslr7Ya.#;tDukh.}Le{qLag^Nk4{?N-[{*g#8)#yahui5)/yY9N*u;qseab@yuiwGe2s.HkKviubX$G+60q?ai8g+Dzw]kbT%keueAZEEYEK}VDUgPR2z:eMk}Z9Z+1d7aE=g3%qU{U=Jq)+JF[#V(%Qa:GkkUW^LO@t/rsSN;e(zHm47ME]Q2=gfqs{6^B)L!IsJW2cJj)0J4,xu![))K,h,@]ynTTY#b/:z/eSFZf4y6GPkymZ48L.__KGNA[UqHq-k0]y[Py(z8LD9w#fJ?o7vqrh=^Vx.t%P@#ZY#B8plhO18S=9hHzl@8_6aa(JRS_tUpoYN.s)^K[}AW*]J}h@d@qCk?2)-Qow$!7s8I5*lczcuTEeq8/0ATWTphhR50WqBZp-AlZr)VyH$h-9U(W}cY8AE/H#RNLDuE}C0x/lseEZXR]@1IZEx{]Z$4Ck-+^c!nUysCTLWghb]j75kFUM(y(7f),/9Fh21-!OtpyA2s?X@S.]VA^{+eI!CS-uY0BmL-+pqwX8]y2kVlw,PJb=_C-!{YlR;h0Wx60w4f;[;#Gv.9GrY^1Q)9A(WPnkDw8^(k$p$%Q#d-flMT=M-FTgKa5[qOf]I%%pKvZ{PB=DMN92OHysir6}L#</Starter.lua>
    <Register.lua Encoding="Ascii85">-5Tw3,qm)5XD07{VVWUzQ5ajv@-_}D8@unh=l=^,a[=gtO$H[+2?OeTK,v_D$piMSx)k3LKvA-Dz1nR)ccDlu7W/9e1@*T.n^OUJChu9sXvtFeG3TXXGR]VWsv;2Qs0AZ$j!sF(6IPV$^yl(^5X,V1@MxW(G9aU!)TE%[s3]T_LaAlB[vDFK0:%eX!eSxkPwf2iNzT/^]w{k}OPuo]_GR%L6A8]8,w.GZee)IsEiF2$ibQcy.JR[S%Fjg;nMXl$HY7AnB]eFp^d*xdszO?vPr9Ik7i8mDgJwvSte8b6nW_)#TCn?}Sdrcm-)UrzcvaBzjFDOf/+h0?.^@jvhrcuW?czAeg,^j(9v4*xQ*G9-l.Xv[jA+46LRw_age0HX3KVpn5nhlb/,1?GsW4FZXK=fKq^?MOwOX/WCJx9x?KRLyIg=:+82.P0GiZ@Lu]z}YFqU{E*Ekxyxq8nMA:8)uqeFuZ:yBlA.M:r_wh#(;7](2F$UP4^4B^B3#BmT#5f1o,SP]?s[*LEWED${6@:D!pAxg01]W1CFAakJvNkjo,s}FKX;Jw5bswu%}d6g-CP=bvLlY_x#$aA2%j%XI6v]_nNYFsHXE:!h!Mrs_j2:j6d:nPt%8.ma}(ro^-3MTklL7NZl,=r}b4UF#+kO8cjvNDl.iH6YS%oB%MO-lo2B[e{]3]/PANqV3@dF:1**neJ)Ghg,v^-,aLYHy3.IJOJ-(_;XHn.nKh0RGY%D2GqGL-N3mr)(yRpYiFyq38C)$^^cBFs=LGPuc(S-+;!ri);+L5@#.+@[qKX*YoV4t]VZZzyd9(5+-#kfziEK-zH*BY]3/=-^d@jrX272T36X[4tL{%ooIR2E_W78v]Zz(Z)j}ECQ1bl^trJu/t2zWkqm[S#!m6ZXIV4.8aEy@WeCd[239Fy%EuYFn$nYV$c#$y;IyXU6U^0{m?d?Im11KlDfni:Go.1PWM2$n[#lrofkT5l]1Y4=e-4IZR@{%^jWa$kSZZfs?(zL[D=5*4VV9JvQ:VmqqF[k(3$uM?z^N+iaK(i]3r4fdXF36/TR]ye19)v[82DraKtGUO;v)yIyOWY*72z70]*0Gl#$)JH=@y^JV-sZ8*@}:u^$sL;rf#6l9$4r^WOs[BWf+mAaEZ9%jW=jfplZCcV;d}:-?]:X@sUB9s9h2TQE./CHGExffi=!)8D92MXF^.=H*KF2Kme1I1Z?/q$vU/nF@fX91igYD8@)fG!L]tx)Sc7TEHl[Zfh]k(3ai2f$JDDCEZin[P.rhz#8OcdkzwIP+C7*W:eRCLCQ2-u7vOKAB!omyF)3j:)tV5%0sP?F[WyG5p$Yf4fP!zKheRh{I-]=(V6iz;UriN!Z*W%f6m[/:$SgJJ-$uH+DQrun$1N_LL:)3(2p2s(3QX!r49pIQgRqr(]+7:Y6FOtfUU-8Y9Bo#@kEVJn$DhyIpWoG3e6n;!dvSf%4ztDpt]}SZ#q=m.Wa[?M4ZTCVc;RQ,Vn^F[MpHkT+0][Zu)f(IEj,a{D}^}+X?]REIt%Kw2r,FE$a.FDS1{AX6P,$VLj=?pEOT+e)jnlMGYV6zJh4ffn]4%Don08xT#_mGlIyhY!v4@ynIGuAA/#(Cff/5PS2v1ofZgv5jHVmFX[kr0qXILR5}uleSuY8Bk%WV77!KJr7+eJ(@u=%kA)c[=ytxu]![pc_PmIEp9Z1r)%No4SfRQ,bZ:neVeNbz}x-[Z3o]59*coh)}eX3P%E.}DT5BmV5]x)63%?{MAa:DCk!tY1(=rz@g:^_$0)Noi9cnu!R))MffnC}[iJO,K-C=U:37B_q%lCKOkjp%_67S$IDt}IH3dm5sdJ;LD[G@@fl]0v{5-dXw$%aGw2m#txc59_6ZW@r3Pkg5A7Ok3dTe=upTmL-(dr@2NvDxH?hIj3dU1$MA/X/:.EZ%V9I6E4Wv1NW]2yFRzT[:gEB;Hh75,GuJr-3V!c$))#kcCJRxhvfNS:.L@_Sd_:Dw0WhA/ET)/(SZ@b:W6GfgR6[@CoWY+vk8/{U1HV_J-.52N6/z?2U]#!DQ^:+;E$6,@csqGceWsUCpf@%Q^m#.gy]9g5HYkXZO0oCJ--Q{V[q:RGTe-4n}YBMT#%AOP.EjvWFTwUMmsma:2EpC,h[}6g9Vik@q7Q#kSE)sbL5G:#q+@/q]A*3ztushWqtgpNZHkEDROkTC;Lp!G5q.fHl=LS:M/Fgc82KIBUvA(o?C7SMzJ4YdZMxRde^ctMZFxBBfFbBpkGCbt-9S/*OL*#s;@8zU573avl(+nIPsCEPy1:-;gmBiKcDrGF{7tMVtKS}T:qNq@uW5LLE=pAp3@ydX*/eEwFksR;HRG$j5[Uu;o+67h1:dtb5V#{-#-1O2}hBH#+6d}Qwx#4Tune,6hy{(JhYxHX#yfjGLWO]:HwdA^4Q%*D_6uJbU{,x/z90MVaBM.z{O[a5Lt!Gf*4X17o1%xvE(KfK:@UFKiYlvr^}WeEX}tkgC([%Eg3q@YACUpW:*KKZRi:2.HZG:kn2]Tm9s+Xf![.CF;W;7A0XOZj)dWKo{}dkVn^WTD/ht6j1?iSOgdsT0i;]2q-ALB*D*OA:S;asNQRk!=dVo/7N.4}XHJ2CHVmlta.lO:*N0TRS008oQg4i3u;4:SvMr@rw.PwiW}{A0-#otxw@28*fJKIn@jd.9nSkN=sF.b!n1sleko8-gpgpv]j.20rB?B+]vX8a{-o9h9cFRXq;k%P@l/Gia+q#/L,Tz_qR)YH)aQiCekYeboM!t8e^Xc=Rf49=i)T@!CxOf8#9s28[3,!l%*ddy,n6?yUF!lF?E+Bti4Y{k=V;6LIFMeHR,3Hx)l%/H?90{nD4rC^vCMzICiUN.)oa)$Tu#{]lnE]iEIJO6jHfl3%Wo0.s/M2Zf-uBj!0YeAKz]3{Z.N@xpZvcWj*U6IpP=SsOXbg(7,pgOuVL0g5rghdLvAr9wVTZca-8pR@Jaea^%$=G7::2n9$9Yrisx=JJy(xVVvt-km3z(VHvA.mp0lCIPKOjQD_9BYabLo]y$ZPOJY0skn9JH3+v/}^kfOi8P.J.0kiEH%/c;SOdaJ#kaCek6kTk5@AzOGZ#G{C9iX0^g(HIcmsmIn9,w3ug=9!F95bqj%77Ph#C-QFW[NhQ,;qv]j??ASK=BQFVtV4@n*3%vo%oSL2OpP5z?Fo}zZI5%:HcLWd10C;X3V7fo],TQlq$JKrm.(]afB=t96nxTJaC;yLDX-fap(4;010)1,?+i(.X5)PsNJ{kqaS/DP-BMn1O15to4pYdc6r#vjbw6oAMo3k8TW/#SAGJ409uovnQ$eJNjw;Y3{6^BAVy_-):_Ni=yPx_GcZEmw?skH-Oc%bVSI[J@pnsvEct^EbX[VczLjH8[L0.rTM8R{SVe(3YmcD55-TyD%pX+$k$q8.TRA1I#:ImK-(Jh9sw=0G.FYz})UQYzg6jl(?s!GD7[d$PyDpZ{0m@vj0:GsRV+:#_FQ4OJhC55=K5lkv.rS5y4$2:[DWhu7$$[cB$-nLQmj]LH1}.wS[Mt7$(NpuQN0oAMW:OUM59;#)8CVZK(R=4D*EaZozRL9KAe5{I4uy}jD]Jh8op5JGMeYH1xFO_-ZIf47=neTY#f8o^rkf:GG6icpafo,),0N*kv-6*2S!b5Q4sshCV*kerCiAM4u2mQ21a-}vPPbcjKDSEpFH^FOD:bs9[SZG2lE)B%N_HMl%DAg.R]r^W.v$*^+:XQ@u25VEC5x3I@(Qum7bS_[OG7Qz@h,wOG,[1T0sxI6VEZpWOu)_!p$[bu;7*BdKm$D=^6[8YE#pUmEw?gcFXdS]mb:sC.AMQZN?!Zrj_6J8h?x(dT!6;-Tw?wFm=qu?.e!Bxigk1M)di,NWZ4?92R,Ksn_tM#iuPHO*%]1qWd[9ziE.(K4Fet.Ds-a5llx[16!WIC]n8[0M{5/@TJ]X{5iE^]OAWeo{GZZe@kW)0^qI{[s8.DcPdiL)Y1-kk_RpuyXl=g14q57}J(+PgY6h@]F8=NQj$aw]k_3j</Register.lua>
    <Recorder.lua Encoding="Ascii85">*mi@/,qM$l(jtEF5Lp9BjqN(F+X@ZCg4F4k.H{G6XMF;LY*}ZH/_c@)NhS3w]oHgvq-0W--K:/Z]iwx4#Jl71[[:S=zaM[{RliT))2T}Crf]#Rky0[ps,d#-,z}aS/n]${$yh:QN$:kS]VlYZf:y=Ngh?p9hI?PDWEOL(2WLu@a^tjIUIIO?L[!B#OdnZ)]6y=qZyyHbtVEvA^:0uK/4K(6v#USJ0eSynLz99vUQ_V+7%wCkGFC*TRf(SUqVI?Qf*!J[Ayp/.4;ZA]Vukwt4.4xk3w4}Pf:U[PzenI[;:eU0Fw}URqvLo(yU6W(G/^s8Bn-BH3!=oA7kR8gLF4q/Tu}V!K?/?#NN^u%,]mVQ@!}jLt#,SmNUd:mXW40=:#,_EYxm9GhP3.qiamL{A.o@Vf%tGMwP3cfiWN*j6yAJ2Qf8Grn?l8Cc5XHy1(4qFRKR+FpFDoXR2XSJ*?dGLgeq#*Q6Hk!]Gn.g?,2,@khiy=N0g^(M0UvV-SDx=z,oA^uvn3=o%6hdLbbi%zh}.Ou^BDGI.=IecFcI(:9;;43D]x@S702lOBoAVs2*kFOav;DsHe?^wrTEfz;iGA*;;JwY0kymWS-D,/zf)+kU!FM^:86PZf9DIIx}V}[X!NN@)$nq2]gy2*nLnNWx#@s=ejrB?*X{PX+GN*cvYHJ0txQ=0#z2NZHa6x6A(ak/6/$P-s;bg%h*y5)8ykjc-}O,)xi/85=ti]6-)*8#xme6E(}rjxwvC6XubY#u,X+lUy41!D!wrjeEKQQsa-9@1j0b=Ap{rO0-(l2Mfzlyq{/RfEL^L21_}zPC10;h+Io,[0Ci}S51d*O+xHh[z[z{+Ba[j0O2mm8WwDf}a,uRx)8Ssc3b5yffJ[9;J#d6SbI6:j@bZjyKlcy*Ebx.to*PETY#+X;G7E$LVL0eV,vRq.vt2$2^1j?}LGF6}ohXR9sqW06IWPDhOUXN[=duzfrD!7L02fR3CWJu%xNVWwu7#9)Y%#,NMzge?M*R@X,T]j1BSx:9Faw.E,9-0P4N9^WO,37!.%zKge3j8AEadw2qHr=Lkb#UzJ,EyQLrk8{O9XZZWy}*5q2?(sC;XINNb4:o0r[+kRI^SiO!k;Wy.Ty!R[#;3_A0/*+mzYv-blEPg+5:K4R6o,Tl22H:%@!Mgu%{CaL+}vEDv]{S;TW{ese6xYzm3T*(kvSatHJlsg(n2D;{ncXXx^,WjDz%tl1.u!*7YI[bqoeBRwO=n6/.-mqLTO%IeTy9G)[cu6-SX2{@A==Ps.!9^C#iQobJkKm,,Fy3?QP0KV7lEo-f)ouYe}xBFe08a!9y8WCo:Fi}sIgM56gjw^8Fr37/ijo-UXlfz[Mj++]8kPP+X*#7bFUl4.oDZ%Gq@kpRT8@IK/bAic.O%18H-N(_{:mxjVs4Gf6D+)Z@j?z}6fyU,%U@@%gzuxN$hP!];aX:(YPHk-M?N1cZgEdArU3ZVjd49#SGjY6ZbU81QncxNcFAZynVbn(lV!7@qj02zJQwWk?LkxKV5i@XII2!FLqmq^3P(xbM[T+a,O2HG+am%8+-f/9ijUjRpXVPiFTB3YvEx[2oflR?(r![RRR$cy5_CaE33zIhfRzH_oc%kjqvyZw.y@b-S8WZ*%[ru0nqr2:?,P:#4+-F;plj0EnA)(gzK}f0{LR_,ixtw,u-h*A*w:Uz+VW*$jab,^B:gHv@N*}-grE^8AqOtTE8gOhX1V:TcjHmR3#TlQ5pi,/Q!Cw@JZE$:WXVt:MCB-9p(v+tWA+PPd4r2-lDoF*kCl1VF%?9.WAPyI.xH+mvJ(_;Kv3p@tQQFZ[.Cr1N)$n8%bYn$Xsb4B8/]8WFTy7Tedyxi@3zl#hb3GD)lzk_18VjMMJA=sNmM4OjDZeTFX4e1!l{7_?jcG.:8]j-qpKL;?bjsG(N/AT1puuuM4o:rd)gi(7fLVej[to0qsFeZ+9}CML]]BSXKj*hsBscXsmh1aL*N@0%/4fI9Z=p?vRXCJdxwqmkqZJ%g5*^*pG;I*XZ(/2kJu.+CEza9O,}y[:o5b6cF8N=(1mH2ZmE^cn2ZiF)fsv2l.oITRp=Ia_)-dZEB;Bc8DY.}{ODlPu^6]csnFj=VZW@OC;wYO%8X}c]%Bj%Jiy[3VddujIONImkd@uM04DzOaKF++m!(oKX)2?(C)Q!7*7%1m3.e/c3f:bKurgnq,8A[3{BAeUhuIF661tRgP1wtel?vO;ah+Z6LFZ[m26JQ(Svug4{VvSO7s390w-u8}x$5EPSjUFeE8qT?4ve5-_MMryvue/seMROE@oh1B(8n:t0Ud1Wgdu!0S23_J6JZL0d;@h:Q6a0V,nfU8wN}pFq?3@^J2yWQ[yzK04mTZ9iY%L+[/[5MCdhF$,S3A7o;:lxxB;+$+XZ!_o48(cKA8K*4o#KBaSfd^V-MFOVk_t1+jAk*+^#3{()a;-h!gN7]AH27I-_CUA2Y3nb65)YVF9W/;.N:o85Am^tmp*#OwmvLlV0ngRKqN2-/V(O.GEjH*ANaRF1*GJS)qMqBs9k+?Iks^0H+l;1@q9sXnLXq0bT{_h;!I4P$eOGPBhOQ(,z]?GG.t%((Ux7$v?sE_]E7d$I:}k@sbsh$?vH#L6jR-.baYgXvm[ZXh0*WG]Kr@18RM=P%_eNDG^1#u/og:*J$BSS$nZ9PjjwyV=j$Mj30%7CdY(s:2h;LxPI%}Ws=Huy%h%rKsRC6]MxoJcHF2F?+!As]tH0;nltOJdd1:=l+nwe@!RqwYo#)XTXN5@Ur@c:gRK^,t=sQxklxCBTlh,;cI]O3t4btAZt)uWPFq1;aRd371?X{$9GemezWDj*X;[UsX1jyzS5TT3)b[XekT${tA]cQ+lnsG[PwzIcWr2biJ29d2+4(1]!5(0K,NcPsSli)CpTgl$d8k^U?/#jVZY1q5^@y#gl*2,+,y7*fVC!])yfH^bL_6wVMIo10K2pDxHGd!?.XR/ry0PB5:OZTJTQ%m9.Yr+h]6*[wS*K,[%,gNlhZI!ouq]CQ?yB%trT3z2zS!Eb[,s?.aWuJn25?:)u!rphE4%[b+u)ds.Ddj$ju,ISUmA(rs-#Q[n5pWyG0OjDCNd{9k4,j=mIMHjK#u:tqe9.^AdBuY6h=jTU(}(1pU_GBM-DFp5X9d,ZGU49</Recorder.lua>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>777</ID>
      <Description>"&lt;&lt; Check the box."</Description>
      <Options moHideChildren="1"/>
      <Color>0000C8</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end

local const = {}

local function assign_G(tbl, name, val)
    assert(not const[name], name..' is a const.')
    Starter.log("Assign: _G['"..name.."'] = "..tostring(val))
    return rawset(tbl, name, val)
end

local function assign(tbl, name, val)
    Starter.log('Assign: '..tbl.name..'.'..name..' = '..tostring(val))
    return rawset(tbl, name, val)
end

local function createTables(...)
    local luaFile = {...}
    for i = 1, #luaFile do
        local name = luaFile[i]
        local tf = assert(findTableFile(name..'.lua'), name..'.lua not found.')
        local sl = readStringLocal(tf.stream.memory, tf.stream.size)
        local define = assert(load(sl), name..".lua can't be loaded.")
        _G[name], const[name] = nil, define()
        const[name].name = name
        setmetatable(const[name], {__newindex = assign})
    end
    return setmetatable(_G, {__index = const, __newindex = assign_G})
end

local function debugMode(isDebug)
    Register.isRestore, Register.isDebug = not isDebug, isDebug
    _G['isDebug'], Starter.isDebug = nil, isDebug
    return Starter.log(Starter.info:format(getCEVersion(), _VERSION))
end

local function includeLibrary(...)
    if Starter and Register then return end
    createTables(...); debugMode(_G['isDebug'])
    local ver, req = getCEVersion(), 7.5
    local url = "https://cheatengine.org"
    local msg = 'You using Cheat Engine '..ver..'.\nRequired that you use CE '..req..' or later.\nGo to the official site?'
    if (ver &lt; req) then Starter.lanchBrowser(url, msg); return closeCE() end
    MainForm.onClose, Starter.onClose = Starter.recommandInit, MainForm.onClose
    AddressList.onValueChange = Starter.showSelectionList
    Starter.disabledColor,  Starter.enabledColor  = 0x0000C8, 0x0064C8
    Register.disabledColor, Register.enabledColor = 0x808080, 0xD58F00
    unregisterAutoAssemblerCommand('registerlabel')
    registerAutoAssemblerCommand('registerlabel', Register.labelAndSymbol)
    return Starter.log('Ready to CheatTableLibrary.\n')
end

[ENABLE]

includeLibrary('Starter', 'Register', 'Recorder')
synchronize(function() Starter.onEnable(MainForm, AddressList) end)
Starter.onLoad(AddressList.getMemoryRecordByID(9))

[DISABLE]

synchronize(function() Starter.onDisable(AddressList) end)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"&lt;scripts&gt;"</Description>
          <Options moHideChildren="1"/>
          <Color>808080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>20</ID>
              <Description>"CE:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>2</ID>
                  <Description>"Compact Mode"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local function compactMode()
    MainForm.Splitter1.visible = memrec.active
    MainForm.Panel5.visible    = memrec.active
end

[ENABLE]

synchronize(compactMode)

[DISABLE]

synchronize(compactMode)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>3</ID>
                  <Description>"Add Hotkeys Menu"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local function assignHotkeysToTable(mr, tbl)
    if not (0 &lt; mr.HotkeyCount) then return end
    for i = 0, mr.HotkeyCount - 1 do
        tbl[#tbl + 1] = {mr.Hotkey[i].hotkeyString, mr.index, mr.description}
    end
end

local function getHotkeysTable()
    local al, tbl = getAddressList(), {}
    for i = 0, al.count - 1 do assignHotkeysToTable(al[i], tbl) end
    return tbl
end

local function viewSetHotkeys()
    local frm = Recorder.createHotkeyList(getHotkeysTable())
    frm.visible = false
    if frm.showModal() then frm.destroy() end
end

local function cleanHotkeys(mr)
    if not (0 &lt; mr.HotkeyCount) then return end
    for i = mr.HotkeyCount - 1, 0, -1 do mr.Hotkey[i].destroy() end
end

local function cleanAllHotkeys()
    local al = getAddressList()
    for i = 0, al.count - 1 do cleanHotkeys(al[i]) end
end

local function findItem(str)
    local mf = getMainForm()
    for i = mf.Menu.Items.count - 1, 0, -1 do
        if (mf.Menu.Items[i].caption == str) then return mf.Menu.Items[i] end
    end
end

local function addMenuToItem(item, str, func)
    local newMenu = createMenuItem(item)
    item.add(newMenu)
    newMenu.caption, newMenu.onClick = str, func
end

local function addHotkeyInfoItem()
    if findItem('&amp;Hotkeys') then return end
    local mf = getMainForm()
    local HotKeyInfoItem = createMenuItem(mf.Menu.Items)
    mf.Menu.Items.add(HotKeyInfoItem)
    HotKeyInfoItem.caption = '&amp;Hotkeys'
    addMenuToItem(HotKeyInfoItem, 'List view', viewSetHotkeys)
    addMenuToItem(HotKeyInfoItem, 'Clean all', cleanAllHotkeys)
end

[ENABLE]

return assert(Recorder, 'Recorder required') and synchronize(addHotkeyInfoItem)

[DISABLE]

findItem('&amp;Hotkeys').destroy()
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"CT:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"Save Checkbox States"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

local mainScript = AddressList.getMemoryRecordByID(777)
local loadScript = AddressList.getMemoryRecordByID(9)

Register.loadCheckboxStates(mainScript, loadScript); return 'nop'

[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>6</ID>
                      <Description>"Notes:"</Description>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>7</ID>
                          <Description>"If saved, states of the checkbox can be restored when CT is started next time."</Description>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>8</ID>
                          <Description>"If they are variables, the values are also saved. (supports AllowIncrease/Decrease)"</Description>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>9</ID>
                  <Description>"Load Checkbox States"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

local mr = {
    Recorder.getChild(AddressList["&gt;&gt; WitchSpring R"], "&lt;scripts&gt;"),
    Recorder.getChild(AddressList["&lt;scripts&gt;"], "CE:"),
    Recorder.getChild(AddressList["&lt;scripts&gt;"], "CT:"),
    Recorder.getChild(AddressList["&lt;scripts&gt;"], "Field:"),
    Recorder.getChild(AddressList["Field:"], "Walk Speed Multiplier"),
    Recorder.getChild(AddressList["&lt;scripts&gt;"], "Battle:"),
    Recorder.getChild(AddressList["Battle:"], "Infinite HP"),
    Recorder.getChild(AddressList["Battle:"], "EXP Gained Multiplier"),
    Recorder.getChild(AddressList["&lt;scripts&gt;"], "Home:"),
    Recorder.getChild(AddressList["Home:"], "Infinite Training"),
    Recorder.getChild(AddressList["Home:"], "Training Result Multiplier"),
    Recorder.getChild(AddressList["Home:"], "Ignore Crafting Costs"),
    Recorder.getChild(AddressList["Home:"], "Ignore Non-nutrient Essential Ingredients"),
    Recorder.getChild(AddressList["&lt;scripts&gt;"], "Weapon Reforge:"),
    Recorder.getChild(AddressList["Weapon Reforge:"], "No Material Loss"),
    Recorder.getChild(AddressList["Weapon Reforge:"], "Always Best Results")
}

synchronize(function() Register.enableMemoryRecords(mr) end); return 'nop'

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"Expand All"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local function enableHeader(memrec)
    if (memrec.type == vtAutoAssembler) then return end
    memrec.active = memrec.isAddressGroupHeader or memrec.isGroupHeader
    return memrec.active
end

local function enableHeaders(memrec)
    for i = 0, memrec.count - 1 do
        local mr = memrec[i]
        if enableHeader(mr) and (0 &lt; mr.count) then enableHeaders(mr) end
    end
end

[ENABLE]

enableHeaders(AddressList.getMemoryRecordByID(777)); return 'nop'

[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11</ID>
                      <Description>"Note: Enable all headers."</Description>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"Check Updates"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

Starter.lanchBrowser("https://fearlessrevolution.com/viewtopic.php?p=316783#p316783")
return "nop"

[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>10046</ID>
              <Description>"Field:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>10047</ID>
                  <Description>"Walk Speed Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

registerlabel(walk_spd_times)

mem0x01:
  readmem(read_walkSpeed,5)
  mulss xmm0,[walk_spd_times]
  jmp return
  align 10 CC

walk_spd_times:
  dd (float)1.5

read_walkSpeed:
  jmp mem0x01
return:

[DISABLE]

read_walkSpeed:
  readmem(mem0x01,5)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: read_walkSpeed

GameAssembly.dll.il2cpp+15D5A9C: 48 8B 88 B8 00 00 00     - mov rcx,[rax+000000B8]
GameAssembly.dll.il2cpp+15D5AA3: 48 8B 09                 - mov rcx,[rcx]
GameAssembly.dll.il2cpp+15D5AA6: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+15D5AA9: 74 10                    - je GameAssembly.dll.il2cpp+15D5ABB
GameAssembly.dll.il2cpp+15D5AAB: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll.il2cpp+15D5AAE: 48 8B D3                 - mov rdx,rbx
GameAssembly.dll.il2cpp+15D5AB1: 48 83 C4 20              - add rsp,20
GameAssembly.dll.il2cpp+15D5AB5: 5B                       - pop rbx
GameAssembly.dll.il2cpp+15D5AB6: E9 05 31 22 00           - jmp SaveBox.ReadString
GameAssembly.dll.il2cpp+15D5ABB: E8 E0 E9 9E FE           - call GameAssembly.dll.text+2954A0
GameAssembly.dll.il2cpp+15D5AC0: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC1: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC2: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC3: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC4: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC5: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC6: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC7: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC8: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AC9: CC                       - int 3
GameAssembly.dll.il2cpp+15D5ACA: CC                       - int 3
GameAssembly.dll.il2cpp+15D5ACB: CC                       - int 3
GameAssembly.dll.il2cpp+15D5ACC: CC                       - int 3
GameAssembly.dll.il2cpp+15D5ACD: CC                       - int 3
GameAssembly.dll.il2cpp+15D5ACE: CC                       - int 3
GameAssembly.dll.il2cpp+15D5ACF: CC                       - int 3
WS1RCLASS.DataSet.GetWalkSpeed: 48 83 EC 28              - sub rsp,28
GameAssembly.dll.il2cpp+15D5AD4: 48 8B 41 28              - mov rax,[rcx+28]
GameAssembly.dll.il2cpp+15D5AD8: 48 85 C0                 - test rax,rax
GameAssembly.dll.il2cpp+15D5ADB: 74 0A                    - je GameAssembly.dll.il2cpp+15D5AE7
// ---------- INJECTING HERE ----------
read_walkSpeed: F3 0F 10 40 5C           - movss xmm0,[rax+5C]
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+15D5AE2: 48 83 C4 28              - add rsp,28
GameAssembly.dll.il2cpp+15D5AE6: C3                       - ret
GameAssembly.dll.il2cpp+15D5AE7: E8 B4 E9 9E FE           - call GameAssembly.dll.text+2954A0
GameAssembly.dll.il2cpp+15D5AEC: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AED: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AEE: CC                       - int 3
GameAssembly.dll.il2cpp+15D5AEF: CC                       - int 3
WS1RCLASS.DataSet.GetWeaponNutrialPercent: 48 89 6C 24 18           - mov [rsp+18],rbp
GameAssembly.dll.il2cpp+15D5AF5: 56                       - push rsi
GameAssembly.dll.il2cpp+15D5AF6: 41 56                    - push r14
GameAssembly.dll.il2cpp+15D5AF8: 41 57                    - push r15
GameAssembly.dll.il2cpp+15D5AFA: 48 83 EC 40              - sub rsp,40
GameAssembly.dll.il2cpp+15D5AFE: 80 3D 31 70 C0 00 00     - cmp byte ptr [GameAssembly.dll+24AEB36],00
GameAssembly.dll.il2cpp+15D5B05: 4C 8B FA                 - mov r15,rdx
GameAssembly.dll.il2cpp+15D5B08: 0F 29 7C 24 20           - movaps [rsp+20],xmm7
GameAssembly.dll.il2cpp+15D5B0D: 48 8B E9                 - mov rbp,rcx
GameAssembly.dll.il2cpp+15D5B10: 75 2B                    - jne GameAssembly.dll.il2cpp+15D5B3D
GameAssembly.dll.il2cpp+15D5B12: 48 8D 0D A7 18 B4 00     - lea rcx,[GameAssembly.dll.data+1443C0]
GameAssembly.dll.il2cpp+15D5B19: E8 12 E8 9E FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+15D5B1E: 48 8D 0D 33 19 B4 00     - lea rcx,[GameAssembly.dll.data+144458]
GameAssembly.dll.il2cpp+15D5B25: E8 06 E8 9E FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+15D5B2A: 48 8D 0D 8F 8C B7 00     - lea rcx,[GameAssembly.dll.data+17B7C0]
GameAssembly.dll.il2cpp+15D5B31: E8 FA E7 9E FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+15D5B36: C6 05 F9 6F C0 00 01     - mov byte ptr [GameAssembly.dll+24AEB36],01
GameAssembly.dll.il2cpp+15D5B3D: 48 8B 4D 48              - mov rcx,[rbp+48]
GameAssembly.dll.il2cpp+15D5B41: 45 33 F6                 - xor r14d,r14d
GameAssembly.dll.il2cpp+15D5B44: F3 0F 10 3D 1C F0 45 00  - movss xmm7,[GameAssembly.dll.rdata+3FB68]
GameAssembly.dll.il2cpp+15D5B4C: 41 8B F6                 - mov esi,r14d
GameAssembly.dll.il2cpp+15D5B4F: 48 89 5C 24 60           - mov [rsp+60],rbx
GameAssembly.dll.il2cpp+15D5B54: 41 8B D6                 - mov edx,r14d
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10067</ID>
                      <Description>"times"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>walk_spd_times</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>10024</ID>
              <Description>"Battle:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>10025</ID>
                  <Description>"Infinite HP"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local now = Recorder.getChild(AddressList["P-&gt;PlayerStat"], "hp")
local max = Recorder.getChild(AddressList["P-&gt;PlayerStat"], "maxHp")

[ENABLE]

local timer = createTimer()

local function update(timer)
    if not memrec.active then return timer.destroy() end
    Recorder.writeValue(now, max)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10026</ID>
                  <Description>"Infinite MP"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local now = Recorder.getChild(AddressList["P-&gt;PlayerStat"], "mp")
local max = Recorder.getChild(AddressList["P-&gt;PlayerStat"], "maxMp")

[ENABLE]

local timer = createTimer()

local function update(timer)
    if not memrec.active then return timer.destroy() end
    Recorder.writeValue(now, max)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10265</ID>
                  <Description>"Physical Damage Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

registerlabel(ps_dmg_times)

mem0x04:
  readmem(read_str,5)
  imul ebx,[ps_dmg_times]
  jmp return
  align 10 CC

ps_dmg_times:
  dd #10

read_str:
  jmp mem0x04
return:

[DISABLE]

read_str:
  readmem(mem0x04,5)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: read_str

GameAssembly.dll.il2cpp+1751F47: CC                    - int 3
GameAssembly.dll.il2cpp+1751F48: CC                    - int 3
GameAssembly.dll.il2cpp+1751F49: CC                    - int 3
GameAssembly.dll.il2cpp+1751F4A: CC                    - int 3
GameAssembly.dll.il2cpp+1751F4B: CC                    - int 3
GameAssembly.dll.il2cpp+1751F4C: CC                    - int 3
GameAssembly.dll.il2cpp+1751F4D: CC                    - int 3
GameAssembly.dll.il2cpp+1751F4E: CC                    - int 3
GameAssembly.dll.il2cpp+1751F4F: CC                    - int 3
StatCalculation.GetSTR: 40 57                 - push rdi
GameAssembly.dll.il2cpp+1751F52: 48 83 EC 20           - sub rsp,20
GameAssembly.dll.il2cpp+1751F56: 80 3D 74 B5 A8 00 00  - cmp byte ptr [GameAssembly.dll+24AF4D1],00
GameAssembly.dll.il2cpp+1751F5D: 48 8B F9              - mov rdi,rcx
GameAssembly.dll.il2cpp+1751F60: 75 13                 - jne GameAssembly.dll.il2cpp+1751F75
GameAssembly.dll.il2cpp+1751F62: 48 8D 0D 5F 28 A1 00  - lea rcx,[GameAssembly.dll.data+1917C8]
GameAssembly.dll.il2cpp+1751F69: E8 C2 23 87 FE        - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+1751F6E: C6 05 5C B5 A8 00 01  - mov byte ptr [GameAssembly.dll+24AF4D1],01
GameAssembly.dll.il2cpp+1751F75: 48 8B 05 4C 28 A1 00  - mov rax,[GameAssembly.dll.data+1917C8]
GameAssembly.dll.il2cpp+1751F7C: 48 89 5C 24 30        - mov [rsp+30],rbx
GameAssembly.dll.il2cpp+1751F81: 48 89 74 24 38        - mov [rsp+38],rsi
GameAssembly.dll.il2cpp+1751F86: 48 8B 90 B8 00 00 00  - mov rdx,[rax+000000B8]
GameAssembly.dll.il2cpp+1751F8D: 48 8B 02              - mov rax,[rdx]
GameAssembly.dll.il2cpp+1751F90: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+1751F93: 0F 84 B7 00 00 00     - je GameAssembly.dll.il2cpp+1752050
GameAssembly.dll.il2cpp+1751F99: 48 8B 40 50           - mov rax,[rax+50]
GameAssembly.dll.il2cpp+1751F9D: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+1751FA0: 0F 84 AA 00 00 00     - je GameAssembly.dll.il2cpp+1752050
GameAssembly.dll.il2cpp+1751FA6: 48 8B 48 28           - mov rcx,[rax+28]
GameAssembly.dll.il2cpp+1751FAA: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+1751FAD: 0F 84 9D 00 00 00     - je GameAssembly.dll.il2cpp+1752050
// ---------- INJECTING HERE ----------
read_str: 8B 59 34              - mov ebx,[rcx+34]
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+1751FB6: 33 D2                 - xor edx,edx
GameAssembly.dll.il2cpp+1751FB8: 48 8B CF              - mov rcx,rdi
GameAssembly.dll.il2cpp+1751FBB: E8 E0 F7 FF FF        - call StatCalculation.GetPlusStat_STR
GameAssembly.dll.il2cpp+1751FC0: 8D 3C 03              - lea edi,[rbx+rax]
GameAssembly.dll.il2cpp+1751FC3: 48 8B 05 FE 27 A1 00  - mov rax,[GameAssembly.dll.data+1917C8]
GameAssembly.dll.il2cpp+1751FCA: 48 8B 88 B8 00 00 00  - mov rcx,[rax+000000B8]
GameAssembly.dll.il2cpp+1751FD1: 48 8B 01              - mov rax,[rcx]
GameAssembly.dll.il2cpp+1751FD4: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+1751FD7: 74 77                 - je GameAssembly.dll.il2cpp+1752050
GameAssembly.dll.il2cpp+1751FD9: 48 8B 48 78           - mov rcx,[rax+78]
GameAssembly.dll.il2cpp+1751FDD: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+1751FE0: 74 6E                 - je GameAssembly.dll.il2cpp+1752050
GameAssembly.dll.il2cpp+1751FE2: 80 79 40 00           - cmp byte ptr [rcx+40],00
GameAssembly.dll.il2cpp+1751FE6: 74 56                 - je GameAssembly.dll.il2cpp+175203E
GameAssembly.dll.il2cpp+1751FE8: 48 8B 40 68           - mov rax,[rax+68]
GameAssembly.dll.il2cpp+1751FEC: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+1751FEF: 74 5F                 - je GameAssembly.dll.il2cpp+1752050
GameAssembly.dll.il2cpp+1751FF1: 48 8B 40 28           - mov rax,[rax+28]
GameAssembly.dll.il2cpp+1751FF5: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+1751FF8: 74 56                 - je GameAssembly.dll.il2cpp+1752050
GameAssembly.dll.il2cpp+1751FFA: 48 8B B0 38 01 00 00  - mov rsi,[rax+00000138]
GameAssembly.dll.il2cpp+1752001: 48 85 F6              - test rsi,rsi
GameAssembly.dll.il2cpp+1752004: 74 4A                 - je GameAssembly.dll.il2cpp+1752050
GameAssembly.dll.il2cpp+1752006: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+1752009: 48 8B CE              - mov rcx,rsi
GameAssembly.dll.il2cpp+175200C: 41 8D 50 03           - lea edx,[r8+03]
GameAssembly.dll.il2cpp+1752010: E8 CB 25 F4 FF        - call PlayerBattle.GetBuffValue_Int
GameAssembly.dll.il2cpp+1752015: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+1752018: 48 8B CE              - mov rcx,rsi
GameAssembly.dll.il2cpp+175201B: 8D 1C 07              - lea ebx,[rdi+rax]
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10266</ID>
                      <Description>"times"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>ps_dmg_times</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>10290</ID>
                  <Description>"Magic Damage Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

registerlabel(mg_dmg_times)

mem0x05:
  readmem(read_sp,5)
  imul ebx,[mg_dmg_times]
  jmp return
  align 10 CC

mg_dmg_times:
  dd #10

read_sp:
  jmp mem0x05
return:

[DISABLE]

read_sp:
  readmem(mem0x05,5)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: read_sp

GameAssembly.dll.il2cpp+18ED3D8: 48 8B 5C 24 30        - mov rbx,[rsp+30]
GameAssembly.dll.il2cpp+18ED3DD: 48 83 C4 20           - add rsp,20
GameAssembly.dll.il2cpp+18ED3E1: 5F                    - pop rdi
GameAssembly.dll.il2cpp+18ED3E2: C3                    - ret
GameAssembly.dll.il2cpp+18ED3E3: E8 28 71 6D FE        - call GameAssembly.dll.text+295510
GameAssembly.dll.il2cpp+18ED3E8: CC                    - int 3
GameAssembly.dll.il2cpp+18ED3E9: E8 22 71 6D FE        - call GameAssembly.dll.text+295510
GameAssembly.dll.il2cpp+18ED3EE: CC                    - int 3
GameAssembly.dll.il2cpp+18ED3EF: CC                    - int 3
StatCalculation.GetSP: 40 57                 - push rdi
GameAssembly.dll.il2cpp+18ED3F2: 48 83 EC 20           - sub rsp,20
GameAssembly.dll.il2cpp+18ED3F6: 80 3D 08 F6 8F 00 00  - cmp byte ptr [GameAssembly.dll+24BEA05],00
GameAssembly.dll.il2cpp+18ED3FD: 48 8B F9              - mov rdi,rcx
GameAssembly.dll.il2cpp+18ED400: 75 13                 - jne GameAssembly.dll.il2cpp+18ED415
GameAssembly.dll.il2cpp+18ED402: 48 8D 0D C7 F8 80 00  - lea rcx,[GameAssembly.dll.data+11BCD0]
GameAssembly.dll.il2cpp+18ED409: E8 92 6F 6D FE        - call GameAssembly.dll.text+2953A0
GameAssembly.dll.il2cpp+18ED40E: C6 05 F0 F5 8F 00 01  - mov byte ptr [GameAssembly.dll+24BEA05],01
GameAssembly.dll.il2cpp+18ED415: 48 8B 05 B4 F8 80 00  - mov rax,[GameAssembly.dll.data+11BCD0]
GameAssembly.dll.il2cpp+18ED41C: 48 89 5C 24 30        - mov [rsp+30],rbx
GameAssembly.dll.il2cpp+18ED421: 48 89 74 24 38        - mov [rsp+38],rsi
GameAssembly.dll.il2cpp+18ED426: 48 8B 90 B8 00 00 00  - mov rdx,[rax+000000B8]
GameAssembly.dll.il2cpp+18ED42D: 48 8B 02              - mov rax,[rdx]
GameAssembly.dll.il2cpp+18ED430: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+18ED433: 0F 84 B7 00 00 00     - je GameAssembly.dll.il2cpp+18ED4F0
GameAssembly.dll.il2cpp+18ED439: 48 8B 40 50           - mov rax,[rax+50]
GameAssembly.dll.il2cpp+18ED43D: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+18ED440: 0F 84 AA 00 00 00     - je GameAssembly.dll.il2cpp+18ED4F0
GameAssembly.dll.il2cpp+18ED446: 48 8B 48 28           - mov rcx,[rax+28]
GameAssembly.dll.il2cpp+18ED44A: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+18ED44D: 0F 84 9D 00 00 00     - je GameAssembly.dll.il2cpp+18ED4F0
// ---------- INJECTING HERE ----------
read_sp: 8B 59 38              - mov ebx,[rcx+38]
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+18ED456: 33 D2                 - xor edx,edx
GameAssembly.dll.il2cpp+18ED458: 48 8B CF              - mov rcx,rdi
GameAssembly.dll.il2cpp+18ED45B: E8 C0 F5 FF FF        - call StatCalculation.GetPlusStat_SP
GameAssembly.dll.il2cpp+18ED460: 8D 3C 03              - lea edi,[rbx+rax]
GameAssembly.dll.il2cpp+18ED463: 48 8B 05 66 F8 80 00  - mov rax,[GameAssembly.dll.data+11BCD0]
GameAssembly.dll.il2cpp+18ED46A: 48 8B 88 B8 00 00 00  - mov rcx,[rax+000000B8]
GameAssembly.dll.il2cpp+18ED471: 48 8B 01              - mov rax,[rcx]
GameAssembly.dll.il2cpp+18ED474: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+18ED477: 74 77                 - je GameAssembly.dll.il2cpp+18ED4F0
GameAssembly.dll.il2cpp+18ED479: 48 8B 48 78           - mov rcx,[rax+78]
GameAssembly.dll.il2cpp+18ED47D: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+18ED480: 74 6E                 - je GameAssembly.dll.il2cpp+18ED4F0
GameAssembly.dll.il2cpp+18ED482: 80 79 40 00           - cmp byte ptr [rcx+40],00
GameAssembly.dll.il2cpp+18ED486: 74 56                 - je GameAssembly.dll.il2cpp+18ED4DE
GameAssembly.dll.il2cpp+18ED488: 48 8B 40 68           - mov rax,[rax+68]
GameAssembly.dll.il2cpp+18ED48C: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+18ED48F: 74 5F                 - je GameAssembly.dll.il2cpp+18ED4F0
GameAssembly.dll.il2cpp+18ED491: 48 8B 40 28           - mov rax,[rax+28]
GameAssembly.dll.il2cpp+18ED495: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+18ED498: 74 56                 - je GameAssembly.dll.il2cpp+18ED4F0
GameAssembly.dll.il2cpp+18ED49A: 48 8B B0 48 01 00 00  - mov rsi,[rax+00000148]
GameAssembly.dll.il2cpp+18ED4A1: 48 85 F6              - test rsi,rsi
GameAssembly.dll.il2cpp+18ED4A4: 74 4A                 - je GameAssembly.dll.il2cpp+18ED4F0
GameAssembly.dll.il2cpp+18ED4A6: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+18ED4A9: 48 8B CE              - mov rcx,rsi
GameAssembly.dll.il2cpp+18ED4AC: 41 8D 50 02           - lea edx,[r8+02]
GameAssembly.dll.il2cpp+18ED4B0: E8 AB 51 DA FF        - call PlayerBattle.GetBuffValue_Int
GameAssembly.dll.il2cpp+18ED4B5: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+18ED4B8: 48 8B CE              - mov rcx,rsi
GameAssembly.dll.il2cpp+18ED4BB: 8D 1C 07              - lea ebx,[rdi+rax]
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10291</ID>
                      <Description>"times"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>mg_dmg_times</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>10240</ID>
                  <Description>"EXP Gained Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

registerlabel(exp_times)

mem0x03:
  readmem(trace_exp_gain,8)
  imul r14d,[exp_times]
  mov [r12+rax],r14d
  jmp return
  align 10 CC

exp_times:
  dd #10

trace_exp_gain:
  jmp mem0x03
  nop 3
return:

[DISABLE]

trace_exp_gain:
  readmem(mem0x03,8)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: trace_exp_gain

GameAssembly.dll.il2cpp+17C874C: 48 85 C9                    - test rcx,rcx
GameAssembly.dll.il2cpp+17C874F: 0F 84 B5 02 00 00           - je GameAssembly.dll.il2cpp+17C8A0A
GameAssembly.dll.il2cpp+17C8755: 33 D2                       - xor edx,edx
GameAssembly.dll.il2cpp+17C8757: E8 74 64 F8 FF              - call StatCalculation.GetBattleLevel
GameAssembly.dll.il2cpp+17C875C: 89 44 24 30                 - mov [rsp+30],eax
GameAssembly.dll.il2cpp+17C8760: 33 DB                       - xor ebx,ebx
GameAssembly.dll.il2cpp+17C8762: 33 C0                       - xor eax,eax
GameAssembly.dll.il2cpp+17C8764: 48 85 F6                    - test rsi,rsi
GameAssembly.dll.il2cpp+17C8767: 0F 84 9D 02 00 00           - je GameAssembly.dll.il2cpp+17C8A0A
GameAssembly.dll.il2cpp+17C876D: F3 44 0F 10 05 4A EC 2B 00  - movss xmm8,[GameAssembly.dll.rdata+923C0]
GameAssembly.dll.il2cpp+17C8776: 41 BC 20 00 00 00           - mov r12d,00000020
GameAssembly.dll.il2cpp+17C877C: F3 0F 10 3D F4 0C 28 00     - movss xmm7,[GameAssembly.dll.rdata+54478]
GameAssembly.dll.il2cpp+17C8784: 4C 89 64 24 40              - mov [rsp+40],r12
GameAssembly.dll.il2cpp+17C8789: 0F 1F 80 00 00 00 00        - nop dword ptr [rax+00000000]
GameAssembly.dll.il2cpp+17C8790: 3B 46 18                    - cmp eax,[rsi+18]
GameAssembly.dll.il2cpp+17C8793: 0F 8D A5 01 00 00           - jnl GameAssembly.dll.il2cpp+17C893E
GameAssembly.dll.il2cpp+17C8799: 48 8B 45 28                 - mov rax,[rbp+28]
GameAssembly.dll.il2cpp+17C879D: 48 85 C0                    - test rax,rax
GameAssembly.dll.il2cpp+17C87A0: 0F 84 64 02 00 00           - je GameAssembly.dll.il2cpp+17C8A0A
GameAssembly.dll.il2cpp+17C87A6: 4C 8B 78 28                 - mov r15,[rax+28]
GameAssembly.dll.il2cpp+17C87AA: 4D 85 FF                    - test r15,r15
GameAssembly.dll.il2cpp+17C87AD: 0F 84 57 02 00 00           - je GameAssembly.dll.il2cpp+17C8A0A
GameAssembly.dll.il2cpp+17C87B3: 4C 8B 74 24 38              - mov r14,[rsp+38]
GameAssembly.dll.il2cpp+17C87B8: 45 8B 6F 44                 - mov r13d,[r15+44]
GameAssembly.dll.il2cpp+17C87BC: 4D 85 F6                    - test r14,r14
GameAssembly.dll.il2cpp+17C87BF: 0F 84 45 02 00 00           - je GameAssembly.dll.il2cpp+17C8A0A
GameAssembly.dll.il2cpp+17C87C5: 41 3B 5E 18                 - cmp ebx,[r14+18]
GameAssembly.dll.il2cpp+17C87C9: 72 07                       - jb trace_exp_gain
GameAssembly.dll.il2cpp+17C87CB: 33 C9                       - xor ecx,ecx
GameAssembly.dll.il2cpp+17C87CD: E8 7E 73 3E FF              - call System.ThrowHelper.ThrowArgumentOutOfRangeException
// ---------- INJECTING HERE ----------
trace_exp_gain: 49 8B 46 10                 - mov rax,[r14+10]
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+17C87D6: 45 8B 34 04                 - mov r14d,[r12+rax]
GameAssembly.dll.il2cpp+17C87DA: 48 85 FF                    - test rdi,rdi
GameAssembly.dll.il2cpp+17C87DD: 0F 84 27 02 00 00           - je GameAssembly.dll.il2cpp+17C8A0A
GameAssembly.dll.il2cpp+17C87E3: 3B 5F 18                    - cmp ebx,[rdi+18]
GameAssembly.dll.il2cpp+17C87E6: 72 07                       - jb GameAssembly.dll.il2cpp+17C87EF
GameAssembly.dll.il2cpp+17C87E8: 33 C9                       - xor ecx,ecx
GameAssembly.dll.il2cpp+17C87EA: E8 61 73 3E FF              - call System.ThrowHelper.ThrowArgumentOutOfRangeException
GameAssembly.dll.il2cpp+17C87EF: 48 8B 47 10                 - mov rax,[rdi+10]
GameAssembly.dll.il2cpp+17C87F3: 46 0F AF 34 20              - imul r14d,[rax+r12]
GameAssembly.dll.il2cpp+17C87F8: 45 03 F5                    - add r14d,r13d
GameAssembly.dll.il2cpp+17C87FB: 45 89 77 44                 - mov [r15+44],r14d
GameAssembly.dll.il2cpp+17C87FF: 48 8B 4D 38                 - mov rcx,[rbp+38]
GameAssembly.dll.il2cpp+17C8803: 48 85 C9                    - test rcx,rcx
GameAssembly.dll.il2cpp+17C8806: 0F 84 FE 01 00 00           - je GameAssembly.dll.il2cpp+17C8A0A
GameAssembly.dll.il2cpp+17C880C: 48 8B 15 F5 5A 96 00        - mov rdx,[GameAssembly.dll.data+15B308]
GameAssembly.dll.il2cpp+17C8813: 45 33 C9                    - xor r9d,r9d
GameAssembly.dll.il2cpp+17C8816: 48 C7 44 24 20 00 00 00 00  - mov qword ptr [rsp+20],00000000
GameAssembly.dll.il2cpp+17C881F: 45 8D 41 04                 - lea r8d,[r9+04]
GameAssembly.dll.il2cpp+17C8823: E8 78 BD 05 00              - call UIOperator.MakePanel
GameAssembly.dll.il2cpp+17C8828: 4C 8B F8                    - mov r15,rax
GameAssembly.dll.il2cpp+17C882B: 48 85 C0                    - test rax,rax
GameAssembly.dll.il2cpp+17C882E: 0F 84 D6 01 00 00           - je GameAssembly.dll.il2cpp+17C8A0A
GameAssembly.dll.il2cpp+17C8834: 48 8B 15 95 F8 94 00        - mov rdx,[GameAssembly.dll.data+1450D0]
GameAssembly.dll.il2cpp+17C883B: 48 8B C8                    - mov rcx,rax
GameAssembly.dll.il2cpp+17C883E: E8 5D 34 8C FE              - call GameAssembly.dll.il2cpp+8BCA0
GameAssembly.dll.il2cpp+17C8843: 4C 8B E8                    - mov r13,rax
GameAssembly.dll.il2cpp+17C8846: 3B 5E 18                    - cmp ebx,[rsi+18]
GameAssembly.dll.il2cpp+17C8849: 72 07                       - jb GameAssembly.dll.il2cpp+17C8852
GameAssembly.dll.il2cpp+17C884B: 33 C9                       - xor ecx,ecx
GameAssembly.dll.il2cpp+17C884D: E8 FE 72 3E FF              - call System.ThrowHelper.ThrowArgumentOutOfRangeException
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10241</ID>
                      <Description>"times"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>exp_times</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>10068</ID>
              <Description>"Home:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>10165</ID>
                  <Description>"Infinite Training"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local training = Recorder.getChild(AddressList["P-&gt;TimeStat"], "trainingCount")

[ENABLE]

local timer = createTimer()

local function update(timer)
    if not memrec.active then return timer.destroy() end
    Recorder.writeValue(training, 5)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10190</ID>
                  <Description>"Training Result Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

registerlabel(training_times)

mem0x02:
  readmem(read_statResult,7)
  mov r8d,[r12+rax]
  imul r8d,[training_times]
  mov [r12+rax],r8d
  jmp return
  align 10 CC

training_times:
  dd #10

read_statResult:
  jmp mem0x02
  nop 2
return:

[DISABLE]

read_statResult:
  readmem(mem0x02,7)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: read_statResult

GameAssembly.dll.il2cpp+1948E82: 48 8B 47 10           - mov rax,[rdi+10]
GameAssembly.dll.il2cpp+1948E86: 33 D2                 - xor edx,edx
GameAssembly.dll.il2cpp+1948E88: 66 0F 6E 40 34        - movd xmm0,[rax+34]
GameAssembly.dll.il2cpp+1948E8D: 0F 5B C0              - cvtdq2ps xmm0,xmm0
GameAssembly.dll.il2cpp+1948E90: F3 0F 59 45 54        - mulss xmm0,[rbp+54]
GameAssembly.dll.il2cpp+1948E95: E8 D6 60 39 FF        - call UnityEngine.Mathf.CeilToInt
GameAssembly.dll.il2cpp+1948E9A: 4C 8B 0D 5F 56 80 00  - mov r9,[GameAssembly.dll.data+17B500]
GameAssembly.dll.il2cpp+1948EA1: BA 05 00 00 00        - mov edx,00000005
GameAssembly.dll.il2cpp+1948EA6: 48 8B CE              - mov rcx,rsi
GameAssembly.dll.il2cpp+1948EA9: 46 8D 04 38           - lea r8d,[rax+r15]
GameAssembly.dll.il2cpp+1948EAD: E8 2E 2C AB FF        - call GameAssembly.dll.il2cpp+13FBAE0
GameAssembly.dll.il2cpp+1948EB2: 4C 8B 7C 24 70        - mov r15,[rsp+70]
GameAssembly.dll.il2cpp+1948EB7: 41 FF C5              - inc r13d
GameAssembly.dll.il2cpp+1948EBA: 48 8B 83 A0 01 00 00  - mov rax,[rbx+000001A0]
GameAssembly.dll.il2cpp+1948EC1: 49 83 C7 08           - add r15,08
GameAssembly.dll.il2cpp+1948EC5: 4C 89 7C 24 70        - mov [rsp+70],r15
GameAssembly.dll.il2cpp+1948ECA: 41 8B CD              - mov ecx,r13d
GameAssembly.dll.il2cpp+1948ECD: 48 8B F0              - mov rsi,rax
GameAssembly.dll.il2cpp+1948ED0: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+1948ED3: 0F 84 91 01 00 00     - je GameAssembly.dll.il2cpp+194906A
GameAssembly.dll.il2cpp+1948ED9: E9 E2 FB FF FF        - jmp GameAssembly.dll.il2cpp+1948AC0
GameAssembly.dll.il2cpp+1948EDE: 66 90                 - nop 2
GameAssembly.dll.il2cpp+1948EE0: 48 8B B3 B0 01 00 00  - mov rsi,[rbx+000001B0]
GameAssembly.dll.il2cpp+1948EE7: 48 85 F6              - test rsi,rsi
GameAssembly.dll.il2cpp+1948EEA: 0F 84 7A 01 00 00     - je GameAssembly.dll.il2cpp+194906A
GameAssembly.dll.il2cpp+1948EF0: 44 3B 76 18           - cmp r14d,[rsi+18]
GameAssembly.dll.il2cpp+1948EF4: 72 07                 - jb GameAssembly.dll.il2cpp+1948EFD
GameAssembly.dll.il2cpp+1948EF6: 33 C9                 - xor ecx,ecx
GameAssembly.dll.il2cpp+1948EF8: E8 53 6C 26 FF        - call System.ThrowHelper.ThrowArgumentOutOfRangeException
GameAssembly.dll.il2cpp+1948EFD: 48 8B 46 10           - mov rax,[rsi+10]
// ---------- INJECTING HERE ----------
read_statResult: 48 8B 8B F0 00 00 00  - mov rcx,[rbx+000000F0]
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+1948F08: 41 83 3C 04 00        - cmp dword ptr [r12+rax],00
GameAssembly.dll.il2cpp+1948F0D: 0F 84 93 00 00 00     - je GameAssembly.dll.il2cpp+1948FA6
GameAssembly.dll.il2cpp+1948F13: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+1948F16: 0F 84 4E 01 00 00     - je GameAssembly.dll.il2cpp+194906A
GameAssembly.dll.il2cpp+1948F1C: 48 8B 49 18           - mov rcx,[rcx+18]
GameAssembly.dll.il2cpp+1948F20: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+1948F23: 0F 84 41 01 00 00     - je GameAssembly.dll.il2cpp+194906A
GameAssembly.dll.il2cpp+1948F29: 4C 8B 05 18 5F 7C 00  - mov r8,[GameAssembly.dll.data+13BE48]
GameAssembly.dll.il2cpp+1948F30: 41 8B D6              - mov edx,r14d
GameAssembly.dll.il2cpp+1948F33: E8 98 40 46 FE        - call GameAssembly.il2cpp_custom_attrs_free+2FB0
GameAssembly.dll.il2cpp+1948F38: 4C 8B 05 A1 54 80 00  - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+1948F3F: 41 8B D6              - mov edx,r14d
GameAssembly.dll.il2cpp+1948F42: 48 8B CF              - mov rcx,rdi
GameAssembly.dll.il2cpp+1948F45: 48 8B F0              - mov rsi,rax
GameAssembly.dll.il2cpp+1948F48: E8 A3 17 47 FE        - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+1948F4D: 33 D2                 - xor edx,edx
GameAssembly.dll.il2cpp+1948F4F: 89 44 24 60           - mov [rsp+60],eax
GameAssembly.dll.il2cpp+1948F53: 48 8D 4C 24 60        - lea rcx,[rsp+60]
GameAssembly.dll.il2cpp+1948F58: E8 83 35 48 FF        - call GameAssembly.dll.il2cpp+DCC4E0
GameAssembly.dll.il2cpp+1948F5D: 48 8B 8B B0 01 00 00  - mov rcx,[rbx+000001B0]
GameAssembly.dll.il2cpp+1948F64: 48 8B E8              - mov rbp,rax
GameAssembly.dll.il2cpp+1948F67: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+1948F6A: 0F 84 FA 00 00 00     - je GameAssembly.dll.il2cpp+194906A
GameAssembly.dll.il2cpp+1948F70: 4C 8B 05 69 54 80 00  - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+1948F77: 41 8B D6              - mov edx,r14d
GameAssembly.dll.il2cpp+1948F7A: E8 71 17 47 FE        - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+1948F7F: 33 D2                 - xor edx,edx
GameAssembly.dll.il2cpp+1948F81: 89 44 24 60           - mov [rsp+60],eax
GameAssembly.dll.il2cpp+1948F85: 48 8D 4C 24 60        - lea rcx,[rsp+60]
GameAssembly.dll.il2cpp+1948F8A: E8 51 35 48 FF        - call GameAssembly.dll.il2cpp+DCC4E0
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10214</ID>
                      <Description>"times"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>training_times</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>10421</ID>
                  <Description>"Ignore Crafting Costs"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

mem0x06:
  readmem(trace_craft_cost1,7)
  xor r8d,r8d
  jmp return1

trace_craft_cost1:
  jmp mem0x06
  nop 2
return1:

mem0x07:
  readmem(trace_craft_cost2,7)
  xor eax,eax
  jmp return2

trace_craft_cost2:
  jmp mem0x07
  nop 2
return2:

trace_craft_cost3:
  db EB

[DISABLE]

trace_craft_cost1:
  readmem(mem0x06,7)

trace_craft_cost2:
  readmem(mem0x07,7)

trace_craft_cost3:
  db 7D

{
// ORIGINAL CODE - INJECTION POINT: trace_craft_cost1

GameAssembly.dll.il2cpp+16C9ED4: 48 8B F8                 - mov rdi,rax
GameAssembly.dll.il2cpp+16C9ED7: 45 8B FC                 - mov r15d,r12d
GameAssembly.dll.il2cpp+16C9EDA: 66 0F 1F 44 00 00        - nop word ptr [rax+rax+00]
GameAssembly.dll.il2cpp+16C9EE0: 3B 48 18                 - cmp ecx,[rax+18]
GameAssembly.dll.il2cpp+16C9EE3: 0F 8D D1 00 00 00        - jnl GameAssembly.dll.il2cpp+16C9FBA
GameAssembly.dll.il2cpp+16C9EE9: 48 85 FF                 - test rdi,rdi
GameAssembly.dll.il2cpp+16C9EEC: 0F 84 C5 02 00 00        - je GameAssembly.dll.il2cpp+16CA1B7
GameAssembly.dll.il2cpp+16C9EF2: 3B 77 18                 - cmp esi,[rdi+18]
GameAssembly.dll.il2cpp+16C9EF5: 72 07                    - jb GameAssembly.dll.il2cpp+16C9EFE
GameAssembly.dll.il2cpp+16C9EF7: 33 C9                    - xor ecx,ecx
GameAssembly.dll.il2cpp+16C9EF9: E8 52 5C 4E FF           - call System.ThrowHelper.ThrowArgumentOutOfRangeException
GameAssembly.dll.il2cpp+16C9EFE: 48 8B 47 10              - mov rax,[rdi+10]
GameAssembly.dll.il2cpp+16C9F02: 48 8B BB F8 01 00 00     - mov rdi,[rbx+000001F8]
GameAssembly.dll.il2cpp+16C9F09: 4C 8B 73 48              - mov r14,[rbx+48]
GameAssembly.dll.il2cpp+16C9F0D: 49 8B 2C 07              - mov rbp,[r15+rax]
GameAssembly.dll.il2cpp+16C9F11: 48 85 FF                 - test rdi,rdi
GameAssembly.dll.il2cpp+16C9F14: 0F 84 9D 02 00 00        - je GameAssembly.dll.il2cpp+16CA1B7
GameAssembly.dll.il2cpp+16C9F1A: 48 8B 7F 28              - mov rdi,[rdi+28]
GameAssembly.dll.il2cpp+16C9F1E: 48 85 FF                 - test rdi,rdi
GameAssembly.dll.il2cpp+16C9F21: 0F 84 90 02 00 00        - je GameAssembly.dll.il2cpp+16CA1B7
GameAssembly.dll.il2cpp+16C9F27: 3B 77 18                 - cmp esi,[rdi+18]
GameAssembly.dll.il2cpp+16C9F2A: 72 07                    - jb GameAssembly.dll.il2cpp+16C9F33
GameAssembly.dll.il2cpp+16C9F2C: 33 C9                    - xor ecx,ecx
GameAssembly.dll.il2cpp+16C9F2E: E8 1D 5C 4E FF           - call System.ThrowHelper.ThrowArgumentOutOfRangeException
GameAssembly.dll.il2cpp+16C9F33: 4D 85 F6                 - test r14,r14
GameAssembly.dll.il2cpp+16C9F36: 0F 84 7B 02 00 00        - je GameAssembly.dll.il2cpp+16CA1B7
GameAssembly.dll.il2cpp+16C9F3C: 48 8B 47 10              - mov rax,[rdi+10]
GameAssembly.dll.il2cpp+16C9F40: 45 33 C9                 - xor r9d,r9d
GameAssembly.dll.il2cpp+16C9F43: 48 8B D5                 - mov rdx,rbp
GameAssembly.dll.il2cpp+16C9F46: 4C 89 6C 24 20           - mov [rsp+20],r13
// ---------- INJECTING HERE ----------
trace_craft_cost1: 49 8B CE                 - mov rcx,r14
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+16C9F4E: 46 8B 04 20              - mov r8d,[rax+r12]
GameAssembly.dll.il2cpp+16C9F52: 44 0F AF 83 24 02 00 00  - imul r8d,[rbx+00000224]
GameAssembly.dll.il2cpp+16C9F5A: 41 F7 D8                 - neg r8d
GameAssembly.dll.il2cpp+16C9F5D: E8 1E C0 EF FF           - call WS1RCLASS.DataSet.AddItem
GameAssembly.dll.il2cpp+16C9F62: 48 8B 4B 48              - mov rcx,[rbx+48]
GameAssembly.dll.il2cpp+16C9F66: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C9F69: 0F 84 48 02 00 00        - je GameAssembly.dll.il2cpp+16CA1B7
GameAssembly.dll.il2cpp+16C9F6F: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll.il2cpp+16C9F72: 48 8B D5                 - mov rdx,rbp
GameAssembly.dll.il2cpp+16C9F75: E8 E6 04 F0 FF           - call WS1RCLASS.DataSet.CheckIsEquiped
GameAssembly.dll.il2cpp+16C9F7A: 84 C0                    - test al,al
GameAssembly.dll.il2cpp+16C9F7C: 74 18                    - je GameAssembly.dll.il2cpp+16C9F96
GameAssembly.dll.il2cpp+16C9F7E: 48 8B 4B 48              - mov rcx,[rbx+48]
GameAssembly.dll.il2cpp+16C9F82: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C9F85: 0F 84 2C 02 00 00        - je GameAssembly.dll.il2cpp+16CA1B7
GameAssembly.dll.il2cpp+16C9F8B: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll.il2cpp+16C9F8E: 48 8B D5                 - mov rdx,rbp
GameAssembly.dll.il2cpp+16C9F91: E8 8A 3F F1 FF           - call WS1RCLASS.DataSet.SetOffEquip
GameAssembly.dll.il2cpp+16C9F96: 48 8B 83 48 01 00 00     - mov rax,[rbx+00000148]
GameAssembly.dll.il2cpp+16C9F9D: FF C6                    - inc esi
GameAssembly.dll.il2cpp+16C9F9F: 49 83 C7 08              - add r15,08
GameAssembly.dll.il2cpp+16C9FA3: 49 83 C4 04              - add r12,04
GameAssembly.dll.il2cpp+16C9FA7: 8B CE                    - mov ecx,esi
GameAssembly.dll.il2cpp+16C9FA9: 48 8B F8                 - mov rdi,rax
GameAssembly.dll.il2cpp+16C9FAC: 48 85 C0                 - test rax,rax
GameAssembly.dll.il2cpp+16C9FAF: 0F 84 02 02 00 00        - je GameAssembly.dll.il2cpp+16CA1B7
GameAssembly.dll.il2cpp+16C9FB5: E9 26 FF FF FF           - jmp GameAssembly.dll.il2cpp+16C9EE0
GameAssembly.dll.il2cpp+16C9FBA: 48 8B 93 F8 01 00 00     - mov rdx,[rbx+000001F8]
GameAssembly.dll.il2cpp+16C9FC1: 48 85 D2                 - test rdx,rdx
GameAssembly.dll.il2cpp+16C9FC4: 0F 84 ED 01 00 00        - je GameAssembly.dll.il2cpp+16CA1B7
}
{
// ORIGINAL CODE - INJECTION POINT: trace_craft_cost2

GameAssembly.dll.il2cpp+16C6553: E8 78 6A 6E FE           - call GameAssembly.il2cpp_custom_attrs_free+2FB0
GameAssembly.dll.il2cpp+16C6558: 48 85 C0                 - test rax,rax
GameAssembly.dll.il2cpp+16C655B: 0F 84 A4 03 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C6561: 4C 8B 08                 - mov r9,[rax]
GameAssembly.dll.il2cpp+16C6564: 48 8B C8                 - mov rcx,rax
GameAssembly.dll.il2cpp+16C6567: 48 8B 15 A2 C1 A8 00     - mov rdx,[GameAssembly.dll.data+17F710]
GameAssembly.dll.il2cpp+16C656E: E9 C2 02 00 00           - jmp GameAssembly.dll.il2cpp+16C6835
GameAssembly.dll.il2cpp+16C6573: 48 8B 43 48              - mov rax,[rbx+48]
GameAssembly.dll.il2cpp+16C6577: 48 85 C0                 - test rax,rax
GameAssembly.dll.il2cpp+16C657A: 0F 84 85 03 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C6580: 48 8B A8 30 01 00 00     - mov rbp,[rax+00000130]
GameAssembly.dll.il2cpp+16C6587: 48 85 ED                 - test rbp,rbp
GameAssembly.dll.il2cpp+16C658A: 0F 84 75 03 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C6590: 48 8B 8B 18 02 00 00     - mov rcx,[rbx+00000218]
GameAssembly.dll.il2cpp+16C6597: 48 8B 6D 20              - mov rbp,[rbp+20]
GameAssembly.dll.il2cpp+16C659B: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C659E: 0F 84 61 03 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C65A4: 4C 8B 05 35 7E A8 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+16C65AB: 8B D6                    - mov edx,esi
GameAssembly.dll.il2cpp+16C65AD: E8 3E 41 6F FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+16C65B2: 48 8B 8B F8 01 00 00     - mov rcx,[rbx+000001F8]
GameAssembly.dll.il2cpp+16C65B9: 8B F8                    - mov edi,eax
GameAssembly.dll.il2cpp+16C65BB: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C65BE: 0F 84 41 03 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C65C4: 48 8B 49 28              - mov rcx,[rcx+28]
GameAssembly.dll.il2cpp+16C65C8: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C65CB: 0F 84 34 03 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C65D1: 4C 8B 05 08 7E A8 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+16C65D8: 8B D6                    - mov edx,esi
GameAssembly.dll.il2cpp+16C65DA: E8 11 41 6F FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
// ---------- INJECTING HERE ----------
trace_craft_cost2: 0F AF 83 24 02 00 00     - imul eax,[rbx+00000224]
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+16C65E6: 3B F8                    - cmp edi,eax
GameAssembly.dll.il2cpp+16C65E8: 7D 28                    - jnl GameAssembly.dll.il2cpp+16C6612
GameAssembly.dll.il2cpp+16C65EA: 48 8B 43 48              - mov rax,[rbx+48]
GameAssembly.dll.il2cpp+16C65EE: C6 83 F8 02 00 00 00     - mov byte ptr [rbx+000002F8],00
GameAssembly.dll.il2cpp+16C65F5: 48 85 C0                 - test rax,rax
GameAssembly.dll.il2cpp+16C65F8: 0F 84 07 03 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C65FE: 48 8B A8 30 01 00 00     - mov rbp,[rax+00000130]
GameAssembly.dll.il2cpp+16C6605: 48 85 ED                 - test rbp,rbp
GameAssembly.dll.il2cpp+16C6608: 0F 84 F7 02 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C660E: 48 8B 6D 18              - mov rbp,[rbp+18]
GameAssembly.dll.il2cpp+16C6612: 48 8B 8B 18 02 00 00     - mov rcx,[rbx+00000218]
GameAssembly.dll.il2cpp+16C6619: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C661C: 0F 84 E3 02 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C6622: 4C 8B 05 B7 7D A8 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+16C6629: 8B D6                    - mov edx,esi
GameAssembly.dll.il2cpp+16C662B: E8 C0 40 6F FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+16C6630: 33 D2                    - xor edx,edx
GameAssembly.dll.il2cpp+16C6632: 89 44 24 70              - mov [rsp+70],eax
GameAssembly.dll.il2cpp+16C6636: 48 8D 4C 24 70           - lea rcx,[rsp+70]
GameAssembly.dll.il2cpp+16C663B: E8 A0 5E 70 FF           - call GameAssembly.dll.il2cpp+DCC4E0
GameAssembly.dll.il2cpp+16C6640: 48 8B 8B 18 02 00 00     - mov rcx,[rbx+00000218]
GameAssembly.dll.il2cpp+16C6647: 4C 8B F0                 - mov r14,rax
GameAssembly.dll.il2cpp+16C664A: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C664D: 0F 84 B2 02 00 00        - je GameAssembly.dll.il2cpp+16C6905
GameAssembly.dll.il2cpp+16C6653: 4C 8B 05 86 7D A8 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+16C665A: 8B D6                    - mov edx,esi
GameAssembly.dll.il2cpp+16C665C: E8 8F 40 6F FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+16C6661: 83 F8 63                 - cmp eax,63
GameAssembly.dll.il2cpp+16C6664: 4C 0F 4F 35 CC 8B A5 00  - cmovg r14,[GameAssembly.dll.data+14C238]
GameAssembly.dll.il2cpp+16C666C: 48 8B 8B 40 01 00 00     - mov rcx,[rbx+00000140]
}
{
// ORIGINAL CODE - INJECTION POINT: trace_craft_cost3

GameAssembly.dll.il2cpp+16C8C66: 48 85 ED                 - test rbp,rbp
GameAssembly.dll.il2cpp+16C8C69: 0F 84 61 03 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8C6F: 4C 8B 05 1A 50 A8 00     - mov r8,[GameAssembly.dll.data+17AC90]
GameAssembly.dll.il2cpp+16C8C76: 8B D0                    - mov edx,eax
GameAssembly.dll.il2cpp+16C8C78: 48 8B CD                 - mov rcx,rbp
GameAssembly.dll.il2cpp+16C8C7B: E8 C0 9D D2 FF           - call GameAssembly.dll.il2cpp+13F2A40
GameAssembly.dll.il2cpp+16C8C80: 48 8B 6B 48              - mov rbp,[rbx+48]
GameAssembly.dll.il2cpp+16C8C84: 48 85 ED                 - test rbp,rbp
GameAssembly.dll.il2cpp+16C8C87: 0F 84 43 03 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8C8D: 48 8B AD 30 01 00 00     - mov rbp,[rbp+00000130]
GameAssembly.dll.il2cpp+16C8C94: 48 85 ED                 - test rbp,rbp
GameAssembly.dll.il2cpp+16C8C97: 0F 84 33 03 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8C9D: 48 8B 8B 18 02 00 00     - mov rcx,[rbx+00000218]
GameAssembly.dll.il2cpp+16C8CA4: 48 8B 6D 20              - mov rbp,[rbp+20]
GameAssembly.dll.il2cpp+16C8CA8: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C8CAB: 0F 84 1F 03 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8CB1: 4C 8B 05 28 57 A8 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+16C8CB8: 8B D6                    - mov edx,esi
GameAssembly.dll.il2cpp+16C8CBA: E8 31 1A 6F FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+16C8CBF: 49 8B 0C 24              - mov rcx,[r12]
GameAssembly.dll.il2cpp+16C8CC3: 8B F8                    - mov edi,eax
GameAssembly.dll.il2cpp+16C8CC5: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C8CC8: 0F 84 02 03 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8CCE: 48 8B 49 28              - mov rcx,[rcx+28]
GameAssembly.dll.il2cpp+16C8CD2: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C8CD5: 0F 84 F5 02 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8CDB: 4C 8B 05 FE 56 A8 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+16C8CE2: 8B D6                    - mov edx,esi
GameAssembly.dll.il2cpp+16C8CE4: E8 07 1A 6F FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+16C8CE9: 3B F8                    - cmp edi,eax
// ---------- INJECTING HERE ----------
trace_craft_cost3: 7D 28                    - jnl GameAssembly.dll.il2cpp+16C8D15
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+16C8CED: 48 8B 43 48              - mov rax,[rbx+48]
GameAssembly.dll.il2cpp+16C8CF1: C6 83 F8 02 00 00 00     - mov byte ptr [rbx+000002F8],00
GameAssembly.dll.il2cpp+16C8CF8: 48 85 C0                 - test rax,rax
GameAssembly.dll.il2cpp+16C8CFB: 0F 84 CF 02 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8D01: 48 8B A8 30 01 00 00     - mov rbp,[rax+00000130]
GameAssembly.dll.il2cpp+16C8D08: 48 85 ED                 - test rbp,rbp
GameAssembly.dll.il2cpp+16C8D0B: 0F 84 BF 02 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8D11: 48 8B 6D 18              - mov rbp,[rbp+18]
GameAssembly.dll.il2cpp+16C8D15: 48 8B 8B 18 02 00 00     - mov rcx,[rbx+00000218]
GameAssembly.dll.il2cpp+16C8D1C: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C8D1F: 0F 84 AB 02 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8D25: 4C 8B 05 B4 56 A8 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+16C8D2C: 8B D6                    - mov edx,esi
GameAssembly.dll.il2cpp+16C8D2E: E8 BD 19 6F FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+16C8D33: 33 D2                    - xor edx,edx
GameAssembly.dll.il2cpp+16C8D35: 89 84 24 80 00 00 00     - mov [rsp+00000080],eax
GameAssembly.dll.il2cpp+16C8D3C: 48 8D 8C 24 80 00 00 00  - lea rcx,[rsp+00000080]
GameAssembly.dll.il2cpp+16C8D44: E8 97 37 70 FF           - call GameAssembly.dll.il2cpp+DCC4E0
GameAssembly.dll.il2cpp+16C8D49: 48 8B 8B 18 02 00 00     - mov rcx,[rbx+00000218]
GameAssembly.dll.il2cpp+16C8D50: 4C 8B F0                 - mov r14,rax
GameAssembly.dll.il2cpp+16C8D53: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C8D56: 0F 84 74 02 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
GameAssembly.dll.il2cpp+16C8D5C: 4C 8B 05 7D 56 A8 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+16C8D63: 8B D6                    - mov edx,esi
GameAssembly.dll.il2cpp+16C8D65: E8 86 19 6F FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+16C8D6A: 83 F8 63                 - cmp eax,63
GameAssembly.dll.il2cpp+16C8D6D: 4C 0F 4F 35 C3 64 A5 00  - cmovg r14,[GameAssembly.dll.data+14C238]
GameAssembly.dll.il2cpp+16C8D75: 48 8B 8B 40 01 00 00     - mov rcx,[rbx+00000140]
GameAssembly.dll.il2cpp+16C8D7C: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16C8D7F: 0F 84 4B 02 00 00        - je GameAssembly.dll.il2cpp+16C8FD0
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10637</ID>
                  <Description>"Ignore Non-nutrient Essential Ingredients"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

registerlabel(undo_non_nutrient)

mem0x09:
  xor eax,eax

undo_non_nutrient:
  readmem(trace_non_nutrient,6)
  jmp return

trace_non_nutrient:
  jmp mem0x09
  nop
return:

[DISABLE]

trace_non_nutrient:
  readmem(undo_non_nutrient,6)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: trace_non_nutrient

GameAssembly.dll.il2cpp+196005A: 48 8B C8                 - mov rcx,rax
GameAssembly.dll.il2cpp+196005D: E8 DE F3 7B FE           - call GameAssembly.dll.il2cpp+11F440
GameAssembly.dll.il2cpp+1960062: 49 8B 0E                 - mov rcx,[r14]
GameAssembly.dll.il2cpp+1960065: 48 8B F0                 - mov rsi,rax
GameAssembly.dll.il2cpp+1960068: 48 8B 6F 48              - mov rbp,[rdi+48]
GameAssembly.dll.il2cpp+196006C: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+196006F: 0F 84 98 03 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+1960075: 48 8B 49 20              - mov rcx,[rcx+20]
GameAssembly.dll.il2cpp+1960079: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+196007C: 0F 84 8B 03 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+1960082: 4C 8B 05 E7 E8 80 00     - mov r8,[GameAssembly.dll.data+19B970]
GameAssembly.dll.il2cpp+1960089: 8B D3                    - mov edx,ebx
GameAssembly.dll.il2cpp+196008B: E8 40 CF 44 FE           - call GameAssembly.il2cpp_custom_attrs_free+2FB0
GameAssembly.dll.il2cpp+1960090: 48 85 ED                 - test rbp,rbp
GameAssembly.dll.il2cpp+1960093: 0F 84 74 03 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+1960099: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll.il2cpp+196009C: 48 8B D0                 - mov rdx,rax
GameAssembly.dll.il2cpp+196009F: 48 8B CD                 - mov rcx,rbp
GameAssembly.dll.il2cpp+19600A2: E8 D9 0C C7 FF           - call WS1RCLASS.DataSet.GetItemName
GameAssembly.dll.il2cpp+19600A7: 49 8B 0E                 - mov rcx,[r14]
GameAssembly.dll.il2cpp+19600AA: 4C 8B E0                 - mov r12,rax
GameAssembly.dll.il2cpp+19600AD: 8B AC 24 90 00 00 00     - mov ebp,[rsp+00000090]
GameAssembly.dll.il2cpp+19600B4: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+19600B7: 0F 84 50 03 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+19600BD: 48 8B 49 28              - mov rcx,[rcx+28]
GameAssembly.dll.il2cpp+19600C1: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+19600C4: 0F 84 43 03 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+19600CA: 4C 8B 05 0F E3 7E 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+19600D1: 8B D3                    - mov edx,ebx
GameAssembly.dll.il2cpp+19600D3: E8 18 A6 45 FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
// ---------- INJECTING HERE ----------
trace_non_nutrient: 48 8B 4F 48              - mov rcx,[rdi+48]
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+19600DC: 3B E8                    - cmp ebp,eax
GameAssembly.dll.il2cpp+19600DE: 0F 8C C9 00 00 00        - jl GameAssembly.dll.il2cpp+19601AD
GameAssembly.dll.il2cpp+19600E4: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+19600E7: 0F 84 20 03 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+19600ED: 48 8B A9 30 01 00 00     - mov rbp,[rcx+00000130]
GameAssembly.dll.il2cpp+19600F4: 33 D2                    - xor edx,edx
GameAssembly.dll.il2cpp+19600F6: 48 8D 8C 24 90 00 00 00  - lea rcx,[rsp+00000090]
GameAssembly.dll.il2cpp+19600FE: E8 DD C3 46 FF           - call GameAssembly.dll.il2cpp+DCC4E0
GameAssembly.dll.il2cpp+1960103: 49 8B 0E                 - mov rcx,[r14]
GameAssembly.dll.il2cpp+1960106: 4C 8B F8                 - mov r15,rax
GameAssembly.dll.il2cpp+1960109: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+196010C: 0F 84 FB 02 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+1960112: 48 8B 49 28              - mov rcx,[rcx+28]
GameAssembly.dll.il2cpp+1960116: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+1960119: 0F 84 EE 02 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+196011F: 4C 8B 05 BA E2 7E 00     - mov r8,[GameAssembly.dll.data+17B3E0]
GameAssembly.dll.il2cpp+1960126: 8B D3                    - mov edx,ebx
GameAssembly.dll.il2cpp+1960128: E8 C3 A5 45 FE           - call GameAssembly.il2cpp_set_default_thread_affinity+92E0
GameAssembly.dll.il2cpp+196012D: 33 D2                    - xor edx,edx
GameAssembly.dll.il2cpp+196012F: 89 84 24 A0 00 00 00     - mov [rsp+000000A0],eax
GameAssembly.dll.il2cpp+1960136: 48 8D 8C 24 A0 00 00 00  - lea rcx,[rsp+000000A0]
GameAssembly.dll.il2cpp+196013E: E8 9D C3 46 FF           - call GameAssembly.dll.il2cpp+DCC4E0
GameAssembly.dll.il2cpp+1960143: 48 8B 15 1E 75 7B 00     - mov rdx,[GameAssembly.dll.data+144668]
GameAssembly.dll.il2cpp+196014A: 45 33 C9                 - xor r9d,r9d
GameAssembly.dll.il2cpp+196014D: 4C 8B C0                 - mov r8,rax
GameAssembly.dll.il2cpp+1960150: 49 8B CF                 - mov rcx,r15
GameAssembly.dll.il2cpp+1960153: E8 78 B5 44 FF           - call System.String.Concat
GameAssembly.dll.il2cpp+1960158: 48 85 ED                 - test rbp,rbp
GameAssembly.dll.il2cpp+196015B: 0F 84 AC 02 00 00        - je GameAssembly.dll.il2cpp+196040D
GameAssembly.dll.il2cpp+1960161: 45 33 C9                 - xor r9d,r9d
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10446</ID>
                  <Description>"Change Nutrient Addition Value"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

registerlabel(add_nutrial)

mem0x08:
  readmem(WS1RCLASS.DataSet.AddNutrial,5)
  mov r8d,[add_nutrial]
  jmp return
  align 10 CC

add_nutrial:
  dd #7000

WS1RCLASS.DataSet.AddNutrial:
  jmp mem0x08
return:

[DISABLE]

WS1RCLASS.DataSet.AddNutrial:
  readmem(mem0x08,5)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: WS1RCLASS.DataSet.AddNutrial

GameAssembly.dll.il2cpp+15C78E5: 48 8B 75 48           - mov rsi,[rbp+48]
GameAssembly.dll.il2cpp+15C78E9: 48 85 F6              - test rsi,rsi
GameAssembly.dll.il2cpp+15C78EC: 74 5B                 - je GameAssembly.dll.il2cpp+15C7949
GameAssembly.dll.il2cpp+15C78EE: 48 8B 0D DB 4B B6 00  - mov rcx,[GameAssembly.dll.data+1594D0]
GameAssembly.dll.il2cpp+15C78F5: 48 8B 76 60           - mov rsi,[rsi+60]
GameAssembly.dll.il2cpp+15C78F9: E8 62 CB 9F FE        - call GameAssembly.dll.text+295460
GameAssembly.dll.il2cpp+15C78FE: 33 D2                 - xor edx,edx
GameAssembly.dll.il2cpp+15C7900: 48 8B C8              - mov rcx,rax
GameAssembly.dll.il2cpp+15C7903: 48 8B D8              - mov rbx,rax
GameAssembly.dll.il2cpp+15C7906: E8 65 AA 33 00        - call GetItemInfo..ctor
GameAssembly.dll.il2cpp+15C790B: 48 85 DB              - test rbx,rbx
GameAssembly.dll.il2cpp+15C790E: 74 39                 - je GameAssembly.dll.il2cpp+15C7949
GameAssembly.dll.il2cpp+15C7910: 48 8D 4B 10           - lea rcx,[rbx+10]
GameAssembly.dll.il2cpp+15C7914: 49 8B D7              - mov rdx,r15
GameAssembly.dll.il2cpp+15C7917: 4C 89 39              - mov [rcx],r15
GameAssembly.dll.il2cpp+15C791A: E8 91 C5 9F FE        - call GameAssembly.dll.text+294EB0
GameAssembly.dll.il2cpp+15C791F: 48 8D 4B 20           - lea rcx,[rbx+20]
GameAssembly.dll.il2cpp+15C7923: 48 8B D7              - mov rdx,rdi
GameAssembly.dll.il2cpp+15C7926: 48 89 39              - mov [rcx],rdi
GameAssembly.dll.il2cpp+15C7929: 44 89 63 18           - mov [rbx+18],r12d
GameAssembly.dll.il2cpp+15C792D: E8 7E C5 9F FE        - call GameAssembly.dll.text+294EB0
GameAssembly.dll.il2cpp+15C7932: 48 85 F6              - test rsi,rsi
GameAssembly.dll.il2cpp+15C7935: 74 12                 - je GameAssembly.dll.il2cpp+15C7949
GameAssembly.dll.il2cpp+15C7937: 4C 8B 05 9A 0F B8 00  - mov r8,[GameAssembly.dll.data+1758D8]
GameAssembly.dll.il2cpp+15C793E: 48 8B D3              - mov rdx,rbx
GameAssembly.dll.il2cpp+15C7941: 48 8B CE              - mov rcx,rsi
GameAssembly.dll.il2cpp+15C7944: E9 46 FF FF FF        - jmp GameAssembly.dll.il2cpp+15C788F
GameAssembly.dll.il2cpp+15C7949: E8 52 CB 9F FE        - call GameAssembly.dll.text+2954A0
GameAssembly.dll.il2cpp+15C794E: CC                    - int 3
GameAssembly.dll.il2cpp+15C794F: CC                    - int 3
// ---------- INJECTING HERE ----------
WS1RCLASS.DataSet.AddNutrial: 48 89 5C 24 20        - mov [rsp+20],rbx
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+15C7955: 48 89 54 24 10        - mov [rsp+10],rdx
GameAssembly.dll.il2cpp+15C795A: 55                    - push rbp
GameAssembly.dll.il2cpp+15C795B: 56                    - push rsi
GameAssembly.dll.il2cpp+15C795C: 41 54                 - push r12
GameAssembly.dll.il2cpp+15C795E: 41 55                 - push r13
GameAssembly.dll.il2cpp+15C7960: 41 57                 - push r15
GameAssembly.dll.il2cpp+15C7962: 48 83 EC 20           - sub rsp,20
GameAssembly.dll.il2cpp+15C7966: 80 3D 71 51 C1 00 00  - cmp byte ptr [GameAssembly.dll+24AEADE],00
GameAssembly.dll.il2cpp+15C796D: 41 8B D9              - mov ebx,r9d
GameAssembly.dll.il2cpp+15C7970: 45 8B F8              - mov r15d,r8d
GameAssembly.dll.il2cpp+15C7973: 4C 8B E2              - mov r12,rdx
GameAssembly.dll.il2cpp+15C7976: 48 8B E9              - mov rbp,rcx
GameAssembly.dll.il2cpp+15C7979: 75 37                 - jne GameAssembly.dll.il2cpp+15C79B2
GameAssembly.dll.il2cpp+15C797B: 48 8D 0D 0E F9 B4 00  - lea rcx,[GameAssembly.dll.data+144290]
GameAssembly.dll.il2cpp+15C7982: E8 A9 C9 9F FE        - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+15C7987: 48 8D 0D 32 FA B4 00  - lea rcx,[GameAssembly.dll.data+1443C0]
GameAssembly.dll.il2cpp+15C798E: E8 9D C9 9F FE        - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+15C7993: 48 8D 0D BE FA B4 00  - lea rcx,[GameAssembly.dll.data+144458]
GameAssembly.dll.il2cpp+15C799A: E8 91 C9 9F FE        - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+15C799F: 48 8D 0D 72 6E B4 00  - lea rcx,[GameAssembly.dll.data+13B818]
GameAssembly.dll.il2cpp+15C79A6: E8 85 C9 9F FE        - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+15C79AB: C6 05 2C 51 C1 00 01  - mov byte ptr [GameAssembly.dll+24AEADE],01
GameAssembly.dll.il2cpp+15C79B2: 48 8B 45 48           - mov rax,[rbp+48]
GameAssembly.dll.il2cpp+15C79B6: 45 33 ED              - xor r13d,r13d
GameAssembly.dll.il2cpp+15C79B9: 48 89 7C 24 50        - mov [rsp+50],rdi
GameAssembly.dll.il2cpp+15C79BE: 41 8B F5              - mov esi,r13d
GameAssembly.dll.il2cpp+15C79C1: 4C 89 74 24 60        - mov [rsp+60],r14
GameAssembly.dll.il2cpp+15C79C6: 41 8B D5              - mov edx,r13d
GameAssembly.dll.il2cpp+15C79C9: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+15C79CC: 0F 84 60 02 00 00     - je GameAssembly.dll.il2cpp+15C7C32
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10447</ID>
                      <Description>"value"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>add_nutrial</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>10215</ID>
                  <Description>"Item Data List"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end

local parent = AddressList.getMemoryRecordByID(10119)

[ENABLE]

AddressList["Required.getDropdown.Item"].active = true

local base = Recorder.getAddress(Recorder.getChild(parent, "P-&gt;Item"))
local size = tonumber(Recorder.getChild(parent, "_size").value)

synchronize(function()
    for i = 0, size - 1 do
        local addr   = ("%X"):format(readPointer(base + i * 0x08 + 0x20))
        local header = Recorder.createHeader(memrec, ("[%d]"):format(i), addr)

        header.active = true

        local id = Recorder.createChild(header, "id", "+10")
        id.OffsetCount    = 1
        id.Offset[0]      = 0x14
        id.varType        = vtString
        id.String.Size    = 64
        id.String.Unicode = true
        id.DropDownLinked = true
        id.DropDownLinkedMemrec = "Dropdown.Item"

        Recorder.createChild(header, "count", "+18")
    end
end)

[DISABLE]

AddressList["Required.getDropdown.Item"].active = false

synchronize(function() Recorder.removeChildren(memrec) end)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>11302</ID>
              <Description>"Weapon Reforge:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>11297</ID>
                  <Description>"No Material Loss"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

trace_material_cost:
  xor r8d,r8d
  nop

[DISABLE]

trace_material_cost:
  db 45 8D 41 01

{
// ORIGINAL CODE - INJECTION POINT: trace_material_cost

GameAssembly.dll.il2cpp+195670D: 48 8B 48 70           - mov rcx,[rax+70]
GameAssembly.dll.il2cpp+1956711: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+1956714: 0F 84 EC 02 00 00     - je GameAssembly.dll.il2cpp+1956A06
GameAssembly.dll.il2cpp+195671A: 48 8B 97 C8 01 00 00  - mov rdx,[rdi+000001C8]
GameAssembly.dll.il2cpp+1956721: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+1956724: E8 27 63 EE FF        - call SoundOperator.PlaySound_System
GameAssembly.dll.il2cpp+1956729: BE 02 00 00 00        - mov esi,00000002
GameAssembly.dll.il2cpp+195672E: EB 4C                 - jmp GameAssembly.dll.il2cpp+195677C
GameAssembly.dll.il2cpp+1956730: 48 8B 15 89 78 7E 00  - mov rdx,[GameAssembly.dll.data+16AFC0]
GameAssembly.dll.il2cpp+1956737: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+195673A: 48 8B CB              - mov rcx,rbx
GameAssembly.dll.il2cpp+195673D: E8 EE 71 45 FF        - call System.String.Equals
GameAssembly.dll.il2cpp+1956742: 84 C0                 - test al,al
GameAssembly.dll.il2cpp+1956744: 74 36                 - je GameAssembly.dll.il2cpp+195677C
GameAssembly.dll.il2cpp+1956746: 48 8B 05 7B E0 80 00  - mov rax,[GameAssembly.dll.data+1917C8]
GameAssembly.dll.il2cpp+195674D: 48 8B 88 B8 00 00 00  - mov rcx,[rax+000000B8]
GameAssembly.dll.il2cpp+1956754: 48 8B 01              - mov rax,[rcx]
GameAssembly.dll.il2cpp+1956757: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+195675A: 0F 84 A6 02 00 00     - je GameAssembly.dll.il2cpp+1956A06
GameAssembly.dll.il2cpp+1956760: 48 8B 48 70           - mov rcx,[rax+70]
GameAssembly.dll.il2cpp+1956764: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+1956767: 0F 84 99 02 00 00     - je GameAssembly.dll.il2cpp+1956A06
GameAssembly.dll.il2cpp+195676D: 48 8B 97 C8 01 00 00  - mov rdx,[rdi+000001C8]
GameAssembly.dll.il2cpp+1956774: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+1956777: E8 D4 62 EE FF        - call SoundOperator.PlaySound_System
GameAssembly.dll.il2cpp+195677C: 48 8B 4F 48           - mov rcx,[rdi+48]
GameAssembly.dll.il2cpp+1956780: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+1956783: 0F 84 7D 02 00 00     - je GameAssembly.dll.il2cpp+1956A06
GameAssembly.dll.il2cpp+1956789: 45 33 C9              - xor r9d,r9d
GameAssembly.dll.il2cpp+195678C: 48 8B D3              - mov rdx,rbx
// ---------- INJECTING HERE ----------
trace_material_cost: 45 8D 41 01           - lea r8d,[r9+01]
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+1956793: E8 88 A1 C8 FF        - call WS1RCLASS.DataSet.SpendItem
GameAssembly.dll.il2cpp+1956798: 48 8B 8F C0 01 00 00  - mov rcx,[rdi+000001C0]
GameAssembly.dll.il2cpp+195679F: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+19567A2: 0F 84 5E 02 00 00     - je GameAssembly.dll.il2cpp+1956A06
GameAssembly.dll.il2cpp+19567A8: 4C 8B 05 79 79 81 00  - mov r8,[GameAssembly.dll.data+19B128]
GameAssembly.dll.il2cpp+19567AF: 48 8B D3              - mov rdx,rbx
GameAssembly.dll.il2cpp+19567B2: E8 39 B4 A1 FF        - call GameAssembly.dll.il2cpp+1371BF0
GameAssembly.dll.il2cpp+19567B7: 48 8B 87 E8 01 00 00  - mov rax,[rdi+000001E8]
GameAssembly.dll.il2cpp+19567BE: 48 85 C0              - test rax,rax
GameAssembly.dll.il2cpp+19567C1: 0F 84 3F 02 00 00     - je GameAssembly.dll.il2cpp+1956A06
GameAssembly.dll.il2cpp+19567C7: 48 8B 4F 48           - mov rcx,[rdi+48]
GameAssembly.dll.il2cpp+19567CB: 48 8B A8 E8 00 00 00  - mov rbp,[rax+000000E8]
GameAssembly.dll.il2cpp+19567D2: 48 85 C9              - test rcx,rcx
GameAssembly.dll.il2cpp+19567D5: 0F 84 2B 02 00 00     - je GameAssembly.dll.il2cpp+1956A06
GameAssembly.dll.il2cpp+19567DB: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+19567DE: 48 8B D3              - mov rdx,rbx
GameAssembly.dll.il2cpp+19567E1: E8 5A 9C C7 FF        - call WS1RCLASS.DataSet.GetItemCount
GameAssembly.dll.il2cpp+19567E6: 48 85 ED              - test rbp,rbp
GameAssembly.dll.il2cpp+19567E9: 0F 84 17 02 00 00     - je GameAssembly.dll.il2cpp+1956A06
GameAssembly.dll.il2cpp+19567EF: 45 33 C0              - xor r8d,r8d
GameAssembly.dll.il2cpp+19567F2: 8B D0                 - mov edx,eax
GameAssembly.dll.il2cpp+19567F4: 48 8B CD              - mov rcx,rbp
GameAssembly.dll.il2cpp+19567F7: E8 24 5E FB FF        - call GridButtonPanel.ChangeCount_NowButton
GameAssembly.dll.il2cpp+19567FC: 8B 8F E8 00 00 00     - mov ecx,[rdi+000000E8]
GameAssembly.dll.il2cpp+1956802: 8B 87 E4 00 00 00     - mov eax,[rdi+000000E4]
GameAssembly.dll.il2cpp+1956808: 3B C8                 - cmp ecx,eax
GameAssembly.dll.il2cpp+195680A: 0F 8C A8 00 00 00     - jl GameAssembly.dll.il2cpp+19568B8
GameAssembly.dll.il2cpp+1956810: 33 F6                 - xor esi,esi
GameAssembly.dll.il2cpp+1956812: 48 8D 8F E8 01 00 00  - lea rcx,[rdi+000001E8]
GameAssembly.dll.il2cpp+1956819: 33 D2                 - xor edx,edx
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11301</ID>
                  <Description>"Always Best Results"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

registerlabel(undo_forge_result)

mem0x0B:
  // mov dword ptr [rbx+offset],00
  db C7 83
  readmem(read_forge_result+02,4)
  dd #0

undo_forge_result:
  readmem(read_forge_result,7)
  jmp return

read_forge_result:
  jmp mem0x0B
  nop 2
return:

[DISABLE]

read_forge_result:
  readmem(undo_forge_result,7)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: read_forge_result

GameAssembly.dll.il2cpp+195A913: 48 8B EC                 - mov rbp,rsp
GameAssembly.dll.il2cpp+195A916: 48 83 EC 78              - sub rsp,78
GameAssembly.dll.il2cpp+195A91A: 80 3D 53 39 88 00 00     - cmp byte ptr [GameAssembly.dll+24B0274],00
GameAssembly.dll.il2cpp+195A921: 48 8B D9                 - mov rbx,rcx
GameAssembly.dll.il2cpp+195A924: 0F 85 97 00 00 00        - jne read_forge_result
GameAssembly.dll.il2cpp+195A92A: 48 8D 0D A7 D4 7B 00     - lea rcx,[GameAssembly.dll.data+144DD8]
GameAssembly.dll.il2cpp+195A931: E8 FA 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A936: 48 8D 0D 8B 7E 7F 00     - lea rcx,[GameAssembly.dll.data+17F7C8]
GameAssembly.dll.il2cpp+195A93D: E8 EE 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A942: 48 8D 0D 9F E6 7E 00     - lea rcx,[GameAssembly.dll.data+175FE8]
GameAssembly.dll.il2cpp+195A949: E8 E2 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A94E: 48 8D 0D 93 25 80 00     - lea rcx,[GameAssembly.dll.data+189EE8]
GameAssembly.dll.il2cpp+195A955: E8 D6 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A95A: 48 8D 0D 67 9E 80 00     - lea rcx,[GameAssembly.dll.data+1917C8]
GameAssembly.dll.il2cpp+195A961: E8 CA 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A966: 48 8D 0D BB ED 7D 00     - lea rcx,[GameAssembly.dll.data+166728]
GameAssembly.dll.il2cpp+195A96D: E8 BE 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A972: 48 8D 0D 27 2C 81 00     - lea rcx,[GameAssembly.dll.data+19A5A0]
GameAssembly.dll.il2cpp+195A979: E8 B2 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A97E: 48 8D 0D A3 F3 7B 00     - lea rcx,[GameAssembly.dll.data+146D28]
GameAssembly.dll.il2cpp+195A985: E8 A6 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A98A: 48 8D 0D DF 63 7B 00     - lea rcx,[GameAssembly.dll.data+13DD70]
GameAssembly.dll.il2cpp+195A991: E8 9A 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A996: 48 8D 0D DB BB 7F 00     - lea rcx,[GameAssembly.dll.data+183578]
GameAssembly.dll.il2cpp+195A99D: E8 8E 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A9A2: 48 8D 0D FF EF 80 00     - lea rcx,[GameAssembly.dll.data+1969A8]
GameAssembly.dll.il2cpp+195A9A9: E8 82 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A9AE: 48 8D 0D 4B 5C 80 00     - lea rcx,[GameAssembly.dll.data+18D600]
GameAssembly.dll.il2cpp+195A9B5: E8 76 99 66 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+195A9BA: C6 05 B3 38 88 00 01     - mov byte ptr [GameAssembly.dll+24B0274],01
// ---------- INJECTING HERE ----------
read_forge_result: 83 BB F8 01 00 00 03     - cmp dword ptr [rbx+000001F8],03
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+195A9C8: 48 89 B4 24 98 00 00 00  - mov [rsp+00000098],rsi
GameAssembly.dll.il2cpp+195A9D0: 48 89 BC 24 A0 00 00 00  - mov [rsp+000000A0],rdi
GameAssembly.dll.il2cpp+195A9D8: 4C 89 B4 24 A8 00 00 00  - mov [rsp+000000A8],r14
GameAssembly.dll.il2cpp+195A9E0: 4C 89 7C 24 70           - mov [rsp+70],r15
GameAssembly.dll.il2cpp+195A9E5: 0F 29 74 24 60           - movaps [rsp+60],xmm6
GameAssembly.dll.il2cpp+195A9EA: 0F 29 7C 24 50           - movaps [rsp+50],xmm7
GameAssembly.dll.il2cpp+195A9EF: C7 45 18 00 00 00 00     - mov [rbp+18],00000000
GameAssembly.dll.il2cpp+195A9F6: 0F 84 E4 04 00 00        - je GameAssembly.dll.il2cpp+195AEE0
GameAssembly.dll.il2cpp+195A9FC: 48 8B 05 C5 9D 80 00     - mov rax,[GameAssembly.dll.data+1917C8]
GameAssembly.dll.il2cpp+195AA03: 48 8B 88 B8 00 00 00     - mov rcx,[rax+000000B8]
GameAssembly.dll.il2cpp+195AA0A: 48 8B 01                 - mov rax,[rcx]
GameAssembly.dll.il2cpp+195AA0D: 48 85 C0                 - test rax,rax
GameAssembly.dll.il2cpp+195AA10: 0F 84 B7 06 00 00        - je GameAssembly.dll.il2cpp+195B0CD
GameAssembly.dll.il2cpp+195AA16: 48 8B 48 70              - mov rcx,[rax+70]
GameAssembly.dll.il2cpp+195AA1A: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+195AA1D: 0F 84 AA 06 00 00        - je GameAssembly.dll.il2cpp+195B0CD
GameAssembly.dll.il2cpp+195AA23: 48 8B 93 00 02 00 00     - mov rdx,[rbx+00000200]
GameAssembly.dll.il2cpp+195AA2A: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll.il2cpp+195AA2D: E8 1E 20 EE FF           - call SoundOperator.PlaySound_System
GameAssembly.dll.il2cpp+195AA32: 48 8B BB 10 02 00 00     - mov rdi,[rbx+00000210]
GameAssembly.dll.il2cpp+195AA39: 48 85 FF                 - test rdi,rdi
GameAssembly.dll.il2cpp+195AA3C: 0F 84 8B 06 00 00        - je GameAssembly.dll.il2cpp+195B0CD
GameAssembly.dll.il2cpp+195AA42: 33 D2                    - xor edx,edx
GameAssembly.dll.il2cpp+195AA44: 48 8B CF                 - mov rcx,rdi
GameAssembly.dll.il2cpp+195AA47: E8 A4 4F F4 FE           - call UnityEngine.GameObject.get_transform
GameAssembly.dll.il2cpp+195AA4C: 48 85 C0                 - test rax,rax
GameAssembly.dll.il2cpp+195AA4F: 0F 84 78 06 00 00        - je GameAssembly.dll.il2cpp+195B0CD
GameAssembly.dll.il2cpp+195AA55: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll.il2cpp+195AA58: 48 8D 4D B8              - lea rcx,[rbp-48]
GameAssembly.dll.il2cpp+195AA5C: 48 8B D0                 - mov rdx,rax
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"&lt;settings&gt;"</Description>
          <Options moHideChildren="1"/>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

local msg = 'Contains the required table settings.\nDo you want to expand %s?'
return (messageDialog(msg:format(memrec.description), 3, 0, 1) == 6) or 'nop'

[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>10000</ID>
              <Description>"WitchSpring R"</Description>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end

synchronize(Register.mono_dataCollector)

local tbl = Register.createSectionTable('GameAssembly.dll')
local start, size = Register.getSectionRegion(tbl, 2)

local DhaosCollider = {
    ['Required.getPlayer'] = {
        {'Player.Update'}
    },
    ['Required.getMainCamera'] = {
        {'MainCamera.Update'}
    },
    ['Required.mono_createChildren'] = {
        {'Player.Update'}
    },
    ['Required.getDropdown.Item'] = {
        {'Player.Update'}
    },
    [10047] = { -- Walk Speed Multiplier
        {'read_walkSpeed', 'F30F1040xx4883C4xxC3E8xxxxxxxxCCCCCCCC48896C24', 1, start, size}
    },
    [10025] = { -- Infinite HP
        {'Player.Update'}
    },
    [10026] = { -- Infinite MP
        {'Player.Update'}
    },
    [10265] = { -- Physical Damage Multiplier
        {'read_str', '8B593433D2', 1, start, size}
    },
    [10290] = { -- Magic Damage Multiplier
        {'read_sp', '8Bxxxx33xx48xxxxE8xxxxxxxx8Dxxxx48xxxxxxxxxxxx48xxxxxxxxxxxx48xxxx48xxxx74', 1, start, size}
    },
    [10240] = { -- EXP Gained Multiplier
        {'trace_exp_gain', '498B46xx458B34xx48', 1, start, size}
    },
    [10165] = { -- Infinite Training
        {'Player.Update'}
    },
    [10190] = { -- Training Result Multiplier
        {'read_statResult', '488B8Bxxxxxxxx41833C0400', 1, start, size}
    },
    [10421] = { -- Ignore Crafting Costs
        {'trace_craft_cost1', '498BCE468B042044',   1, start, size},
        {'trace_craft_cost2', '0FAF83xxxxxxxx3BF8', 1, start, size},
        {'trace_craft_cost3', '7Dxx488B43xxC683',   3, start, size}
    },
    [10637] = { -- Ignore Non-nutrient Essential Ingredients
        {'trace_non_nutrient', '488B4Fxx3BE80F8C',   1, start, size}
    },
    [10446] = { -- Change Nutrient Addition Value
        {'WS1RCLASS.DataSet.AddNutrial'}
    },
    [10215] = { -- Item Data List
        {'Player.Update'}
    },
    [11297] = { -- No Material Loss
        {'trace_material_cost', '458D41xxE8xxxxxxxx488B8Fxxxxxxxx4885C90F84xxxxxxxx4C', 1, start, size}
    },
    [11301] = { -- Always Best Results
        {'read_forge_result', '83BBxxxxxxxx034889B424', 1, start, size}
    },
}

local mr = {
    AddressList["Required.allocation"],
    AddressList["Required.getPlayer"],
    AddressList["Required.getMainCamera"],
    AddressList["Required.mono_createChildren"],
}

[ENABLE]

waitForSections()
Register.log('GameAssembly.dll.'..tbl[2].Name..' MD5: '..md5memory(start, size))
Register.allocateNearThisAddress = assert(start)
Register.onEnable(DhaosCollider)
Register.enableMemoryRecords(mr)
AddressList.getMemoryRecordByID(1).active  = true
AddressList.getMemoryRecordByID(20).active = true
AddressList.getMemoryRecordByID(21).active = true
memrec.color = Register.enabledColor

[DISABLE]

Register.disableMemoryRecords(Register.addEnableList(mr))
Register.onDisable(DhaosCollider)
memrec.color = Register.disabledColor
return monopipe and synchronize(miMonoActivateClick)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14</ID>
                  <Description>"Required.allocation"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then memrec.color = Register.enabledColor end
{$asm}
registersymbol(mem0x00) // Required.getPlayer
registersymbol(mem0x01) // Walk Speed Multiplier
registersymbol(mem0x02) // Training Result Multiplier
registersymbol(mem0x03) // EXP Gained Multiplier
registersymbol(mem0x04) // Physical Damage Multiplier
registersymbol(mem0x05) // Magic Damage Multiplier
registersymbol(mem0x06) // Ignore Crafting Costs
registersymbol(mem0x07) // Ignore Crafting Costs
registersymbol(mem0x08) // Change Nutrient Addition Value
registersymbol(mem0x09) // Ignore Non-nutrient Essential Ingredients
registersymbol(mem0x0A) // Required.getMainCamera
registersymbol(mem0x0B) // Always Best Results
registersymbol(mem0x0C) //
registersymbol(mem0x0D) //
registersymbol(mem0x0E) //
registersymbol(mem0x0F) //
// 4k
alloc(mem0x00,0x100,$Register.allocateNearThisAddress)
alloc(mem0x01,0x100)
alloc(mem0x02,0x100)
alloc(mem0x03,0x100)
alloc(mem0x04,0x100)
alloc(mem0x05,0x100)
alloc(mem0x06,0x100)
alloc(mem0x07,0x100)
alloc(mem0x08,0x100)
alloc(mem0x09,0x100)
alloc(mem0x0A,0x100)
alloc(mem0x0B,0x100)
alloc(mem0x0C,0x100)
alloc(mem0x0D,0x100)
alloc(mem0x0E,0x100)
alloc(mem0x0F,0x100)
/*
registersymbol(mem0x10) //
registersymbol(mem0x11) //
registersymbol(mem0x12) //
registersymbol(mem0x13) //
registersymbol(mem0x14) //
registersymbol(mem0x15) //
registersymbol(mem0x16) //
registersymbol(mem0x17) //
registersymbol(mem0x18) //
registersymbol(mem0x19) //
registersymbol(mem0x1A) //
registersymbol(mem0x1B) //
registersymbol(mem0x1C) //
registersymbol(mem0x1D) //
registersymbol(mem0x1E) //
registersymbol(mem0x1F) //
// 8k
alloc(mem0x10,0x100)
alloc(mem0x11,0x100)
alloc(mem0x12,0x100)
alloc(mem0x13,0x100)
alloc(mem0x14,0x100)
alloc(mem0x15,0x100)
alloc(mem0x16,0x100)
alloc(mem0x17,0x100)
alloc(mem0x18,0x100)
alloc(mem0x19,0x100)
alloc(mem0x1A,0x100)
alloc(mem0x1B,0x100)
alloc(mem0x1C,0x100)
alloc(mem0x1D,0x100)
alloc(mem0x1E,0x100)
alloc(mem0x1F,0x100)
*/
[DISABLE]
{$lua}
if not syntaxcheck then memrec.color = Register.disabledColor end
{$asm}
unregistersymbol(*)
dealloc(*)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>15</ID>
                  <Description>"Required.getPlayer"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

{$lua}
if syntaxcheck then return end
local ptr = AddressList["Pointer-&gt;Player"]
Recorder.addressUpdate(memrec, ptr, "Player_ptr", {0x00})
{$asm}

registerlabel(Player_ptr)

mem0x00:
  readmem(Player.Update,6)
  mov [Player_ptr],rcx
  jmp return
  align 10 CC

Player_ptr:
  dq 0

Player.Update:
  jmp mem0x00
  nop
return:

[DISABLE]

Player.Update:
  readmem(mem0x00,6)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: Player.Update

GameAssembly.dll.il2cpp+16A8BA5: 48 85 FF                 - test rdi,rdi
GameAssembly.dll.il2cpp+16A8BA8: 74 33                    - je GameAssembly.dll.il2cpp+16A8BDD
GameAssembly.dll.il2cpp+16A8BAA: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll.il2cpp+16A8BAD: 48 8B D0                 - mov rdx,rax
GameAssembly.dll.il2cpp+16A8BB0: 48 8B CF                 - mov rcx,rdi
GameAssembly.dll.il2cpp+16A8BB3: E8 08 00 F8 FF           - call EventOperator.EventOff
GameAssembly.dll.il2cpp+16A8BB8: F3 0F 10 15 B8 09 3A 00  - movss xmm2,[GameAssembly.dll.rdata+54578]
GameAssembly.dll.il2cpp+16A8BC0: 45 33 C9                 - xor r9d,r9d
GameAssembly.dll.il2cpp+16A8BC3: 48 8B 15 86 47 AA 00     - mov rdx,[GameAssembly.dll.data+17A350]
GameAssembly.dll.il2cpp+16A8BCA: 48 8B CB                 - mov rcx,rbx
GameAssembly.dll.il2cpp+16A8BCD: E8 4E F1 63 FF           - call UnityEngine.MonoBehaviour.Invoke
GameAssembly.dll.il2cpp+16A8BD2: 48 8B 7C 24 30           - mov rdi,[rsp+30]
GameAssembly.dll.il2cpp+16A8BD7: 48 83 C4 20              - add rsp,20
GameAssembly.dll.il2cpp+16A8BDB: 5B                       - pop rbx
GameAssembly.dll.il2cpp+16A8BDC: C3                       - ret
GameAssembly.dll.il2cpp+16A8BDD: E8 BE B8 91 FE           - call GameAssembly.dll.text+2954A0
GameAssembly.dll.il2cpp+16A8BE2: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BE3: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BE4: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BE5: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BE6: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BE7: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BE8: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BE9: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BEA: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BEB: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BEC: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BED: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BEE: CC                       - int 3
GameAssembly.dll.il2cpp+16A8BEF: CC                       - int 3
// ---------- INJECTING HERE ----------
Player.Update: 40 53                    - push rbx
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+16A8BF2: 48 83 EC 20              - sub rsp,20
GameAssembly.dll.il2cpp+16A8BF6: 80 3D BF 43 B3 00 00     - cmp byte ptr [GameAssembly.dll+24AEFBC],00
GameAssembly.dll.il2cpp+16A8BFD: 48 8B D9                 - mov rbx,rcx
GameAssembly.dll.il2cpp+16A8C00: 75 13                    - jne GameAssembly.dll.il2cpp+16A8C15
GameAssembly.dll.il2cpp+16A8C02: 48 8D 0D DF 03 AA 00     - lea rcx,[GameAssembly.dll.data+175FE8]
GameAssembly.dll.il2cpp+16A8C09: E8 22 B7 91 FE           - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+16A8C0E: C6 05 A7 43 B3 00 01     - mov byte ptr [GameAssembly.dll+24AEFBC],01
GameAssembly.dll.il2cpp+16A8C15: 80 BB 1C 02 00 00 00     - cmp byte ptr [rbx+0000021C],00
GameAssembly.dll.il2cpp+16A8C1C: 0F 84 B9 00 00 00        - je GameAssembly.dll.il2cpp+16A8CDB
GameAssembly.dll.il2cpp+16A8C22: 48 8B 8B 18 01 00 00     - mov rcx,[rbx+00000118]
GameAssembly.dll.il2cpp+16A8C29: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16A8C2C: 0F 84 AF 00 00 00        - je GameAssembly.dll.il2cpp+16A8CE1
GameAssembly.dll.il2cpp+16A8C32: 48 81 C1 10 01 00 00     - add rcx,00000110
GameAssembly.dll.il2cpp+16A8C39: 33 D2                    - xor edx,edx
GameAssembly.dll.il2cpp+16A8C3B: E8 A0 80 D5 FF           - call GameAssembly.dll.il2cpp+1400CE0
GameAssembly.dll.il2cpp+16A8C40: F3 0F 10 0D 38 25 39 00  - movss xmm1,[GameAssembly.dll.rdata+46180]
GameAssembly.dll.il2cpp+16A8C48: 0F 2F C8                 - comiss xmm1,xmm0
GameAssembly.dll.il2cpp+16A8C4B: 76 2B                    - jna GameAssembly.dll.il2cpp+16A8C78
GameAssembly.dll.il2cpp+16A8C4D: 48 8B 8B 18 01 00 00     - mov rcx,[rbx+00000118]
GameAssembly.dll.il2cpp+16A8C54: 48 85 C9                 - test rcx,rcx
GameAssembly.dll.il2cpp+16A8C57: 0F 84 84 00 00 00        - je GameAssembly.dll.il2cpp+16A8CE1
GameAssembly.dll.il2cpp+16A8C5D: 33 D2                    - xor edx,edx
GameAssembly.dll.il2cpp+16A8C5F: E8 FC FF FA FF           - call PlayController.MouseIsPressed
GameAssembly.dll.il2cpp+16A8C64: 84 C0                    - test al,al
GameAssembly.dll.il2cpp+16A8C66: 75 10                    - jne GameAssembly.dll.il2cpp+16A8C78
GameAssembly.dll.il2cpp+16A8C68: 33 D2                    - xor edx,edx
GameAssembly.dll.il2cpp+16A8C6A: 88 83 1C 02 00 00        - mov [rbx+0000021C],al
GameAssembly.dll.il2cpp+16A8C70: 48 8B CB                 - mov rcx,rbx
GameAssembly.dll.il2cpp+16A8C73: E8 68 FA FF FF           - call Player.StopMove
GameAssembly.dll.il2cpp+16A8C78: 48 8B 0D 69 03 AA 00     - mov rcx,[GameAssembly.dll.data+175FE8]
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10001</ID>
                      <Description>"Pointer-&gt;Player"</Description>
                      <Options moHideChildren="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>008080</Color>
                      <GroupHeader>1</GroupHeader>
                      <Address/>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>10002</ID>
                          <Description>"P-&gt;DataSet"</Description>
                          <Options moHideChildren="1"/>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>008080</Color>
                          <GroupHeader>1</GroupHeader>
                          <Address>+B8</Address>
                          <Offsets>
                            <Offset>0</Offset>
                          </Offsets>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>10003</ID>
                              <Description>"P-&gt;PlayerStat"</Description>
                              <Options moHideChildren="1"/>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>008080</Color>
                              <GroupHeader>1</GroupHeader>
                              <Address>+28</Address>
                              <Offsets>
                                <Offset>0</Offset>
                              </Offsets>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>10119</ID>
                                  <Description>"P-&gt;myItemList"</Description>
                                  <Options moHideChildren="1"/>
                                  <ShowAsSigned>0</ShowAsSigned>
                                  <Color>008080</Color>
                                  <GroupHeader>1</GroupHeader>
                                  <Address>+80</Address>
                                  <Offsets>
                                    <Offset>0</Offset>
                                  </Offsets>
                                  <CheatEntries>
                                    <CheatEntry>
                                      <ID>10121</ID>
                                      <Description>"P-&gt;Item"</Description>
                                      <ShowAsSigned>0</ShowAsSigned>
                                      <Color>008080</Color>
                                      <GroupHeader>1</GroupHeader>
                                      <Address>+10</Address>
                                      <Offsets>
                                        <Offset>0</Offset>
                                      </Offsets>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>10120</ID>
                                      <Description>"_size"</Description>
                                      <ShowAsSigned>0</ShowAsSigned>
                                      <VariableType>4 Bytes</VariableType>
                                      <Address>+18</Address>
                                    </CheatEntry>
                                  </CheatEntries>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>10141</ID>
                              <Description>"P-&gt;TimeStat"</Description>
                              <Options moHideChildren="1"/>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>008080</Color>
                              <GroupHeader>1</GroupHeader>
                              <Address>+38</Address>
                              <Offsets>
                                <Offset>0</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>10118</ID>
                              <Description>"P-&gt;PlaySystem"</Description>
                              <Options moHideChildren="1"/>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>008080</Color>
                              <GroupHeader>1</GroupHeader>
                              <Address>+48</Address>
                              <Offsets>
                                <Offset>0</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>10072</ID>
                              <Description>"P-&gt;itemTextList"</Description>
                              <Options moHideChildren="1"/>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>008080</Color>
                              <GroupHeader>1</GroupHeader>
                              <Address>+98</Address>
                              <Offsets>
                                <Offset>0</Offset>
                              </Offsets>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>10073</ID>
                                  <Description>"P-&gt;itemkTextContent"</Description>
                                  <ShowAsSigned>0</ShowAsSigned>
                                  <Color>008080</Color>
                                  <GroupHeader>1</GroupHeader>
                                  <Address>+10</Address>
                                  <Offsets>
                                    <Offset>0</Offset>
                                  </Offsets>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>10074</ID>
                                  <Description>"_size"</Description>
                                  <ShowAsSigned>0</ShowAsSigned>
                                  <VariableType>4 Bytes</VariableType>
                                  <Address>+18</Address>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>10661</ID>
                  <Description>"Required.getMainCamera"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

{$lua}
if syntaxcheck then return end
local ptr = AddressList["Pointer-&gt;MainCamera"]
Recorder.addressUpdate(memrec, ptr, "MainCamera_ptr", {0x00})
{$asm}

registerlabel(MainCamera_ptr)

mem0x0A:
  readmem(MainCamera.Update,8)
  mov [MainCamera_ptr],rcx
  jmp return
  align 10 CC

MainCamera_ptr:
  dq 0

MainCamera.Update:
  jmp mem0x0A
  nop 3
return:

[DISABLE]

MainCamera.Update:
  readmem(mem0x0A,8)

unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: MainCamera.Update

GameAssembly.dll.il2cpp+18F374B: CC                          - int 3
GameAssembly.dll.il2cpp+18F374C: CC                          - int 3
GameAssembly.dll.il2cpp+18F374D: CC                          - int 3
GameAssembly.dll.il2cpp+18F374E: CC                          - int 3
GameAssembly.dll.il2cpp+18F374F: CC                          - int 3
MainCamera.&lt;SetVignette&gt;b__150_1: 48 83 EC 28                 - sub rsp,28
GameAssembly.dll.il2cpp+18F3754: 48 8B 89 88 00 00 00        - mov rcx,[rcx+00000088]
GameAssembly.dll.il2cpp+18F375B: 48 85 C9                    - test rcx,rcx
GameAssembly.dll.il2cpp+18F375E: 74 1E                       - je GameAssembly.dll.il2cpp+18F377E
GameAssembly.dll.il2cpp+18F3760: 48 8B 49 48                 - mov rcx,[rcx+48]
GameAssembly.dll.il2cpp+18F3764: 48 85 C9                    - test rcx,rcx
GameAssembly.dll.il2cpp+18F3767: 74 15                       - je GameAssembly.dll.il2cpp+18F377E
GameAssembly.dll.il2cpp+18F3769: 48 8B 01                    - mov rax,[rcx]
GameAssembly.dll.il2cpp+18F376C: 4C 8B 80 10 02 00 00        - mov r8,[rax+00000210]
GameAssembly.dll.il2cpp+18F3773: 48 83 C4 28                 - add rsp,28
GameAssembly.dll.il2cpp+18F3777: 48 FF A0 08 02 00 00        - jmp qword ptr [rax+00000208]
GameAssembly.dll.il2cpp+18F377E: E8 1D 0D 6D FE              - call GameAssembly.dll.text+2954A0
GameAssembly.dll.il2cpp+18F3783: CC                          - int 3
GameAssembly.dll.il2cpp+18F3784: CC                          - int 3
GameAssembly.dll.il2cpp+18F3785: CC                          - int 3
GameAssembly.dll.il2cpp+18F3786: CC                          - int 3
GameAssembly.dll.il2cpp+18F3787: CC                          - int 3
GameAssembly.dll.il2cpp+18F3788: CC                          - int 3
GameAssembly.dll.il2cpp+18F3789: CC                          - int 3
GameAssembly.dll.il2cpp+18F378A: CC                          - int 3
GameAssembly.dll.il2cpp+18F378B: CC                          - int 3
GameAssembly.dll.il2cpp+18F378C: CC                          - int 3
GameAssembly.dll.il2cpp+18F378D: CC                          - int 3
GameAssembly.dll.il2cpp+18F378E: CC                          - int 3
GameAssembly.dll.il2cpp+18F378F: CC                          - int 3
// ---------- INJECTING HERE ----------
MainCamera.Update: 40 55                       - push rbp
// ---------- DONE INJECTING  ----------
GameAssembly.dll.il2cpp+18F3792: 53                          - push rbx
GameAssembly.dll.il2cpp+18F3793: 48 8D 6C 24 B1              - lea rbp,[rsp-4F]
GameAssembly.dll.il2cpp+18F3798: 48 81 EC E8 00 00 00        - sub rsp,000000E8
GameAssembly.dll.il2cpp+18F379F: 80 3D 4D A8 8E 00 00        - cmp byte ptr [GameAssembly.dll+24AFFF3],00
GameAssembly.dll.il2cpp+18F37A6: 48 8B D9                    - mov rbx,rcx
GameAssembly.dll.il2cpp+18F37A9: 75 13                       - jne GameAssembly.dll.il2cpp+18F37BE
GameAssembly.dll.il2cpp+18F37AB: 48 8D 0D 36 58 85 00        - lea rcx,[GameAssembly.dll.data+175FE8]
GameAssembly.dll.il2cpp+18F37B2: E8 79 0B 6D FE              - call GameAssembly.dll.text+295330
GameAssembly.dll.il2cpp+18F37B7: C6 05 35 A8 8E 00 01        - mov byte ptr [GameAssembly.dll+24AFFF3],01
GameAssembly.dll.il2cpp+18F37BE: 80 BB 50 01 00 00 00        - cmp byte ptr [rbx+00000150],00
GameAssembly.dll.il2cpp+18F37C5: 48 89 B4 24 00 01 00 00     - mov [rsp+00000100],rsi
GameAssembly.dll.il2cpp+18F37CD: 48 89 BC 24 08 01 00 00     - mov [rsp+00000108],rdi
GameAssembly.dll.il2cpp+18F37D5: 4C 89 B4 24 10 01 00 00     - mov [rsp+00000110],r14
GameAssembly.dll.il2cpp+18F37DD: 4C 89 BC 24 E0 00 00 00     - mov [rsp+000000E0],r15
GameAssembly.dll.il2cpp+18F37E5: 0F 29 B4 24 D0 00 00 00     - movaps [rsp+000000D0],xmm6
GameAssembly.dll.il2cpp+18F37ED: 0F 29 BC 24 C0 00 00 00     - movaps [rsp+000000C0],xmm7
GameAssembly.dll.il2cpp+18F37F5: 44 0F 29 84 24 B0 00 00 00  - movaps [rsp+000000B0],xmm8
GameAssembly.dll.il2cpp+18F37FE: 44 0F 29 8C 24 A0 00 00 00  - movaps [rsp+000000A0],xmm9
GameAssembly.dll.il2cpp+18F3807: 44 0F 29 94 24 90 00 00 00  - movaps [rsp+00000090],xmm10
GameAssembly.dll.il2cpp+18F3810: 44 0F 29 9C 24 80 00 00 00  - movaps [rsp+00000080],xmm11
GameAssembly.dll.il2cpp+18F3819: 0F 84 9D 00 00 00           - je GameAssembly.dll.il2cpp+18F38BC
GameAssembly.dll.il2cpp+18F381F: 48 8B 0D C2 57 85 00        - mov rcx,[GameAssembly.dll.data+175FE8]
GameAssembly.dll.il2cpp+18F3826: 48 8B BB 48 01 00 00        - mov rdi,[rbx+00000148]
GameAssembly.dll.il2cpp+18F382D: F6 81 33 01 00 00 04        - test byte ptr [rcx+00000133],04
GameAssembly.dll.il2cpp+18F3834: 74 0E                       - je GameAssembly.dll.il2cpp+18F3844
GameAssembly.dll.il2cpp+18F3836: 83 B9 E0 00 00 00 00        - cmp dword ptr [rcx+000000E0],00
GameAssembly.dll.il2cpp+18F383D: 75 05                       - jne GameAssembly.dll.il2cpp+18F3844
GameAssembly.dll.il2cpp+18F383F: E8 0C 42 65 FE              - call GameAssembly.il2cpp_runtime_class_init
GameAssembly.dll.il2cpp+18F3844: 33 D2                       - xor edx,edx
GameAssembly.dll.il2cpp+18F3846: 48 8B CF                    - mov rcx,rdi
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10685</ID>
                      <Description>"Pointer-&gt;MainCamera"</Description>
                      <Options moHideChildren="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>008080</Color>
                      <GroupHeader>1</GroupHeader>
                      <Address/>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>10004</ID>
                  <Description>"Required.mono_createChildren"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local field = {
    "P-&gt;PlayerStat",
    "P-&gt;TimeStat",
    "Pointer-&gt;MainCamera",
}

[ENABLE]

synchronize(function()
    for i = 1, #field do Recorder.mono_createChildren(AddressList[field[i]]) end
end)

[DISABLE]

synchronize(function()
    for i = 1, #field do Recorder.removeChildren(AddressList[field[i]]) end
end)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10070</ID>
                  <Description>"Required.getDropdown.Item"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["P-&gt;itemTextList"]
local item   = AddressList["Dropdown.Item"]

[ENABLE]

local base = Recorder.getAddress(Recorder.getChild(parent, "P-&gt;itemkTextContent"))
local size = tonumber(Recorder.getChild(parent, "_size").value)

item.DropdownList.clear()

for i = 0, size - 1 do
    local addr = readPointer(base + i * 0x08 + 0x20)
    local id   = readString(readPointer(addr + 0x10) + 0x14, 6000, true)
    local name = readString(readPointer(addr + 0x28) + 0x14, 6000, true)
    item.DropdownList.add(("%s:%s"):format(id, name))
end

item.DisplayAsDropDownListItem = true
item.DropDownDescriptionOnly   = true


[DISABLE]

item.DropdownList.clear()
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>10071</ID>
                      <Description>"Dropdown.Item"</Description>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>16</ID>
                  <Description>"Dropdown.Boolean"</Description>
                  <DropDownList DisplayValueAsItem="1">0:False
1:True
</DropDownList>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>10069</ID>
                  <Description>"Reserved.GiveItem"</Description>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

AddressList["Required.getDropdown.Item"].active = true

local method = mono_findMethod("WS1RCLASS", "DataSet", "AddItem")
local instance = Recorder.getAddress(AddressList["P-&gt;DataSet"])
local id, name = Recorder.showDropdown(AddressList["Dropdown.Item"])

AddressList["Required.getDropdown.Item"].active = false

local count = Recorder.inputQueryForAdd(memrec, 1)
local gType = inputQuery(memrec.description, "Get item type:", "2")
local args = {
    {type = vtString, value = id},
    {type = vtDword,  value = count},
    {type = vtDword,  value = gType}
}

mono_invoke_method("", method, instance, args); speakEnglish("executed"); return "nop"

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"Reserved.enableDebugMode"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

AddressList.getMemoryRecordByID(777).active, _G['isDebug'] = true, true

return 'nop'

[DISABLE]
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Toggle Activation</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>88</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"Reserved.outputOptionsForBBcode"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local function outputOptionsForBBcode(mr)
    for i = 0, mr.count - 1 do
        local base = mr[i].description
        local isAA = (mr[i].type == vtAutoAssembler) and '[color=Dodgerblue]'..base..'[/color]'
        local isAG = mr[i].isAddressGroupHeader and '[color=Olive]'..base..'[/color]'
        local isGH = mr[i].isGroupHeader and '[color=Gray]'..base..'[/color]'
        local info = isAA or isAG or isGH or base
    	if (mr[i].count == 0) then print('[*]'..info); goto continue end
        print('[*]'..info)
        print('[list]'); outputOptionsForBBcode(mr[i]); print('[/list]')
        ::continue::
    end
end

[ENABLE]

local main = AddressList[0]

print([==[[color=Gray]&lt;colors&gt;[/color]
[list]
[*][color=Dodgerblue]Script[/color] or [color=Gray]Script that's no available for AOB Error[/color]
[*][color=Olive]AddressGroupHeader[/color]
[*][color=Gray]GroupHeader/Comment[/color]
[*]Variable
[/list]]==])

for i = 0, main.count - 2 do
    print('[color=Gray]'..main[i].description..'[/color]')
    print('[list]'); outputOptionsForBBcode(main[i]); print('[/list]')
end

print(''); return 'nop'

[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>
    <LuaScriptEntry Name="Auto Attach Process">_G["isDebug"] = not (messageDialog("Auto-attach to process?", 3, 0, 1) == mrYes)
local pid = getWindowProcessID(findWindow(Utf8ToAnsi("UnityWndClass")))
if not isDebug then openProcess(pid) end
if isDebug then MainForm.sbOpenProcess.doClick() end
</LuaScriptEntry>
    <LuaScriptEntry Name="Activate Table Settings">AddressList.getMemoryRecordByID(777).active = getAddressSafe("$process")
</LuaScriptEntry>
  </LuaScript>
</CheatTable>
