<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Full Groove Gague"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DankaguPL.exe
  Version: 
  Date   : 2024-05-24
  Author : Compeador

  This script does blah blah blah
}

{ Game   : DankaguPL.exe
  Version: 
  Date   : 2024-02-12
  Author : Compeador
}

[ENABLE]

aobscanmodule(INJ_FULLHP,GameAssembly.dll,F3 0F 11 49 10 0F) // should be unique
alloc(newmem,$1000,INJ_FULLHP)

label(code)
label(return)

newmem:
  push rax
  xor rax,rax,
  mov eax,(float)100.0
  movd xmm1,eax
  pop rax
code:
  movss [rcx+10],xmm1
  jmp return

INJ_FULLHP:
  jmp newmem
return:
registersymbol(INJ_FULLHP)

aobscanmodule(INJ_FULLHP2,GameAssembly.dll,F3 0F 11 49 10 0F 2F) // should be unique
alloc(newmem2,$1000,INJ_FULLHP2)

label(code2)
label(return2)

newmem2:
  push rax
  xor rax,rax,
  mov eax,(float)100.0
  movd xmm1,eax
  pop rax
code2:
  movss [rcx+10],xmm1
  jmp return2

INJ_FULLHP2:
  jmp newmem2
return2:
registersymbol(INJ_FULLHP2)

[DISABLE]

INJ_FULLHP:
  db F3 0F 11 49 10

unregistersymbol(INJ_FULLHP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+3B7C03

GameAssembly.dll+3B7BF7: CC                    - int 3 
GameAssembly.dll+3B7BF8: CC                    - int 3 
GameAssembly.dll+3B7BF9: CC                    - int 3 
GameAssembly.dll+3B7BFA: CC                    - int 3 
GameAssembly.dll+3B7BFB: CC                    - int 3 
GameAssembly.dll+3B7BFC: CC                    - int 3 
GameAssembly.dll+3B7BFD: CC                    - int 3 
GameAssembly.dll+3B7BFE: CC                    - int 3 
GameAssembly.dll+3B7BFF: CC                    - int 3 
GameAssembly.dll+3B7C00: 0F 57 C0              - xorps xmm0,xmm0
// ---------- INJECTING HERE ----------
GameAssembly.dll+3B7C03: F3 0F 11 49 10        - movss [rcx+10],xmm1
// ---------- DONE INJECTING  ----------
GameAssembly.dll+3B7C08: 0F 2F C1              - comiss xmm0,xmm1
GameAssembly.dll+3B7C0B: 76 0A                 - jna GameAssembly.dll+3B7C17
GameAssembly.dll+3B7C0D: C7 41 10 00 00 00 00  - mov [rcx+10],00000000
GameAssembly.dll+3B7C14: 0F 57 C9              - xorps xmm1,xmm1
GameAssembly.dll+3B7C17: 0F 2F 0D 86 D9 D0 01  - comiss xmm1,[GameAssembly.dll+20C55A4]
GameAssembly.dll+3B7C1E: 76 07                 - jna GameAssembly.dll+3B7C27
GameAssembly.dll+3B7C20: C7 41 10 00 00 C8 42  - mov [rcx+10],42C80000
GameAssembly.dll+3B7C27: C3                    - ret 
GameAssembly.dll+3B7C28: CC                    - int 3 
GameAssembly.dll+3B7C29: CC                    - int 3 
}
INJ_FULLHP2:
  db F3 0F 11 49 10

unregistersymbol(INJ_FULLHP2)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+56AEA3

GameAssembly.dll+56AE88: 48 8B D9              - mov rbx,rcx
GameAssembly.dll+56AE8B: E8 10 85 D9 FF        - call GameAssembly.dll+3033A0
GameAssembly.dll+56AE90: C7 43 10 00 00 00 00  - mov [rbx+10],00000000
GameAssembly.dll+56AE97: 48 83 C4 20           - add rsp,20
GameAssembly.dll+56AE9B: 5B                    - pop rbx
GameAssembly.dll+56AE9C: C3                    - ret 
GameAssembly.dll+56AE9D: CC                    - int 3 
GameAssembly.dll+56AE9E: CC                    - int 3 
GameAssembly.dll+56AE9F: CC                    - int 3 
GameAssembly.dll+56AEA0: 0F 57 C0              - xorps xmm0,xmm0
// ---------- INJECTING HERE ----------
GameAssembly.dll+56AEA3: F3 0F 11 49 10        - movss [rcx+10],xmm1
// ---------- DONE INJECTING  ----------
GameAssembly.dll+56AEA8: 0F 2F C1              - comiss xmm0,xmm1
GameAssembly.dll+56AEAB: 76 0A                 - jna GameAssembly.dll+56AEB7
GameAssembly.dll+56AEAD: C7 41 10 00 00 00 00  - mov [rcx+10],00000000
GameAssembly.dll+56AEB4: 0F 57 C9              - xorps xmm1,xmm1
GameAssembly.dll+56AEB7: 0F 2F 0D 9A 58 BA 01  - comiss xmm1,[GameAssembly.dll+2110758]
GameAssembly.dll+56AEBE: 76 07                 - jna GameAssembly.dll+56AEC7
GameAssembly.dll+56AEC0: C7 41 10 00 00 C8 42  - mov [rcx+10],42C80000
GameAssembly.dll+56AEC7: C3                    - ret 
GameAssembly.dll+56AEC8: CC                    - int 3 
GameAssembly.dll+56AEC9: CC                    - int 3 
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>96</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Auto Mode"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DankaguPL.exe
  Version: 
  Date   : 2024-02-12
  Author : Compeador

  This script patches default "MISS" to "Perfect",
  and change the MISS timer from 100ms to 3ms.
}

[ENABLE]


aobscanmodule(INJ_PERFECT,GameAssembly.dll,41 B9 04 00 00 00 44 8B C6) // should be unique
alloc(newmem,$1000,INJ_PERFECT)

label(code)
label(return)

newmem:
  mov r9d,0
  jmp return
code:
  mov r9d,00000004
  jmp return

INJ_PERFECT:
  jmp newmem
  nop
return:
registersymbol(INJ_PERFECT)

aobscanmodule(INJ_AUTO,GameAssembly.dll,0F 2F B3 D4 00 00 00) // should be unique
alloc(newmem2,$1000,INJ_AUTO)

label(code2)
label(return2)
label(Lret2)

newmem2:
  push rax
  movq rax,xmm0
  push rax
  xor rax,rax
  mov eax,(float)0.003
  movd xmm0,eax
  comiss xmm6,xmm0
Lret2:
  pop rax
  movq xmm0,rax
  pop rax
  jmp return2

code2:
  comiss xmm6,[rbx+000000D4]
  jmp return2

INJ_AUTO:
  jmp newmem2
  nop 2
return2:
registersymbol(INJ_AUTO)

[DISABLE]

INJ_PERFECT:
  db 41 B9 04 00 00 00

unregistersymbol(INJ_PERFECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+7ADF18

GameAssembly.dll+7ADEEC: F3 0F 10 4F 2C        - movss xmm1,[rdi+2C]
GameAssembly.dll+7ADEF1: 45 33 C0              - xor r8d,r8d
GameAssembly.dll+7ADEF4: E8 77 F9 FF FF        - call GameAssembly.dll+7AD870
GameAssembly.dll+7ADEF9: 48 85 C0              - test rax,rax
GameAssembly.dll+7ADEFC: 0F 84 B5 01 00 00     - je GameAssembly.dll+7AE0B7
GameAssembly.dll+7ADF02: 0F 28 F7              - movaps xmm6,xmm7
GameAssembly.dll+7ADF05: F3 0F 5C 70 18        - subss xmm6,[rax+18]
GameAssembly.dll+7ADF0A: 0F 2F B3 CC 00 00 00  - comiss xmm6,[rbx+000000CC]
GameAssembly.dll+7ADF11: 72 2B                 - jb GameAssembly.dll+7ADF3E
GameAssembly.dll+7ADF13: 4C 89 64 24 28        - mov [rsp+28],r12
// ---------- INJECTING HERE ----------
GameAssembly.dll+7ADF18: 41 B9 04 00 00 00     - mov r9d,00000004
// ---------- DONE INJECTING  ----------
GameAssembly.dll+7ADF1E: 44 8B C6              - mov r8d,esi
GameAssembly.dll+7ADF21: F3 0F 11 74 24 20     - movss [rsp+20],xmm6
GameAssembly.dll+7ADF27: 8B D5                 - mov edx,ebp
GameAssembly.dll+7ADF29: 48 8B CB              - mov rcx,rbx
GameAssembly.dll+7ADF2C: E8 8F 01 00 00        - call GameAssembly.dll+7AE0C0
GameAssembly.dll+7ADF31: FF C6                 - inc esi
GameAssembly.dll+7ADF33: 49 83 C6 08           - add r14,08
GameAssembly.dll+7ADF37: 8B CE                 - mov ecx,esi
GameAssembly.dll+7ADF39: E9 53 FF FF FF        - jmp GameAssembly.dll+7ADE91
GameAssembly.dll+7ADF3E: 45 38 67 30           - cmp [r15+30],r12l
}
INJ_AUTO:
  db 0F 2F B3 D4 00 00 00

unregistersymbol(INJ_AUTO)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+6DF001

GameAssembly.dll+6DEFD5: 0F 84 DF 01 00 00     - je GameAssembly.dll+6DF1BA
GameAssembly.dll+6DEFDB: F3 0F 10 4F 2C        - movss xmm1,[rdi+2C]
GameAssembly.dll+6DEFE0: 45 33 C0              - xor r8d,r8d
GameAssembly.dll+6DEFE3: E8 68 F9 FF FF        - call GameAssembly.dll+6DE950
GameAssembly.dll+6DEFE8: 48 85 C0              - test rax,rax
GameAssembly.dll+6DEFEB: 0F 84 C9 01 00 00     - je GameAssembly.dll+6DF1BA
GameAssembly.dll+6DEFF1: 0F 28 C7              - movaps xmm0,xmm7
GameAssembly.dll+6DEFF4: 41 0F 28 F0           - movaps xmm6,xmm8
GameAssembly.dll+6DEFF8: F3 0F 58 40 18        - addss xmm0,[rax+18]
GameAssembly.dll+6DEFFD: F3 0F 5C F0           - subss xmm6,xmm0
// ---------- INJECTING HERE ----------
GameAssembly.dll+6DF001: 0F 2F B3 D4 00 00 00  - comiss xmm6,[rbx+000000D4]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+6DF008: 72 2B                 - jb GameAssembly.dll+6DF035
GameAssembly.dll+6DF00A: 4C 89 64 24 28        - mov [rsp+28],r12
GameAssembly.dll+6DF00F: 41 B9 04 00 00 00     - mov r9d,00000004
GameAssembly.dll+6DF015: 44 8B C6              - mov r8d,esi
GameAssembly.dll+6DF018: F3 0F 11 74 24 20     - movss [rsp+20],xmm6
GameAssembly.dll+6DF01E: 8B D5                 - mov edx,ebp
GameAssembly.dll+6DF020: 48 8B CB              - mov rcx,rbx
GameAssembly.dll+6DF023: E8 98 01 00 00        - call GameAssembly.dll+6DF1C0
GameAssembly.dll+6DF028: FF C6                 - inc esi
GameAssembly.dll+6DF02A: 49 83 C6 08           - add r14,08
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Easier Perfect"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DankaguPL.exe
  Version: 
  Date   : 2024-02-12
  Author : Compeador

  Modiy the float value if you want, but
  it's recommended no more than 100.
}

[ENABLE]

aobscanmodule(INJ_TPERFECT,GameAssembly.dll,F3 0F 10 50 28 F3) // should be unique
alloc(newmem,$1000,INJ_TPERFECT)

label(code)
label(return)

newmem:
  cmp edi,0
  je Lper
  cmp edi,1
  je Lbri
  cmp edi,2
  je Lgra
  cmp edi,3
  je Lbad
  jmp code

Lper:
  mov [rax+28],(float)50.0
  jmp code
Lbri:
  mov [rax+28],(float)80.0
  jmp code
Lgra:
  mov [rax+28],(float)95.0
  jmp code
Lbad:
  mov [rax+28],(float)100.0
  jmp code
code:
  movss xmm2,[rax+28]
  jmp return

INJ_TPERFECT:
  jmp newmem
return:
registersymbol(INJ_TPERFECT)

[DISABLE]

INJ_TPERFECT:
  db F3 0F 10 50 28

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+A4CDE4

GameAssembly.dll+A4CDBA: 0F 84 1A 01 00 00        - je GameAssembly.dll+A4CEDA
GameAssembly.dll+A4CDC0: 48 8B 48 58              - mov rcx,[rax+58]
GameAssembly.dll+A4CDC4: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+A4CDC7: 0F 84 0D 01 00 00        - je GameAssembly.dll+A4CEDA
GameAssembly.dll+A4CDCD: 45 33 C0                 - xor r8d,r8d
GameAssembly.dll+A4CDD0: 8B D7                    - mov edx,edi
GameAssembly.dll+A4CDD2: E8 09 EB D5 FF           - call GameAssembly.dll+7AB8E0
GameAssembly.dll+A4CDD7: 48 85 C0                 - test rax,rax
GameAssembly.dll+A4CDDA: 0F 84 FA 00 00 00        - je GameAssembly.dll+A4CEDA
GameAssembly.dll+A4CDE0: 48 8B 4E 10              - mov rcx,[rsi+10]
// ---------- INJECTING HERE ----------
GameAssembly.dll+A4CDE4: F3 0F 10 50 28           - movss xmm2,[rax+28]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+A4CDE9: F3 0F 5E 15 E7 88 67 01  - divss xmm2,[GameAssembly.dll+20C56D8]
GameAssembly.dll+A4CDF1: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+A4CDF4: 0F 84 E0 00 00 00        - je GameAssembly.dll+A4CEDA
GameAssembly.dll+A4CDFA: 48 8B 49 48              - mov rcx,[rcx+48]
GameAssembly.dll+A4CDFE: 48 85 C9                 - test rcx,rcx
GameAssembly.dll+A4CE01: 0F 84 D3 00 00 00        - je GameAssembly.dll+A4CEDA
GameAssembly.dll+A4CE07: 8B 41 14                 - mov eax,[rcx+14]
GameAssembly.dll+A4CE0A: F3 0F 10 49 10           - movss xmm1,[rcx+10]
GameAssembly.dll+A4CE0F: 85 C0                    - test eax,eax
GameAssembly.dll+A4CE11: 78 13                    - js GameAssembly.dll+A4CE26
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>98</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Money Pointer (open card menu)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DankaguPL.exe
  Version: 
  Date   : 2024-02-13
  Author : Compeador

  Open Mitama card menu or select any to activate pointer.
}

[ENABLE]

aobscanmodule(INJ_GOLD,GameAssembly.dll,8B 40 10 48 8D 4D 0F) // should be unique
alloc(newmem,$1000,INJ_GOLD)

label(code)
label(return)
label(pt_gold)

newmem:
  mov [pt_gold],rax
  jmp code
pt_gold:
  dq 0
registersymbol(pt_gold)

code:
  mov eax,[rax+10]
  lea rcx,[rbp+0F]
  jmp return

INJ_GOLD:
  jmp newmem
  nop 2
return:
registersymbol(INJ_GOLD)

[DISABLE]

INJ_GOLD:
  db 8B 40 10 48 8D 4D 0F

unregistersymbol(pt_gold)
unregistersymbol(INJ_GOLD)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+5CEC93

GameAssembly.dll+5CEC66: E8 F5 BC C7 FF        - call GameAssembly.il2cpp_runtime_class_init
GameAssembly.dll+5CEC6B: 48 8B 0D 2E 0A 30 02  - mov rcx,[GameAssembly.dll+28CF6A0]
GameAssembly.dll+5CEC72: E8 E9 F9 AA FF        - call GameAssembly.il2cpp_custom_attrs_free+1910
GameAssembly.dll+5CEC77: 48 85 C0              - test rax,rax
GameAssembly.dll+5CEC7A: 0F 84 C7 00 00 00     - je GameAssembly.dll+5CED47
GameAssembly.dll+5CEC80: 33 D2                 - xor edx,edx
GameAssembly.dll+5CEC82: 48 8B C8              - mov rcx,rax
GameAssembly.dll+5CEC85: E8 56 DE 3D 00        - call GameAssembly.dll+9ACAE0
GameAssembly.dll+5CEC8A: 48 85 C0              - test rax,rax
GameAssembly.dll+5CEC8D: 0F 84 B4 00 00 00     - je GameAssembly.dll+5CED47
// ---------- INJECTING HERE ----------
GameAssembly.dll+5CEC93: 8B 40 10              - mov eax,[rax+10]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+5CEC96: 48 8D 4D 0F           - lea rcx,[rbp+0F]
GameAssembly.dll+5CEC9A: 48 8B 15 CF E3 29 02  - mov rdx,[GameAssembly.dll+286D070]
GameAssembly.dll+5CECA1: 45 33 C0              - xor r8d,r8d
GameAssembly.dll+5CECA4: 89 45 0F              - mov [rbp+0F],eax
GameAssembly.dll+5CECA7: E8 64 8E B1 00        - call GameAssembly.dll+10E7B10
GameAssembly.dll+5CECAC: 48 85 DB              - test rbx,rbx
GameAssembly.dll+5CECAF: 0F 84 92 00 00 00     - je GameAssembly.dll+5CED47
GameAssembly.dll+5CECB5: 4C 8B 0B              - mov r9,[rbx]
GameAssembly.dll+5CECB8: 48 8B D0              - mov rdx,rax
GameAssembly.dll+5CECBB: 48 8B CB              - mov rcx,rbx
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>99</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Pointer"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>pt_gold</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>time diff of keydown and note</Description>
      <AddressString>GameAssembly.dll+7ADF05</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>F7</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>70</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>B3</Byte>
        <Byte>CC</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :call GameAssembly.dll+7AE0C0</Description>
      <AddressString>GameAssembly.dll+7ADD55</AddressString>
      <Before>
        <Byte>20</Byte>
        <Byte>44</Byte>
        <Byte>8D</Byte>
        <Byte>48</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>66</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>32</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :call GameAssembly.dll+7AE0C0</Description>
      <AddressString>GameAssembly.dll+7ADD89</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>32</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :call GameAssembly.dll+7AE0C0</Description>
      <AddressString>GameAssembly.dll+7ADF2C</AddressString>
      <Before>
        <Byte>8B</Byte>
        <Byte>D5</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CB</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>8F</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>C6</Byte>
        <Byte>49</Byte>
        <Byte>83</Byte>
        <Byte>C6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :call GameAssembly.dll+7AE0C0</Description>
      <AddressString>GameAssembly.dll+7AE05F</AddressString>
      <Before>
        <Byte>8B</Byte>
        <Byte>D5</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CB</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>5C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Comments>Info about this table:
</Comments>
</CheatTable>
