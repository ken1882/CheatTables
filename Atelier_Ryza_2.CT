<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>491</ID>
      <Description>"&gt;&gt; Atelier Ryza 2: Lost Legends and the Secret Fairy"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Activated="1"/>
      <Color>808000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end

local Ready = {}

function Ready.required(reqVer)
  local getVer = getCEVersion()
  local msg = 'You using Cheat Engine '..getVer..'.\nRequired that you use Cheat Engine '..reqVer..' or later.'
  local check = not (getVer &lt; reqVer) or error(messageDialog(msg, 2, 2))
  msg = 'Select a process to open.'
  check = process or error(messageDialog(msg, 2, 2))
  getAddressList().getMemoryRecordByDescription('CompactMode').Active = true
end

function Ready.enable(gameName)
  getAddressList().getMemoryRecordByDescription(gameName).Active = true
  memrec.Description, memrec.Color = '&gt;&gt; '..gameName, 0x00808000
end

function Ready.disable(gameName)
  getAddressList().getMemoryRecordByDescription(gameName).Active = false
  memrec.Description, memrec.Color = '&lt;&lt; '..'Check the box.', 0x000000FF
end

[ENABLE]

Ready.required(7.1)
Ready.enable('Atelier Ryza 2: Lost Legends and the Secret Fairy')

[DISABLE]

Ready.disable('Atelier Ryza 2: Lost Legends and the Secret Fairy')
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>738</ID>
          <Description>"SP"</Description>
          <LastState Value="5817" RealAddress="1417351D0"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>sp_addr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Gems"</Description>
          <LastState Value="9715174" RealAddress="141769CB8"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>gem_addr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Money"</Description>
          <LastState Value="47948" RealAddress="1417F3D08"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>money_addr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Gold Coin"</Description>
          <LastState Value="999887" RealAddress="1417F3D10"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>money_addr+08</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>490</ID>
          <Description>"HP recovery after battle"</Description>
          <LastState Activated="1"/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]

alloc(newmem,$1000,heal_hp)
label(code_heal_hp)
registersymbol(code_heal_hp)

newmem:
  code_heal_hp:
    mov r8d,[rcx+rax*4+010C]
    readmem(heal_hp,5)
    jmp return

heal_hp:
  jmp code_heal_hp
return:

[DISABLE]

heal_hp:
  db 44 89 44 81 0C

unregistersymbol(code_heal_hp)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>737</ID>
          <Description>"Rapid filling for AP"</Description>
          <LastState/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

write_ap:
  nop 2

write_ap2:
  nop 2

[DISABLE]

write_ap:
  db 7E 03

write_ap2:
  db 7E 03
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>826</ID>
          <Description>"Rapid filling for T-Lv gauge"</Description>
          <LastState/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

trace_tactical:
  nop 2

[DISABLE]

trace_tactical:
  db 75 1A
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>852</ID>
          <Description>"Combat Damage Multiplier"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Atelier_Ryza_2.exe (paused)
  Version: 
  Date   : 2021-06-25
  Author : Compeador

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJ_NOCOMBATDMG,Atelier_Ryza_2.exe,29 83 0C 01 00 00) // should be unique
alloc(newmem,$1000,INJ_NOCOMBATDMG)

label(code)
label(return)
label(Lret)
label(Lally)
label(Lenemy)
label(Lally_mul)
label(Lenemy_mul)
label(val_opt_dmgone_ally)
label(val_opt_dmgone_enemy)
label(val_dmgally_multiplier)
label(val_dmgenemy_multiplier)

newmem:
  push rcx
  movd rcx,xmm0
  push rcx
  movd rcx,xmm1
  push rcx

  mov ecx,[rbx+138]
  cmp ecx,70000000
  jbe Lenemy
  jmp Lally

Lenemy:
  mov ecx,[val_opt_dmgone_enemy]
  test ecx,ecx
  jz Lenemy_mul
  mov eax,1
  jmp Lret

Lenemy_mul:
  cvtsi2ss xmm0,eax
  mov ecx,[val_dmgenemy_multiplier]
  movd xmm1,ecx
  mulss xmm0,xmm1
  cvtss2si eax,xmm0
  jmp Lret

Lally:
  mov ecx,[val_opt_dmgone_ally]
  test ecx,ecx
  jz Lally_mul
  mov eax,1
  jmp Lret

Lally_mul:
  cvtsi2ss xmm0,eax
  mov ecx,[val_dmgally_multiplier]
  movd xmm1,ecx
  mulss xmm0,xmm1
  cvtss2si eax,xmm0
  jmp Lret

Lret:
  pop rcx
  movd xmm1,rcx
  pop rcx
  movd xmm0,rcx
  pop rcx
  jmp code

val_opt_dmgone_ally:
  dd 0
registersymbol(val_opt_dmgone_ally)

val_opt_dmgone_enemy:
  dd 0
registersymbol(val_opt_dmgone_enemy)

val_dmgally_multiplier:
  dd (float)1.0
registersymbol(val_dmgally_multiplier)

val_dmgenemy_multiplier:
  dd (float)1.0
registersymbol(val_dmgenemy_multiplier)

code:
  sub [rbx+0000010C],eax
  jmp return

INJ_NOCOMBATDMG:
  jmp newmem
  nop
return:
registersymbol(INJ_NOCOMBATDMG)

[DISABLE]

INJ_NOCOMBATDMG:
  db 29 83 0C 01 00 00

unregistersymbol(INJ_NOCOMBATDMG)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+333C1D

Atelier_Ryza_2.exe+333BF7: 48 8B 48 30           - mov rcx,[rax+30]
Atelier_Ryza_2.exe+333BFB: 48 8B 89 F8 21 00 00  - mov rcx,[rcx+000021F8]
Atelier_Ryza_2.exe+333C02: E8 F9 A4 28 00        - call Atelier_Ryza_2.exe+5BE100
Atelier_Ryza_2.exe+333C07: 29 37                 - sub [rdi],esi
Atelier_Ryza_2.exe+333C09: 8B 07                 - mov eax,[rdi]
Atelier_Ryza_2.exe+333C0B: 48 8B 74 24 58        - mov rsi,[rsp+58]
Atelier_Ryza_2.exe+333C10: 41 0F 48 C4           - cmovs eax,r12d
Atelier_Ryza_2.exe+333C14: 48 8B 6C 24 50        - mov rbp,[rsp+50]
Atelier_Ryza_2.exe+333C19: 89 07                 - mov [rdi],eax
Atelier_Ryza_2.exe+333C1B: 8B 07                 - mov eax,[rdi]
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+333C1D: 29 83 0C 01 00 00     - sub [rbx+0000010C],eax
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+333C23: 8B 07                 - mov eax,[rdi]
Atelier_Ryza_2.exe+333C25: 01 83 80 04 00 00     - add [rbx+00000480],eax
Atelier_Ryza_2.exe+333C2B: 44 38 64 24 70        - cmp [rsp+70],r12l
Atelier_Ryza_2.exe+333C30: 74 11                 - je Atelier_Ryza_2.exe+333C43
Atelier_Ryza_2.exe+333C32: 41 81 FE 21 4E 00 00  - cmp r14d,00004E21
Atelier_Ryza_2.exe+333C39: 77 08                 - ja Atelier_Ryza_2.exe+333C43
Atelier_Ryza_2.exe+333C3B: 41 8B CE              - mov ecx,r14d
Atelier_Ryza_2.exe+333C3E: E8 ED 0A FD FF        - call Atelier_Ryza_2.exe+304730
Atelier_Ryza_2.exe+333C43: 44 39 A3 0C 01 00 00  - cmp [rbx+0000010C],r12d
Atelier_Ryza_2.exe+333C4A: 7D 07                 - jnl Atelier_Ryza_2.exe+333C53
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>856</ID>
              <Description>"Enemy only deal 1 damage"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
val_opt_dmgone_ally:
 dd 1
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
val_opt_dmgone_ally:
  dd 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>857</ID>
              <Description>"Enemy only receive 1 damage"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
val_opt_dmgone_enemy:
 dd 1
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
val_opt_dmgone_enemy:
  dd 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>860</ID>
              <Description>"Enemy Damage Multiplier"</Description>
              <LastState Value="1" RealAddress="13FF700A4"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>val_dmgally_multiplier</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>859</ID>
              <Description>"Player damage multipler"</Description>
              <LastState Value="1" RealAddress="13FF700A8"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>val_dmgenemy_multiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>854</ID>
          <Description>"Wait Time Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Atelier_Ryza_2.exe (paused)
  Version: 
  Date   : 2021-06-25
  Author : Compeador

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJ_COMBAT_WT,Atelier_Ryza_2.exe,F3 0F 58 41 20 F3 0F 11 41 20 76) // should be unique
alloc(newmem,$1000,INJ_COMBAT_WT)

label(code)
label(return)
label(val_wtmul)
label(Lret)

newmem:
  push rax
  movd rax,xmm1
  push rax
  xor rax,rax
  mov eax,[rcx+14]
  cmp eax,ABAB0001
  jne Lret
  movd xmm1,[val_wtmul]
  mulss xmm0,xmm1
  jmp Lret

Lret:
  pop rax
  movd xmm1,rax
  pop rax
  jmp code

val_wtmul:
  dd (float)2.0
registersymbol(val_wtmul)

code:
  addss xmm0,[rcx+20]
  jmp return

INJ_COMBAT_WT:
  jmp newmem
return:
registersymbol(INJ_COMBAT_WT)

[DISABLE]

INJ_COMBAT_WT:
  db F3 0F 58 41 20

unregistersymbol(INJ_COMBAT_WT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+35E4E2

Atelier_Ryza_2.exe+35E4CC: 5F              - pop rdi
Atelier_Ryza_2.exe+35E4CD: C3              - ret 
Atelier_Ryza_2.exe+35E4CE: CC              - int 3 
Atelier_Ryza_2.exe+35E4CF: CC              - int 3 
Atelier_Ryza_2.exe+35E4D0: 40 53           - push rbx
Atelier_Ryza_2.exe+35E4D2: 48 83 EC 20     - sub rsp,20
Atelier_Ryza_2.exe+35E4D6: 0F 28 C1        - movaps xmm0,xmm1
Atelier_Ryza_2.exe+35E4D9: 0F 57 D2        - xorps xmm2,xmm2
Atelier_Ryza_2.exe+35E4DC: 0F 2F CA        - comiss xmm1,xmm2
Atelier_Ryza_2.exe+35E4DF: 48 8B D9        - mov rbx,rcx
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+35E4E2: F3 0F 58 41 20  - addss xmm0,[rcx+20]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+35E4E7: F3 0F 11 41 20  - movss [rcx+20],xmm0
Atelier_Ryza_2.exe+35E4EC: 76 16           - jna Atelier_Ryza_2.exe+35E504
Atelier_Ryza_2.exe+35E4EE: E8 2D 34 F2 FF  - call Atelier_Ryza_2.exe+281920
Atelier_Ryza_2.exe+35E4F3: F3 0F 10 4B 20  - movss xmm1,[rbx+20]
Atelier_Ryza_2.exe+35E4F8: 0F 2F C8        - comiss xmm1,xmm0
Atelier_Ryza_2.exe+35E4FB: 76 13           - jna Atelier_Ryza_2.exe+35E510
Atelier_Ryza_2.exe+35E4FD: F3 0F 11 43 20  - movss [rbx+20],xmm0
Atelier_Ryza_2.exe+35E502: EB 0C           - jmp Atelier_Ryza_2.exe+35E510
Atelier_Ryza_2.exe+35E504: 0F 2F D0        - comiss xmm2,xmm0
Atelier_Ryza_2.exe+35E507: 76 07           - jna Atelier_Ryza_2.exe+35E510
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>858</ID>
              <Description>"Multiplier"</Description>
              <LastState Value="2" RealAddress="13FF60035"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>val_wtmul</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>832</ID>
          <Description>"Don't Break"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc(newmem,$1000,write_break)
label(code_break,break_offset)
registersymbol(code_break,break_offset)

newmem:
  code_break:
    readmem(write_break,6)
    push rbp
    mov rbp,[break_offset]
    sub rbp,04
    cmp dword ptr [rbp+rsi],0
    pop rbp
    jne write_break+0E
    jmp return
    align 10 CC

  break_offset:
    readmem(write_break+08,4)
    align 08

write_break:
  jmp code_break
  nop
return:

[DISABLE]

write_break:
  readmem(code_break,6)

unregistersymbol(code_break,break_offset)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>722</ID>
          <Description>"Battle result EXP multiplier"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc(newmem,$1000,result_exp)
label(code_result_exp,exp_multiplier)
registersymbol(code_result_exp,exp_multiplier)

newmem:
  code_result_exp:
    readmem(result_exp,9)
    imul edi,[exp_multiplier]
    jmp return
    align 10 CC

  exp_multiplier:
    dd #4

result_exp:
  jmp code_result_exp
  nop 4
return:

[DISABLE]

result_exp:
  readmem(code_result_exp,9)

unregistersymbol(code_result_exp,exp_multiplier)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>718</ID>
              <Description>"Times"</Description>
              <LastState Value="4" RealAddress="13FF40020"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>exp_multiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>523</ID>
          <Description>"Battle result Money multiplier"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]

alloc(newmem,$1000,result_money)
label(code_result_money,money_multiplier)
registersymbol(code_result_money,money_multiplier)

newmem:
  code_result_money:
    readmem(result_money,5)
    imul edx,[money_multiplier]
    jmp return
    align 10 CC

  money_multiplier:
    dd #4

result_money:
  jmp code_result_money
return:

[DISABLE]

result_money:
  db 48 8B 5C 24 30

unregistersymbol(code_result_money,money_multiplier)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>524</ID>
              <Description>"Times"</Description>
              <LastState Value="4" RealAddress="13FF30020"/>
              <VariableType>Byte</VariableType>
              <Address>money_multiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>769</ID>
          <Description>"Move speed multiplier"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc(newmem,$1000,write_x_coord)
label(code_x_coord,code_y_coord,move_speed)
registersymbol(code_x_coord,code_y_coord,move_speed)

newmem:
  code_x_coord:
    readmem(write_x_coord,5)
    mulss xmm0,[move_speed]
    jmp return1
    align 10 CC

  code_y_coord:
    readmem(write_y_coord,5)
    mulss xmm2,[move_speed]
    jmp return2
    align 10 CC

  move_speed:
    dd (float)2.0

write_x_coord:
  jmp code_x_coord
return1:

write_y_coord:
  jmp code_y_coord
return2:

[DISABLE]

write_x_coord:
  readmem(code_x_coord,5)

write_y_coord:
  readmem(code_y_coord,5)

unregistersymbol(code_x_coord,code_y_coord,move_speed)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>770</ID>
              <Description>"Times"</Description>
              <LastState Value="2" RealAddress="13FF20040"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>move_speed</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>767</ID>
          <Description>"Jump height multiplier"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc(newmem,$1000,write_z_coord)
label(code_z_coord,high_jump)
registersymbol(code_z_coord,high_jump)

newmem:
  code_z_coord:
    readmem(write_z_coord,5)
    mulss xmm1,[high_jump]
    jmp return
    align 10 CC

  high_jump:
    dd (float)4.0

write_z_coord:
  jmp code_z_coord
return:

[DISABLE]

write_z_coord:
  readmem(code_z_coord,5)

unregistersymbol(code_z_coord,high_jump)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>766</ID>
              <Description>"Times"</Description>
              <LastState Value="4" RealAddress="13FF10020"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>high_jump</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>747</ID>
          <Description>"Change all Item quality"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc(newmem,$1000,read_item_ptr)
label(code_item_ptr,code_synth_quality,undo_synth_quality,call_item_quality,quality_value,quality_offset)
registersymbol(code_item_ptr,code_synth_quality,undo_synth_quality,call_item_quality,quality_value,quality_offset)

label(Lcall_item_quality_ret)

newmem:
  code_item_ptr:
    readmem(read_item_ptr,11)
    call call_item_quality
    jmp return
    align 10 CC

  code_synth_quality:
    push rdi
    mov rdi,rcx
    call call_item_quality
    pop rdi

  undo_synth_quality:
    readmem(read_synth_quality,5)
    align 10 CC

  call_item_quality:
    push rbp
    push rdx
    mov rbp,[quality_offset]
    lea rdx,[rdi+rbp]
    mov ax,[quality_value]
    cmp word ptr [rdx],ax
    jge Lcall_item_quality_ret
    mov [rdx],ax
  Lcall_item_quality_ret:
    pop rdx
    pop rbp
    ret
    align 10 CC

  quality_value:
    dw #999
    align 08

  quality_offset:
    readmem(read_synth_quality+03,1)
    align 08

read_item_ptr:
  jmp code_item_ptr
  nop 6
return:

read_synth_quality:
  jmp code_synth_quality

[DISABLE]

read_item_ptr:
  readmem(code_item_ptr,11)

read_synth_quality:
  readmem(undo_synth_quality,5)


unregistersymbol(code_item_ptr,code_synth_quality,undo_synth_quality,call_item_quality,quality_value,quality_offset)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>746</ID>
              <Description>"Value"</Description>
              <LastState Value="999" RealAddress="13FF80060"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>2 Bytes</VariableType>
              <Address>quality_value</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>773</ID>
          <Description>"Easy Synthesis level up"</Description>
          <LastState/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc(newmem,$1000,read_element)
label(code_element,undo_element,stack_element_offset)
registersymbol(code_element,undo_element,stack_element_offset)

newmem:
  code_element:
    readmem(read_element+0E,7)
    mov rax,[stack_element_offset]
    mov [rsp+rax],edx

  undo_element:
    readmem(read_element,7)
    jmp return
    align 10 CC

  stack_element_offset:
    readmem(read_element+03,4)
    align 08

read_element:
  jmp code_element
  nop 2
return:

[DISABLE]

read_element:
  readmem(undo_element,7)

unregistersymbol(code_element,undo_element,stack_element_offset)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>555</ID>
          <Description>"Character stats editor"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>E16941</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc(newmem,$1000,read_level)
label(code_level,stats_ptr)
registersymbol(code_level,stats_ptr)

newmem:
  code_level:
    readmem(read_level,7)
    mov [stats_ptr],rsi
    jmp return
    align 10 CC

  stats_ptr:
    dq 0

read_level:
  jmp code_level
  nop 2
return:

[DISABLE]

read_level:
  readmem(code_level,7)

unregistersymbol(code_level,stats_ptr)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>423</ID>
              <Description>"REQ: Check Character stats in the game."</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808040</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>844</ID>
              <Description>"CharacterList"</Description>
              <DropDownList DisplayValueAsItem="1">0:Ryza
1:Klaudia
2:Lent
3:Tao
4:Patricia
5:Clifford
6:Serri
</DropDownList>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808040</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>556</ID>
              <Description>"Pointer"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>stats_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>557</ID>
                  <Description>"Character ID"</Description>
                  <DropDownListLink>CharacterList</DropDownListLink>
                  <Color>000000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+00</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>558</ID>
                  <Description>"Lv"</Description>
                  <Color>000000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+04</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>559</ID>
                  <Description>"EXP"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+08</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>560</ID>
                  <Description>"HP"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>562</ID>
                  <Description>"Base MAX HP"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+14</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>564</ID>
                  <Description>"Base ATK"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>565</ID>
                  <Description>"Base DEF"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+20</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>566</ID>
                  <Description>"Base SPD"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+24</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>567</ID>
                  <Description>"Base Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+28</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>500</ID>
          <Description>"Item editor"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]

alloc(newmem,$1000,item_editor)
label(code_item_editor,code_synth_ptr,item_ptr)
registersymbol(code_item_editor,code_synth_ptr,item_ptr)

newmem:
  code_item_editor:
    readmem(item_editor,6)
    mov [item_ptr],rdi
    jmp return1
    align 10 CC

  code_synth_ptr:
    readmem(trace_synth_ptr,7)
    mov [item_ptr],rcx
    jmp return2
    align 10 CC

  item_ptr:
    dq 0

item_editor:
  jmp code_item_editor
  nop
return1:

trace_synth_ptr:
  jmp code_synth_ptr
  nop 2
return2:

[DISABLE]

item_editor:
  readmem(code_item_editor,6)

trace_synth_ptr:
  readmem(code_synth_ptr,7)

unregistersymbol(code_item_editor,code_synth_ptr,item_ptr)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>439</ID>
              <Description>"REQ: Highlighted item of Basket, Container, Equipment or during alchemy."</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808040</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>848</ID>
              <Description>"&lt;&lt; DropdownList: Created by mahopenguin"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808040</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>815</ID>
                  <Description>"ItemList"</Description>
                  <DropDownList DisplayValueAsItem="1">0:Clean Water
1:Plant Essence
2:Roteswasser Tonic
3:Jade Water
4:Ether Aqua
5:Foamy Water
6:Ancient Blue Water
7:Clover Milk
8:Black Water
9:Nameless Grass
10:Dry Grass
11:Poison Grass
12:Wasser Wheat
13:Sweet Leaf
14:Rosen Leaf
15:Ancient Branch
16:Lucky Clover
17:Blue Clover
18:Blue Herb
19:Torch Grass
20:Rishikelp
21:Glowing Diatom
22:Uni
23:Gold Uni
24:Water Uni
25:Ancient Uni
26:Emperor Uni
27:Health Flower
28:Northern Wind Flower
29:Sunny Honey Flower
30:Bubble Grass
31:Spring Princess
32:Delphi Rose
33:Fragile
34:Timeteller
35:Polar Cactus
36:Dream Flower
37:Rose Crystal
38:Taun
39:Tall Taun
40:Sapling Branch
41:Medicinal Moss
42:Fertile Soil
43:Medium Medicine
44:Bitter Root
45:Crimson Grass
46:Ancient Solution
47:Sage Grass
48:Life Leaf
49:Refueling Extract
50:Yugdore Water
51:Resentful Scream
52:Mushroom Powder
53:Stinky Trash
54:Burnt Ash
55:Dragon Flower
56:Demon Blood
57:Forest Sage
58:Dunkelheit
59:Dream Powder
60:Divine Liquid
61:Solflower
62:Soft Sand
63:Burning Sand
64:Ashen Sand
65:Polluted Humus
66:Emerald Glass
67:Seafloor Soil
68:Black Muck
69:Vortex Sand
70:Nectar Rock
71:Eroded Stone
72:Riverstone
73:Blue Flame Riverstone
74:Waterside Moss Stone
75:Ethereal Stone
76:Ancient Pillar
77:Coral Stone
78:Arknite
79:Crimson Ore
80:Aqua Ore
81:Lightning Ore
82:Wind Ore
83:Amatite Ore
84:Pentanite
85:Mordenite
86:Goldinite
87:Degenesis Stone
88:Septrin
89:Eternal Crystal
90:Small Crystals
91:Unknown Gemstone
92:Shell Pearl
93:Amber Crystal
94:Magnemarmor
95:Holy Arbor Crystal
96:Rainbow Gemstone
97:Amber Fragment
98:Glowing Coral
99:Star Fragment
100:Underworld Crystal
101:Dried Lumber
102:Flaming Black Sand
103:Magma Powder
104:Scrap Paper
105:Flammable Bark
106:Palma Bark
107:Natural Oil
108:Smokey Charcoal
109:Palma Charcoal
110:Fuel Coconut
111:Eternal Fire
112:Amber Oil
113:Beast Meat
114:Fresh Meat
115:Unknown Egg
116:Oil Tree Fruit
117:Nectar Fruit
118:Wild Potato
119:Portpea
120:Palma Fruit
121:Fresh Berry
122:Werder Nut
123:Fortune Fruit
124:Beehive
125:Silver Beehive
126:Gold Beehive
127:Ancient Beehive
128:Honey Ball
129:Eicheloa
130:Mushroom Colony
131:Utopiechampignon
132:Golden Crown
133:Jellyfish Mushroom
134:Dusk Mushroom
135:Danger Mushroom
136:Sardine
137:Exofish
138:Seriole
139:Pourpremoule
140:Crab
141:Mace Fish
142:Myria Fish
143:Lake Master
144:Pretty Shells
145:Spikey
146:Uni Starfish
147:Demon Crab
148:Dragonpalace Nautilus
149:Crown Shellfish
150:Imperial Fish
151:Seven Stars
152:Honey Ant
153:Lantern Fly
154:Rose Bee
155:Giant Beetle
156:Bomb Dragoon
157:Expiation Worm
158:Amber Fly
159:Lapis Papillion
160:Baby Wyrm
161:Trihorn
162:Ancient Bug
163:Spirit Isopod
164:Restraint Silk
165:Tough Vine
166:Arbor Ivy
167:Cotton Grass
168:Queen Spider Web
169:Angel Silk
170:Eiche
171:Tough Log
172:Mossy Driftwood
173:Holy Arbor Branch
174:Palma
175:Fossil Tree
176:Mana-Eater Branch
177:Ancient Log
178:Wooden Cog
179:Millennial Tree
180:Wing Plant
181:Sky Bubble
182:Crispy Mushroom
183:Rotwood Miasma
184:Water Holy Branch
185:Blue Puniball
186:Green Puniball
187:Red Puniball
188:Black Puniball
189:Silver Puniball
190:Gold Puniball
191:Pink Puniball
192:Animal Hide
193:Mythical Hide
194:Large Bone
195:Beast Fossil
196:Blessed Feather
197:Water Beast Fossil
198:Water Beast Scale
199:Cave Bat Wing
200:Goat Horn
201:Fairystone Fragment
202:Dark Crystal Fragment
203:Holy Stone Fragment
204:Magic Tome Piece
205:Old Magic Tome
206:Holy Tree Leaf
207:Abyss Bolt
208:Round Tablet
209:Ancient Fossil
210:Tempting Sap
211:White Moon Frost
212:Virgo Requiem Flower
213:Ember Stone
214:Shining Sand
215:Rusted Sword
216:Broken Tools
217:Ancient Sword
218:Mysterious Metal Shard
219:Beast Fin
220:Beast Shell
221:Beast Scales
222:Giant Puniball
223:Golem Core
224:Heroic Spirit
225:Giant Claws
226:Inverted Scale
227:Fairy Horn Adornment
228:Fluffy Wool
229:Demon Claws
230:Giant Bird Feather
231:Giant Bird Egg
232:Ether Core
233:Guardian Armor
234:Dragon Meat
235:Dragon Wing
236:Dragon Egg
237:Dragon Eye
238:Dragon Bone
239:Chestnut
269:Explosive Uni
270:Craft
271:Bomb
272:Ice Bomb
273:Plajig
274:Luft
275:Omega Craft
276:Rose Bomb
277:Kleid Ice Bomb
278:Strahl Plajig
279:Ratsel Luft
280:Bubble Bullet
281:Genesis Hammer
282:Lunar Lamp
283:Philosopher's Book
284:Grand Bomb
285:Crystal Ice Bomb
286:Laute Plajig
287:Wirbel Luft
288:N/A
289:Apocalypse
290:Mortal Bullet
301:Grass Beans
302:Dry Biscuit
303:Nectar
304:Ashra Milk
305:Ashra Donut
306:Cocktail Leb
307:Goddess Cup
308:Elixir
309:Nexfuelia
310:Heraus Ointment
311:Holy Beans
312:Mythic Nectar
313:Innocent Leb
314:Forbidden Elixir
315:Curative Milk
326:Fish Oil
327:War Powder
328:Energianica
329:Mystic Robe
330:Miracle Ebonyal
331:Astronomical Clock
332:Red War Powder
333:Blue Star Robe
334:Lunatic Debonyal
335:Reverse Clock
336:Order Breaker
337:Thorny Embrace
338:Poison Smoke
339:Witch's Potion
340:Heroic Geist
341:Poison Thorn Prison
342:Bottle of Poison
343:Demonic Potion
344:Master Spirit
355:Grass Sickle
356:Woodcutter's Axe
357:Bomb Rod
358:Bug Net
359:Fishing Rod
360:Wind Shoes
361:Emerald Band
362:Spirit Beast Whistle
363:Mana Lantern
364:Air Drop
365:Silent Sickle
366:Golden Axe
367:Blue Bomb Rod
368:Master Bug Net
369:Divine Fishing Rod
380:Red Neutralizer
381:Blue Neutralizer
382:Yellow Neutralizer
383:Green Neutralizer
384:Polishing Powder
385:Zettel
386:Reinforced Zettel
387:Alchemy Paint
388:Delphi Rose Incense
389:Ingot
390:Startium
391:Creaminea
392:Goldoterion
393:Grand Orgen
394:Samasten
395:Cloth
396:Bestial Air
397:Sorcery Rose
398:Eldrocode
399:Weise Cloth
400:Pearl Crystal
401:Amberlite
402:Spirinite
403:Saint's Diamond
404:Arc en Ciel
405:Waking Emerald
406:Honey
407:Eltz Sugar
408:Berry Syrup
409:Traveler's Water Orb
410:Super Pure Water
411:Port Liquid
412:Healing Chips
413:Holy Drop
414:Medicinal Cocktail
415:Poison Cube
416:Taboo Drop
417:Poison Powder
418:Lightning Sand
419:Polishing Sand
420:Marblestone
421:Gunpowder Base
422:Blue Flame Ember
423:Cool Gunpowder
424:Mixing Oil
425:Golden Oil
426:Meltstone
427:Ether Engine
428:Flour
429:Gelatin Powder
430:Alchemy Fibers
431:Heavenly String
432:Stahl Fiber
433:Holynut Lumber
434:Dry Powder
435:Mist Liquid
436:Feather Draft
437:Puni Leather
438:Master Leather
439:Dread Leather
440:Glass Flower
441:Spirit Bottle
442:Cross Cartridge
443:Crystal Element
444:Philosopher's Stone
445:Olden Philosopher's Stone
446:Plant Seeds
447:Stone Seeds
448:Fire Seeds
449:Water Seeds
450:Mystic Seeds
451:Poison Seeds
452:Golden Seeds
473:True Handmade Staff
474:Mystical Wonder
475:Inversion
476:Azure Tear
477:Sparkling Reverie
478:Kurzbogen
479:Ermine Tail
480:Wind Blaster
481:Lapis Flugel
482:Astrumnox
483:Training Sword
484:Heavy Bulwark
485:Hexbringer
486:Ragnarok
487:Demon Ender
488:Cross Daggers
489:Twin Edge
490:Halfmoons
491:Tiger Wolf Fangs
492:Amphisbaena
493:Index
494:Piercing Blade
495:Lowen Arger
496:Null Circle
497:Edel Schwert
498:Antique Feather
499:Forest Hunter
500:Espiral
501:Nimble Hawk
502:Immortal Chaser
503:Nature's Band
504:Giesskanne
505:Guidance Bangle
506:Excelsior Brace
507:Grand Floracion
528:Traveler's Coat
529:Soldier's Cuirass
530:Mimicry Robe
531:Draconic Heart
532:Layered Velvet
533:Noble Tunic
534:Leather Protector
535:Radiant Plate
536:Fairy Cloak
537:Fortress Armor
548:Uni Charm
549:Fluffy Tail
550:Locket of Devotion
551:Sage Circlet
552:Kaiser Cape
553:Four Spirits Amulet
554:Focus Glass
555:Hot-Blooded Bandana
556:Glory Belt
557:Energy Pendant
558:Gnade Ring
559:Quartz Necklace
560:Migratory Charm
561:Baron's Crown
562:Elixir Ring
563:Innocent Riches
564:Enlightened Bandana
565:Soul of Fortitude
566:Cosmos
577:Mysterious Relic
578:Broken Orb
579:Glorious Oil
580:Solar Oil
581:Mystic Star Water
582:Great Tree Seedling
583:Divine Branch
584:Dragon Skeleton Device
585:Memoria Bracelet
586:Broken Cherished Tools
587:Treasure Kit
588:Segur Nohak Seeds
589:Segur Nohak
590:Sweet Pom
591:Pom Tart
592:Demolition Bomb
593:Mana Liquid
594:Underworld Fairystone
595:Ryza's (Fake) Medicine
596:Plant Food
597:Sunlight Soil
598:White Flower of Purity
599:Crafter's Drill
600:Mountain of Envelopes
601:Celestial Instrument
602:Fi's Egg
603:Compass
604:Core Shard
605:Drive Fragment
606:Luceaux
607:Incendiary Crystal
608:Fire Vortex Crystal
609:Antiquated History Book
610:Keldorah Historical Record
626:Memory Fragment
627:History Fragment
628:Archeology Record
629:Exploration Notes
630:Old Scroll
631:Old Accessory
632:Living Bell Fragment
633:Nebula Core
634:Custom Flame Crystal
635:Awakening Incense
636:Dragon Device Blood
647:Girl's Lost Items
648:Ancient Fragment
649:Ancient Scroll
650:Sarding
651:Sidewalk Grass
652:Pudding
653:Samasten Necklace
674:Fire Essence
675:Ice Essence
676:Lightning Essence
677:Wind Essence
678:Aurora Essence
679:Aether Essence
680:Celestial Essence
681:Polaris Essence
682:Solar Essence
692:Reference Book
693:Forgotten Secrets
694:Making Demolition Bombs
697:Repairing the Living Bell
698:Creating Celestial Memories
699:Crafting a Custom Flame Crystal
700:Carving Awakening Incense
701:Mixing Dragon Device Blood
707:Mysterious Tablet
708:Making Lubricants
709:Growing Trees
710:Secret Recipe
711:Communication Guide
712:Fixing Tools
713:Make It Grow
714:Notes on Improving Soil
715:Making Sweets
716:Crafting Tool Recipes
717:Refining Mana
718:Extracting Mana
719:Mixing a Healing Ointment
720:Creating Friendship Bands
721:Making Purifying Seeds
722:Creating Jade Armband
723:Creating Spirit Beast Whistle
724:Breathing Underwater
725:Creating Lucky Pendant
726:Making Mana Lanterns
727:Clues of the Origins
728:Making Salty Pudding
729:Mixing Repair Liquid
730:Book Restoration
731:Forging an Incendiary Crystal
754:Fire Mist
755:Ice Mist
756:Lightning Mist
757:Wind Mist
758:Light Mist
780:Countryside Interior
781:Arid Region Interior
782:Rustic Interior
783:Casual Interior
789:Chick Doll
790:Crystal Object
791:Fairy Doll
792:Puni Jelly
793:Puni Doll
794:Exhibition Stand
795:Hanging Lantern
796:Round Table
797:Leather Sofa
798:Chic Sofa
799:Elegant Low Table
800:Pendulum Clock
801:Piano
802:Cute Bed
803:Extravagant Bed
804:Barrel
805:Fashionable Bench
806:Garden Table
807:Potted Plant
808:Oren Doll
809:Dinner Bell
810:Decorative Sword
811:Resort Bed
812:Resort Sofa
813:Table with Tablecloth
814:Potted Palm
815:Music Stand
816:Giant Manuscript
817:Pixie Pot
818:Great Elemental's Chair
819:Celestial Body Model
820:Farm Photo
821:Countryside Photo
822:Rocking Chair
823:Cute Sofa
824:Blackboard
825:Blacksmith Statue
826:Goat
827:Crisp Bun
828:Pumpkin Doll
829:Globe
830:Transport Cannon
832:Giant Kurken Fruit
833:Mountain of Sweets
834:Exotic Horn
835:Apple Basket
836:Knight's Armor
837:Teddy Bear
838:Beautiful Picture Frame
839:Mysterious Broom
840:Phonograph
841:Weasel Doll
842:Shiny Bust
843:Sparkling Bust
858:Keldorah Fairystone Piece
859:Dark Sunstone
860:Lunar Drop
861:Jewel Mushroom
862:Sealed Herb
863:Fenikis Chemical
864:Red Beetle
865:Crystal Tree
866:Obsidian Tail Feather
868:Rainbow Neutralizer
869:Alchemy Filter
870:Mosaic Hope
871:Max Vinegar
872:Liquefier
873:Medica Solution
874:Toxilixir
875:Jelly Sand
876:Edelhard
877:Crimson Base
878:Riot Coal
879:Silk Honey
880:Diamond String
881:Yggdras
882:Lumiere Potpourri
883:Noble Unit
884:Another Planet
885:Amalgam
886:Dragon's Tear
</DropDownList>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808040</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>814</ID>
                  <Description>"TraitList"</Description>
                  <DropDownList DisplayValueAsItem="1">0:Quality
1:Quality+
2:Quality++
3:High Quality
4:Best Quality
5:Cheap
6:Cheap+
7:Cheap++
8:Mass-Produced
9:Economical
10:Expensive
11:Expensive+
12:Expensive++
13:Finest
14:Rarest
15:Destructive
16:Destructive+
17:Destructive++
20:Rather Devastating
21:Very Devastating
22:Extremely Devastating
25:Healing
26:Healing+
27:Healing++
30:Ample Healing
31:Terrific Healing
32:Tremendous Healing
35:Critical
36:Critical+
37:Critical++
38:Critical Finish
39:Half Critical
40:Strong Blessing
41:Mighty Blessing
42:Herculean Blessing
43:Steward's Blessing
44:Guardian's Blessing
45:Seraph's Blessing
46:Quick Blessing
47:Light-Speed Blessing
48:Hermes's Blessing
49:Sleep Cure
50:Poison Cure
51:Burns Cure
52:Frostbite Cure
53:Curse Cure
54:Restraint Cure
55:Paralysis Cure
56:Curse Strength
57:Banish Strength
58:Banish All Strength
59:Curse Protection
60:Banish Protection
61:Banish All Protection
62:Curse Speed
63:Banish Speed
64:Banish All Speed
75:Area Bonus
76:Area Bonus+
77:Area Bonus++
78:Multi Bonus
79:Multi Burst
80:Few Bonus
81:Few Bonus+
82:Few Bonus++
83:Single Bonus
84:Single Blast
90:Rapid
91:Rapid+
92:Rapid++
93:Sonic Throw
94:Lightning Throw
95:Power Throw
96:Power Throw+
97:Power Throw++
98:Strong Throw
99:God Throw
100:Enhance Finisher
101:Enhance Finisher+
102:Enhance Finisher++
103:Ruthless Strike
104:Merciless Strike
105:HP Charge
106:HP Charge+
107:HP Charge++
108:Swelling Power
109:Life Force
110:Attack Charge
111:Attack Charge+
112:Attack Charge++
113:Beastly Power
114:War God's Power
115:Defense Charge
116:Defense Charge+
117:Defense Charge++
118:Steel Protection
119:Dragonscale Protection
120:Speed Charge
121:Speed Charge+
122:Speed Charge++
123:Supersonic
124:Speed of Light
125:ATK &amp; DEF Charge
126:ATK &amp; SPD Charge
127:DEF &amp; SPD Charge
128:Stats Charge
129:Stats Power
131:Skill Charge
132:Skill Charge+
133:Skill Charge++
134:Skill Boost
135:Super Skill
136:Puni Slayer
137:Weasel Slayer
138:Phantom Slayer
139:Golem Slayer
140:Knight Slayer
141:Scorpion Slayer
142:Hedgehog Slayer
143:Dragon Slayer
144:Shark Slayer
145:Beetle Slayer
146:Sheep Slayer
147:Roadrunner Slayer
148:Wyvern Slayer
149:Spirit Slayer
158:Faint Light
159:Nutritious
160:Fresh and Juicy
161:Dry
162:Little Luck
163:Fragile
164:Sturdy
165:Ancient Memory
166:Regal Air
167:Creeping Darkness
168:Mystic Shimmer
169:Dragon Killer
170:Deflects Evil
171:Conquers Evil
172:Divine
173:Magnetic
174:Connects Dimensions
175:Emits Miasma
176:Flammable
177:Viscous
178:Maiden's Prayer
179:Rare Metal
180:Silky Soft
181:Spirit's Blessing
182:Wisdom Crystal
183:Mutation
184:Dielectric
185:Wing Edge
186:Mana Heat
187:Supercooling
188:Remnant of Eternity
189:Perpetual Machine
190:Mostly Puni
191:Ripping Claws
192:Free Spirit
193:Infinite Vigor
194:Surging Strength
195:Lone Wolf Spirit
196:Ominous Pressure
197:Latent Awakening
198:Sound Health
199:Harvest Blessing
200:Tough
201:Diehard Spirit
202:Pure and Innocent
203:Surging Spirit
204:Lost Technology
205:Gentle Spirit
206:Starry Light
207:Residual Fire
208:Gap Entity
209:Legendary Entity
290:ATK &amp; DEF Charge+
291:ATK &amp; SPD Charge+
292:DEF &amp; SPD Charge+
293:Stats Charge+
294:Critical Destruction
295:Deadly Pursuit
296:Quick Arts
297:Superior Form
298:Dodge Move
299:Economy Core
300:Boost Core
341:None
</DropDownList>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808040</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>813</ID>
                  <Description>"EffectList"</Description>
                  <DropDownList DisplayValueAsItem="1">-1:None
0:Bursting Uni
1:Scattering Uni
2:Exploding Uni
3:Erupting Uni
4:Physical Damage XS
5:Physical Damage S
6:Physical Damage M
7:Physical Damage L
8:Physical Damage XL
9:Super Shockwave
10:Demonic Strike
11:Giant Explosion
12:Infinite Explosion
13:Fire Damage XS
14:Fire Damage S
15:Fire Damage M
16:Fire Damage L
17:Fire Damage XL
18:Crimson Fire
19:Searing Petal
20:Hellfire Rose
21:Extra Firepower
22:Apocalypse Flame
23:Ice Damage XS
24:Ice Damage S
25:Ice Damage M
26:Ice Damage L
27:Ice Damage XL
28:Embracing Ice
29:Freezing Waltz
30:Glacial Rondo
31:Diamond Dust
32:Whiteout
33:Lightning Damage XS
34:Lightning Damage S
35:Lightning Damage M
36:Lightning Damage L
37:Lightning Damage XL
38:Electrified Flash
39:Super Vibration Laser
40:Vibration Laser Gamma
41:Avalanche
42:Roaring Avalanche
43:Wind Damage XS
44:Wind Damage S
45:Wind Damage M
46:Wind Damage L
47:Wind Damage XL
48:Gust Fang
49:Divine Whirl
50:Wind God Whirl
51:Brave Storm
52:Brave Tempest
53:Bubble Bullet
54:Balloon Bullet
55:Grenade
56:Quaking Cannon
57:Shining Cannon
58:Finishing Strike
59:Ruthless Strike
60:Rock Crusher
61:Mountain Crusher
62:Continental Crusher
63:Star Crusher
64:Crescent Moon Light
65:Full Moon Light
66:New Moon Light
67:Bright Moon Light
68:The Color of Proof
69:The Secret of Lies
70:The Circle of Truth
71:The Law of the World
72:The Proof of Ruin
73:The Truth of Ruin
74:The Heart of Proof
75:The Light of Lies
76:The Axis of Truth
77:The Vow of Truth
78:The Proof of Chaos
79:The Truth of Chaos
80:Exhaustion Explosion
81:Giant Exhaustion Explosion
82:Mental Fatigue Explosion
83:Giant Mental Fatigue Explosion
84:Power-storing Mana
85:Electrifying Mana
86:Blasting Mana
87:Hurricane Mana
88:Thorn Shock
89:Great Thorn Shock
110:Uni Spike S
111:Uni Spike M
112:Uni Spike L
113:Uni Spike XL
114:Surprise! S
115:Surprise! M
116:Surprise! L
117:Surprise! XL
118:Fading Strength S
119:Fading Strength M
120:Fading Strength L
121:Fading Strength XL
122:Exploding Spikes S
123:Exploding Spikes M
124:Exploding Spikes L
125:Exploding Spikes XL
126:Destabilizing Shock S
127:Destabilizing Shock M
128:Destabilizing Shock L
129:Destabilizing Shock XL
130:Lowered Guard S
131:Lowered Guard M
132:Lowered Guard L
133:Lowered Guard XL
134:Corrosive Heat S
135:Corrosive Heat L
136:Slowdown S
137:Slowdown M
138:Slowdown L
139:Slowdown XL
140:Hoarfrost S
141:Hoarfrost L
142:Senselessness S
143:Senselessness M
144:Senselessness L
145:Senselessness XL
146:Electrify S
147:Electrify L
148:Blowback S
149:Blowback M
150:Blowback L
151:Blowback XL
152:Reinforcing Wind
153:Maximum Wind
154:Binding Wind S
155:Binding Wind L
156:Sticky Goo S
157:Sticky Goo M
158:Sticky Goo L
159:Sticky Goo XL
160:Hidden Poison
161:Hidden Sleep
162:Hidden Paralysis
163:Hidden Burns
164:Hidden Frostbite
165:Bubbly Prison S
166:Bubbly Prison M
167:Bubbly Prison L
168:Bubbly Prison XL
169:Gyro Effect S
170:Gyro Effect M
171:Gyro Effect L
172:Gyro Effect XL
173:Incinerating Flame S
174:Incinerating Flame M
175:Incinerating Flame L
176:Incinerating Flame XL
177:Scorching Garland S
178:Scorching Garland L
179:Inferno Garland
180:Crimson Garland
181:Ice Panier S
182:Ice Panier L
183:Imperial Line
184:Princess Line
185:Roaring Ring S
186:Roaring Ring M
187:Roaring Ring L
188:Roaring Ring XL
189:Super Focus S
190:Super Focus L
191:Extra Focus
192:Super Discharge
193:Vacuum Discharge
194:Maelstrom
195:Northern Maelstrom
196:Dancing Darkness S
197:Dancing Darkness M
198:Dancing Darkness L
199:Dancing Darkness XL
200:Earthquake S
201:Earthquake M
202:Earthquake L
203:Earthquake XL
204:Echoing Seas S
205:Echoing Seas M
206:Echoing Seas L
207:Echoing Seas XL
208:Colossal Hammer
209:Gigantic Hammer
210:Twilight Invitation S
211:Twilight Invitation M
212:Twilight Invitation L
213:Twilight Invitation XL
214:Hazy Outline S
215:Hazy Outline M
216:Hazy Outline L
217:Hazy Outline XL
218:Glowing Red Night
219:Glittering Moon Night
220:Vampiric Story
221:Vampiric Epic
222:Vampiric Engraving
223:Soulstealer's Story
224:Soulstealer's Epic
225:Soulstealer's Engraving
226:Illustration of Skyline
227:Illustration of Landscape
228:Illustration of a Sage
229:Illustration of the Sun
230:Illustration of the Earth
231:Illustration of Ley Lines
232:Illustration of a Fool
233:Illustration of the Moon
265:HP Gain XS
266:HP Gain S
267:HP Gain M
268:HP Gain L
269:HP Gain XL
270:HP Gain XXL
271:AP Gain S
272:AP Gain M
273:AP Gain L
274:AP Gain XL
275:KO Recovery XS
276:KO Recovery S
277:KO Recovery M
278:KO Recovery L
279:KO Recovery XL
280:KO Recovery XXL
281:Fractional HP Gain XS
282:Fractional HP Gain S
283:Fractional HP Gain M
284:Fractional HP Gain L
285:Fractional HP Gain XL
286:HP Regen XS
287:HP Regen S
288:HP Regen M
289:HP Regen L
290:HP Regen XL
291:Stun Gauge Recovery XS
292:Stun Gauge Recovery S
293:Stun Gauge Recovery M
294:Stun Gauge Recovery L
295:Stun Gauge Recovery XL
296:Stun Gauge Recovery XXL
297:Remove SE
298:Remove Debuffs
299:Stun Recovery
300:Sleep Cure
301:Poison Cure
302:Burns Cure
303:Frostbite Cure
304:Curse Cure
305:Paralysis Cure
306:Restraint Cure
307:Healing Taste XS
308:Healing Taste S
309:Healing Taste M
310:Healing Taste L
311:Healing Taste XL
312:Food Mixture S
313:Food Mixture M
314:Food Mixture L
315:Food Mixture XL
316:Ultimate Food Mixture
317:Supreme Food Mixture
318:Healing Kiss S
319:Healing Kiss M
320:Healing Kiss L
321:Healing Kiss XL
322:Sour Taste
323:Mellow Taste
324:Nostalgic Taste
325:Restoration S
326:Restoration M
327:Restoration L
328:Restoration XL
329:Prayer of Life
330:Promise of Life
331:Miracle of Life
332:Strange Healing
333:Demonic Healing
334:Hellish Healing
335:Aristocratic Taste
336:Ultimate Taste
367:Antidote
368:Smelling Salts
369:Stimulant
370:Dispel Curse
371:Dispel Effect
372:Healing Effect
373:Feeling Full S
374:Feeling Full M
375:Feeling Full L
376:Feeling Full XL
377:Flavorful Fruit
378:Fruit Cocktail
379:Rainbow Cocktail
380:Fancy Restaurant Flavor
381:Palatial Flavor
382:National Treasure Flavor
383:Purity of Body
384:Purity of Mind
385:Purity of Spirit
386:Purity of Soul
387:Energy Fitness
388:Energy Harmony
389:Energy Mixture
390:Healing Medicine
391:Recovery Medicine
392:Revival Medicine
393:Death-Defying
394:Ash Price
395:Darkness Price
396:Crimson Price
397:Fire Blessing
398:Ice Blessing
399:Lightning Blessing
400:Wind Blessing
401:Permeation S
402:Permeation M
403:Permeation L
404:Permeation XL
405:Refreshing Mouthful
406:Light Mouthful
407:Silky Mouthful
408:Mild Sweetness
409:Sweetness
410:Super Sweetness
411:Extreme Sweetness
412:Demonic Sweetness
443:Defiance S
444:Defiance M
445:Defiance L
446:Defiance XL
447:Temperance S
448:Temperance M
449:Temperance L
450:Temperance XL
451:Call to Power
452:Gut Instinct
453:Steel Spirit
454:Vigorous Effort
455:Red Power
456:Red Instinct
457:Red Spirit
458:Red Vigor
459:Amateur Melody
460:Calm Melody
461:Graceful Melody
462:Glorious Melody
463:Peaceful Melody
464:Firebreeze Veil
465:Frostbolt Veil
466:Magic Veil
467:Defense Veil
468:Dark Light Veil
469:Anti-Magic Veil
470:Anti-Attack Veil
471:Mysterious Power
472:Demonic Power
473:Hellish Power
474:Demon's Breath
475:Demon Lord's Breath
476:Strange Contract
477:Demonic Contract
478:Hellish Contract
479:Demon's Symbol
480:Demon Lord's Symbol
481:Dimensional Choke
482:Dimensional Slice
483:Dimensional Overlord
484:Dimensional Distortion
485:Dimensional Repair
486:Dimensional Adjustment
487:Dimensional Improvement
488:Dimensional Modifier
489:Near Future
490:All-Seeing Eye
491:All-Fixing Hand
492:Flash Sight
493:Past Sight
494:Past Fixer
525:ATK Up S
526:ATK Up M
527:ATK Up L
528:ATK Up XL
529:DEF Up S
530:DEF Up M
531:DEF Up L
532:DEF Up XL
533:SPD Up S
534:SPD Up M
535:SPD Up L
536:SPD Up XL
537:All Stats Up S
538:All Stats Up M
539:All Stats Up L
540:All Stats Up XL
541:Accuracy Up S
542:Accuracy Up M
543:Accuracy Up L
544:Accuracy Up XL
545:Evasion Up S
546:Evasion Up M
547:Evasion Up L
548:Evasion Up XL
549:Critical Rate Up S
550:Critical Rate Up M
551:Critical Rate Up L
552:Critical Rate Up XL
553:Energy Surge S
554:Energy Surge M
555:Energy Surge L
556:Energy Surge XL
577:Constrict Sense
578:Constrict Spirit
579:Constrict Freedom
580:Constrict Soul
581:Bind Sense
582:Bind Spirit
583:Bind Freedom
584:Bind Soul
585:Confusing Smoke
586:Distorting Smoke
587:Choking Smog
588:Illusory Smog
589:Hatred Smoke
590:Grudge Smoke
591:Destructive Smog
592:Ruination Smog
593:Black Bug Effect
594:Black Snake Effect
595:Black Bat Effect
596:Black Dragon Effect
597:Imp Effect
598:Wraith Effect
599:Incubus Effect
600:Demonic Effect
601:Warrior Soul
602:Brave Soul
603:Hero's Soul
604:Great Hero's Soul
605:Lone Spirit
606:Honed Spirit
607:Overflowing Spirit
608:Surging Spirit
629:ATK Down S
630:ATK Down M
631:ATK Down L
632:ATK Down XL
633:DEF Down S
634:DEF Down M
635:DEF Down L
636:DEF Down XL
637:SPD Down S
638:SPD Down M
639:SPD Down L
640:SPD Down XL
641:All Stats Down S
642:All Stats Down M
643:All Stats Down L
644:All Stats Down XL
645:Inflict Sleep S
646:Inflict Sleep M
647:Inflict Sleep L
648:Inflict Sleep XL
649:Inflict Poison S
650:Inflict Poison M
651:Inflict Poison L
652:Inflict Poison XL
653:Inflict Curse S
654:Inflict Curse M
655:Inflict Curse L
656:Inflict Curse XL
657:Inflict Burns S
658:Inflict Burns M
659:Inflict Burns L
660:Inflict Burns XL
661:Inflict Frostbite S
662:Inflict Frostbite M
663:Inflict Frostbite L
664:Inflict Frostbite XL
665:Inflict Paralysis S
666:Inflict Paralysis M
667:Inflict Paralysis L
668:Inflict Paralysis XL
669:Inflict Restraints S
670:Inflict Restraints M
671:Inflict Restraints L
672:Inflict Restraints XL
673:Fire Vulnerability
674:Ice Vulnerability
675:Lightning Vulnerability
676:Wind Vulnerability
677:Enhanced Stun S
678:Enhanced Stun M
679:Enhanced Stun L
680:Enhanced Stun XL
721:Extra EXP XS
722:Extra EXP
723:Extra EXP M
724:Extra EXP L
725:Extra EXP XL
727:Bonus AP XS
728:Bonus AP S
729:Bonus AP
730:Bonus AP L
731:Bonus AP XL
741:Cutting
742:Master Cutting
743:Expert Cutting
744:Chopping
745:Mater Chopping
746:Expert Chopping
747:Exploding
748:Master Exploding
749:Expert Exploding
750:Fishing
751:Master Fishing
752:Expert Fishing
753:Bug Catching
754:Master Bug Catching
755:Expert Bug Catching
756:Gathering Up S
757:Gathering Up M
758:Gathering Up L
759:Gathering Up XL
760:Quality Up S
761:Quality Up M
762:Quality Up L
763:Quality Up XL
764:Cutting
765:Nice Cutting
766:Capable Cutting
767:Proper Cutting
768:Expert Cutting
769:Masterful Cutting
770:Chopping
771:Nice Chopping
772:Capable Chopping
773:Proper Chopping
774:Expert Chopping
775:Masterful Chopping
776:Exploding
777:Nice Exploding
778:Capable Exploding
779:Proper Exploding
780:Expert Exploding
781:Masterful Exploding
782:Fishing
783:Nice Fishing
784:Capable Fishing
785:Proper Fishing
786:Expert Fishing
787:Masterful Fishing
788:Bug Catching
789:Nice Bug Catching
790:Capable Bug Catching
791:Proper Bug Catching
792:Expert Bug Catching
793:Masterful Bug Catching
814:Aquatic Movement
815:Brisk Aquatic Movement
816:Swift Aquatic Movement
817:Blue Crystal Connection
818:Yellow Crystal Connection
819:All Crystal Connection
820:Illumination
821:Illumination M
822:Illumination L
823:Illumination XL
824:Movement Speed Up S
825:Movement Speed Up M
826:Movement Speed Up L
827:Movement Speed Up XL
828:Summon Spirit Beast S
829:Summon Spirit Beast M
830:Summon Spirit Beast L
831:Summon Spirit Beast XL
832:Mining S
833:Mining M
834:Mining L
835:Mining XL
836:Rock Destruction
852:Alchemy Basics S
853:Alchemy Basics M
854:Alchemy Basics L
855:Alchemy Basics XL
856:Mysterious Power S
857:Mysterious Power M
858:Mysterious Power L
859:Mysterious Power XL
860:Trump Card S
861:Trump Card M
862:Trump Card L
863:Trump Card XL
864:Sky's Lost Property S
865:Sky's Lost Property M
866:Sky's Lost Property L
867:Sky's Lost Property XL
868:Radiance S
869:Radiance M
870:Radiance L
871:Radiance XL
872:Magic Arrow S
873:Magic Arrow M
874:Magic Arrow L
875:Magic Arrow XL
876:Whipping Tail S
877:Whipping Tail M
878:Whipping Tail L
879:Whipping Tail XL
880:Stormy Winds S
881:Stormy Winds M
882:Stormy Winds L
883:Stormy Winds XL
884:Side Flip S
885:Side Flip M
886:Side Flip L
887:Side Flip XL
888:Ray of Light S
889:Ray of Light M
890:Ray of Light L
891:Ray of Light XL
892:Warrior Training S
893:Warrior Training M
894:Warrior Training L
895:Warrior Training XL
896:Shielding Sword S
897:Shielding Sword M
898:Shielding Sword L
899:Shielding Sword XL
900:Runesword Curse S
901:Runesword Curse M
902:Runesword Curse L
903:Runesword Curse XL
904:Mysterious Aura S
905:Mysterious Aura M
906:Mysterious Aura L
907:Mysterious Aura XL
908:Demon Hunter S
909:Demon Hunter M
910:Demon Hunter L
911:Demon Hunter XL
912:Double Attack S
913:Double Attack M
914:Double Attack L
915:Double Attack XL
916:Twin Stars S
917:Twin Stars M
918:Twin Stars L
919:Twin Stars XL
920:Wax &amp; Wane S
921:Wax &amp; Wane M
922:Wax &amp; Wane L
923:Wax &amp; Wane XL
924:Twin Fangs S
925:Twin Fangs M
926:Twin Fangs L
927:Twin Fangs XL
928:Dragon Venom S
929:Dragon Venom M
930:Dragon Venom L
931:Dragon Venom XL
932:Long Reach S
933:Long Reach M
934:Long Reach L
935:Long Reach XL
936:Sharp Edge S
937:Sharp Edge M
938:Sharp Edge L
939:Sharp Edge XL
940:Rush Stance S
941:Rush Stance M
942:Rush Stance L
943:Rush Stance XL
944:Featherweight S
945:Featherweight M
946:Featherweight L
947:Featherweight XL
948:Proud Act S
949:Proud Act M
950:Proud Act L
951:Proud Act XL
952:Ancient Technology S
953:Ancient Technology M
954:Ancient Technology L
955:Ancient Technology XL
956:Exquisite Workmanship S
957:Exquisite Workmanship M
958:Exquisite Workmanship L
959:Exquisite Workmanship XL
960:Spiral Blade S
961:Spiral Blade M
962:Spiral Blade L
963:Spiral Blade XL
964:Raptor Hunt S
965:Raptor Hunt M
966:Raptor Hunt L
967:Raptor Hunt XL
968:Total Pursuit S
969:Total Pursuit M
970:Total Pursuit L
971:Total Pursuit XL
972:Gift to Nature S
973:Gift to Nature M
974:Gift to Nature L
975:Gift to Nature XL
976:Energy Shift S
977:Energy Shift M
978:Energy Shift L
979:Energy Shift XL
980:Spirit Guide S
981:Spirit Guide M
982:Spirit Guide L
983:Spirit Guide XL
984:Natural Breath S
985:Natural Breath M
986:Natural Breath L
987:Natural Breath XL
988:Blooming Flowers S
989:Blooming Flowers M
990:Blooming Flowers L
991:Blooming Flowers XL
1072:Surprise Smack
1073:Terror Crack
1074:Stunning Shot
1075:10 Spikes
1076:100 Spikes
1077:1,000 Spikes
1078:10,000 Spikes
1079:Fire Blessing S
1080:Fire Blessing M
1081:Fire Blessing L
1082:Fire Blessing XL
1083:Fire God's Blessing
1084:Ice Blessing S
1085:Ice Blessing M
1086:Ice Blessing L
1087:Ice Blessing XL
1088:Ice God's Blessing
1089:Lightning Blessing S
1090:Lightning Blessing M
1091:Lightning Blessing L
1092:Lightning Blessing XL
1093:Lightning God's Blessing
1094:Wind Blessing S
1095:Wind Blessing M
1096:Wind Blessing L
1097:Wind Blessing XL
1098:Wind God's Blessing
1099:Burst Shell S
1100:Burst Shell M
1101:Burst Shell L
1102:Burst Shell XL
1103:Destruction Strike
1104:Creation Strike
1105:Rebirth Strike
1106:Sliver of Light
1107:Spreading Light
1108:Erasing Light
1109:Dispelling Light
1110:Core Flow
1111:Core Flood
1112:Core Overflow
1113:Core Burst
1114:Fire Disaster
1115:Flame Disaster
1116:Ice Disaster
1117:Frost Disaster
1118:Lightning Disaster
1119:Thunderstorm Disaster
1120:Wind Disaster
1121:Storm Disaster
1122:Shining Nova
1123:Shining Blast
1124:Life Gain S
1125:Life Gain M
1126:Life Gain L
1127:Life Gain XL
1128:Stun Recovery S
1129:Stun Recovery M
1130:Stun Recovery L
1131:Stun Recovery XL
1132:Earth Vein Blessing S
1133:Earth Vein Blessing M
1134:Earth Vein Blessing L
1135:Earth Vein Blessing XL
1136:Great Earth Vein Blessing
1137:Ashra Flavor S
1138:Ashra Flavor M
1139:Ashra Flavor L
1140:Plentiful Harvest S
1141:Plentiful Harvest M
1142:Plentiful Harvest L
1143:Plentiful Harvest XL
1144:Charming Whisper
1145:Persuasive Whisper
1146:Seductive Whisper
1147:Goddess Whisper
1148:Red Fairystone
1149:Blue Fairystone
1150:Yellow Fairystone
1151:Green Fairystone
1152:Holy Path S
1153:Holy Path M
1154:Holy Path L
1155:Pure Wish
1156:Innocent Wish
1157:Dragon Vein Blessing
1158:Heavenly Vein Blessing
1159:First Rate Fragrance
1160:Elegant Fragrance
1161:Dangerous Drop
1162:Taboo Drop
1163:Liquid Plate S
1164:Liquid Plate M
1165:Liquid Plate L
1166:Liquid Plate XL
1167:Hard Plate
1168:Solid Plate
1169:Material Plate
1170:War Song S
1171:War Song M
1172:War Song L
1173:War Song XL
1174:Battle Song
1175:Combat Song
1176:Death Match Song
1177:Adagio
1178:Andante
1179:Allegro
1180:Presto
1181:Four-Color Feather S
1182:Four-Color Feather M
1183:Four-Color Feather L
1184:Four-Color Feather XL
1185:Battle Song
1186:Combat Song
1187:Death Match Song
1188:Devil's Pact S
1189:Devil's Pact M
1190:Devil's Pact L
1191:Devil's Pact XL
1192:Devil's Deal
1193:Devil's Oath
1194:Devil's Covenant
1195:Reverse Second Hand
1196:Reverse Minute Hand
1197:Reverse Hour Hand
1198:Reverse Time Spring
1199:Reverse Time Gear
1200:Reverse Time Mechanism
1201:Binding Curse
1202:Hindering Curse
1203:Constraining Curse
1204:Suppressing Curse
1205:Lockdown Curse
1206:Witch's Cuffs
1207:Witch's Shackles
1208:Witch's Seal
1209:Demon King's Seal
1210:Demon Emperor's Seal
1211:Demon God's Seal
1212:Assassin Poison S
1213:Assassin Poison M
1214:Assassin Poison L
1215:Assassin Poison XL
1216:Assassin Toxin
1217:Assassin Venom
1218:Phantom Illusion S
1219:Phantom Illusion M
1220:Phantom Illusion L
1221:Phantom Illusion XL
1222:Delusion Illusion
1223:Fantasy Illusion
1224:Eternal Beauty
1225:Starry Sky
1226:Crimson Crystal
1227:Divine Petal
1228:Ancient Follower
1229:Regal Beard
1230:Abyss Force
1231:Puni Cluster
1232:Golem Fist
1233:Hero Soul
1234:Great Sharpness
1235:Burning Rage
1236:Pixie Attendant
1237:Pandemonium Frost
1238:Twisted Beak
1289:High Mobility S
1290:High Mobility M
1291:High Mobility L
1292:High Mobility XL
1293:Finest Quality S
1294:Finest Quality M
1295:Finest Quality L
1296:Finest Quality XL
1297:Environmental Camo S
1298:Environmental Camo M
1299:Environmental Camo L
1300:Environmental Camo XL
1301:Environmental Sync
1302:Pixie Power S
1303:Pixie Power M
1304:Pixie Power L
1305:Pixie Power XL
1306:Great Pixie Mana
1307:Fortress S
1308:Fortress M
1309:Fortress L
1310:Fortress XL
1311:Unscathed
1312:Flawless
1313:Invulnerable
1314:Dragon's Roar S
1315:Dragon's Roar M
1316:Dragon's Roar L
1317:Dragon's Roar XL
1318:Awakening Rhythm
1319:Awakening Beat
1320:Awakening Pulse
1321:Lord's Glory S
1322:Lord's Glory M
1323:Lord's Glory L
1324:Lord's Glory XL
1325:Pleasant Texture
1326:Quality Texture
1327:Delightful Texture
1328:High Mobility XS
1329:Finest Quality XS
1330:Environmental Camo XS
1331:Pixie Power XS
1332:Fortress XS
1333:Dragon's Roar XS
1334:Lord's Glory XS
1358:Weapon Guard S
1359:Weapon Guard M
1360:Weapon Guard L
1361:Spiked Barrier S
1362:Spiked Barrier M
1363:Spiked Barrier L
1364:Spiked Barrier XL
1365:Fire Attire S
1366:Fire Attire M
1367:Fire Attire L
1368:Fire Attire XL
1369:Fire God's Attire
1370:Ice Attire S
1371:Ice Attire M
1372:Ice Attire L
1373:Ice Attire XL
1374:Ice God's Attire
1375:Lightning Attire S
1376:Lightning Attire M
1377:Lightning Attire L
1378:Lightning Attire XL
1379:Lightning God's Attire
1380:Wind Attire S
1381:Wind Attire M
1382:Wind Attire L
1383:Wind Attire XL
1384:Wind God's Attire
1385:Bullet Armor S
1386:Bullet Armor M
1387:Bullet Armor L
1388:Bullet Armor XL
1389:Repair Omen
1390:Creation Omen
1391:Rebirth Omen
1392:Repel Light
1393:Bend Light
1394:Distort Light
1395:Reflect Light
1396:Core Trench
1397:Core Bunker
1398:Core Wall
1399:Core Shelter
1400:Fire Realm
1401:Flame Realm
1402:Ice Realm
1403:Frost Realm
1404:Lightning Realm
1405:Thunderstorm Realm
1406:Wind Realm
1407:Storm Realm
1408:Null Barrier
1409:Void Barrier
1410:Reinforcement S
1411:Reinforcement M
1412:Reinforcement L
1413:Reinforcement XL
1414:Endurance S
1415:Endurance M
1416:Endurance L
1417:Endurance XL
1418:Holy Water Effect S
1419:Holy Water Effect M
1420:Holy Water Effect L
1421:Holy Water Effect XL
1422:Great Holy Water Effect
1423:Ashra Therapy S
1424:Ashra Therapy M
1425:Ashra Therapy L
1426:Harvest Prayer S
1427:Harvest Prayer M
1428:Harvest Prayer L
1429:Harvest Prayer XL
1430:Goddess Blessing S
1431:Goddess Blessing M
1432:Goddess Blessing L
1433:Goddess Blessing XL
1434:Goddess Blessing S
1435:Goddess Blessing M
1436:Goddess Blessing L
1437:Goddess Blessing XL
1438:Danger Evasion S
1439:Danger Evasion M
1440:Danger Evasion L
1441:Lovely Form
1442:Innocent Form
1443:Earth Holy Water Effect
1444:Heavenly Holy Water Effect
1445:Dripping Spring
1446:Falling Spring
1447:First Rate Appearance
1448:Elegant Appearance
1449:Permanence Shield S
1450:Permanence Shield M
1451:Permanence Shield L
1452:Permanence Shield XL
1453:Unconquerable Shield
1454:Immortal Shield
1455:Undying Shield
1456:Warrior Symbol S
1457:Warrior Symbol M
1458:Warrior Symbol L
1459:Warrior Symbol XL
1460:Soldier Symbol
1461:Fighter Symbol
1462:Seeker Symbol
1463:Platoon March
1464:Squadron March
1465:Battalion March
1466:Brigade March
1467:Feather Shield S
1468:Feather Shield M
1469:Feather Shield L
1470:Feather Shield XL
1471:Wing Shield
1472:Plume Shield
1473:Demon Heart S
1474:Demon Heart M
1475:Demon Heart L
1476:Demon Heart XL
1477:Ogre Heart
1478:Rakshasa Heart
1479:Yaksha Heart
1480:Twist of Fate S
1481:Twist of Fate M
1482:Twist of Fate L
1483:Twist of Fate XL
1484:Twist of Destiny
1485:Twist of Fortune
1486:Spine Guard S
1487:Spine Guard M
1488:Spine Guard L
1489:Spine Guard XL
1490:Sting Guard
1491:Witchcraft S
1492:Witchcraft M
1493:Witchcraft L
1494:Witchcraft XL
1495:Demoncraft
1496:Devilcraft
1497:Purifying Mist S
1498:Purifying Mist M
1499:Purifying Mist L
1500:Purifying Mist XL
1501:Purifying Fog
1502:Purifying Smoke
1503:Heroic Seal S
1504:Heroic Seal M
1505:Heroic Seal L
1506:Heroic Seal XL
1507:Mastery Seal
1508:Warlord Seal
1509:Single Love
1510:Twilight Lady
1511:Vermillion Veil
1512:Divine Flower Protection
1513:Unchanging Form
1514:Illuminating Scale
1515:Abyssal Ember
1516:Puni Sphere
1517:Golem Shell
1518:Heroic Spirit Vessel
1519:Hard Shell
1520:Drake Fury
1521:Pixie Choir
1522:Demon Cave Gate
1523:Breath of Life
1574:Prickly Uni
1575:Pointy Uni
1576:Sharp Uni
1577:Rabbit Run S
1578:Rabbit Run M
1579:Rabbit Run L
1580:Rabbit Dash
1581:Power Charm S
1582:Power Charm M
1583:Power Charm L
1584:Hero's Emblem
1585:Great Hero's Emblem
1586:Defense Charm S
1587:Defense Charm M
1588:Defense Charm L
1589:Fortress Emblem
1590:Great Fortress Emblem
1591:Speed Charm S
1592:Speed Charm M
1593:Speed Charm L
1594:Zephyr Emblem
1595:Great Zephyr Emblem
1596:Peace Prayer S
1597:Peace Prayer M
1598:Peace Prayer L
1599:Peace Prayer XL
1600:Proof of Affection S
1601:Proof of Affection M
1602:Proof of Affection L
1603:Proof of Affection XL
1604:Scoped Aim S
1605:Scoped Aim M
1606:Scoped Aim L
1607:Scoped Aim XL
1608:Safety Prayer S
1609:Safety Prayer M
1610:Safety Prayer L
1611:Safety Prayer XL
1612:Heat Increase S
1613:Heat Increase M
1614:Heat Increase L
1615:Heat Increase XL
1616:Sage's Knowledge S
1617:Sage's Knowledge M
1618:Sage's Knowledge L
1619:Sage's Knowledge XL
1620:Aristocrat's Pride S
1621:Aristocrat's Pride M
1622:Aristocrat's Pride L
1623:Aristocrat's Pride XL
1624:Bow Down
1625:Servitude
1626:Lord's Glory S
1627:Lord's Glory M
1628:Lord's Glory L
1629:Lord's Glory XL
1630:Veteran's Triumph
1631:Champion's Triumph
1632:Morale Boost S
1633:Morale Boost M
1634:Morale Boost L
1635:Morale Boost XL
1636:Imperial Awe
1637:Imperial Loyalty
1638:Secret Knowledge S
1639:Secret Knowledge M
1640:Secret Knowledge L
1641:Secret Knowledge XL
1642:Family Secret
1643:Sage's Strategy S
1644:Sage's Strategy M
1645:Sage's Strategy L
1646:Sage's Strategy XL
1647:Unbeatable Strategy
1648:Play with Pet
1649:Play with Beast
1650:Play with Monster
1651:Play with Dragon
1652:Fire Spirit Power
1653:Flame Spirit Power
1654:Hellfire Spirit Power
1655:Ice Spirit Power
1656:Frost Spirit Power
1657:Glacial Spirit Power
1658:Lightning Spirit Power
1659:Thunderstorm Spirit Power
1660:Thunderclap Spirit Power
1661:Wind Spirit Power
1662:Storm Spirit Power
1663:Cyclone Spirit Power
1664:Concentration S
1665:Concentration M
1666:Concentration L
1667:Concentration XL
1668:Heart and Soul
1669:Extreme Concentration
1670:Self Defense S
1671:Self Defense M
1672:Self Defense L
1673:Self Defense XL
1674:Substitution
1675:Fire/Ice Control
1676:Wind/Lightning Control
1677:Four Spirits Control
1678:Complete Control
1679:Collected Spirit
1680:Overflowing Spirit
1681:Honed Spirit
1682:Transcendent Spirit
1683:Sage's Knowledge XS
1684:Sage's Strategy XS
1713:HP +10
1714:HP +20
1715:HP +30
1716:HP +50
1717:ATK +10
1718:ATK +15
1719:ATK +20
1720:ATK +30
1721:DEF +10
1722:DEF +15
1723:DEF +20
1724:DEF +30
1725:SPD +10
1726:SPD +15
1727:SPD +20
1728:SPD +30
1729:Accuracy +3%
1730:Accuracy +5%
1731:Accuracy +7%
1732:Accuracy +10%
1733:Accuracy +15%
1734:Evasion +1%
1735:Evasion +2%
1736:Evasion +3%
1737:Evasion +4%
1738:Evasion +5%
1739:Critical Rate Up +3%
1740:Critical Rate Up +5%
1741:Critical Rate Up +7%
1742:Critical Rate Up +10%
1743:Critical Rate Up +15%
1744:Enhance Critical +5%
1745:Enhance Critical +10%
1746:Enhance Critical +15%
1747:Enhance Critical +20%
1748:Enhance Critical +30%
1749:Enhance Skills +3%
1750:Enhance Skills +5%
1751:Enhance Skills +7%
1752:Enhance Skills +10%
1753:Enhance Skills +15%
1754:Enhance Items +3%
1755:Enhance Items +5%
1756:Enhance Items +7%
1757:Enhance Items +10%
1758:Enhance Items +15%
1759:Weaken Items +3%
1760:Weaken Items +5%
1761:Weaken Items +7%
1762:Weaken Items +10%
1763:Weaken Items +15%
1764:Resist SE +3%
1765:Resist SE +5%
1766:Resist SE +7%
1767:Resist SE +10%
1768:Resist SE +15%
1769:Resist KO +3%
1770:Resist KO +5%
1771:Resist KO +7%
1772:Resist KO +10%
1773:Resist KO +15%
1774:Reduce Damage -3%
1775:Reduce Damage -5%
1776:Reduce Damage -7%
1777:Reduce Damage -10%
1778:Reduce Damage -15%
1779:Add Stun +3
1780:Add Stun +5
1781:Add Stun +7
1782:Add Stun +10
1783:Add Stun +15
1784:Resist Stun +5
1785:Resist Stun +10
1786:Resist Stun +15
1787:Resist Stun +20
1788:Resist Stun +30
1789:Enhance Stun +3%
1790:Enhance Stun +5%
1791:Enhance Stun +7%
1792:Enhance Stun +10%
1793:Enhance Stun +15%
1794:HP Regen on Turn XS
1795:HP Regen on Turn S
1796:HP Regen on Turn M
1797:HP Regen on Turn L
1798:HP Regen on Turn XL
1799:HP +5
1800:ATK +5
1801:DEF +5
1802:SPD +5
1803:Enhance Skills +1%
1804:Reduce Damage -1%
1829:Shock Powder
1830:Crash Powder
1831:Blow Powder
1832:Piercing Spike S
1833:Piercing Spike M
1834:Piercing Spike L
1835:Piercing Spike XL
1836:Fire Mark S
1837:Fire Mark M
1838:Fire Mark L
1839:Fire Mark XL
1840:Fire God's Mark
1841:Ice Mark S
1842:Ice Mark M
1843:Ice Mark L
1844:Ice Mark XL
1845:Ice God's Mark
1846:Lightning Mark S
1847:Lightning Mark M
1848:Lightning Mark L
1849:Lightning Mark XL
1850:Lightning God's Mark
1851:Wind Mark S
1852:Wind Mark M
1853:Wind Mark L
1854:Wind Mark XL
1855:Wind God's Mark
1856:Slow Bullet S
1857:Slow Bullet M
1858:Slow Bullet L
1859:Slow Bullet XL
1860:Equilibrium Swing
1861:Genesis Swing
1862:Rebirth Swing
1863:Leaking Light
1864:Surging Light
1865:Overflowing Light
1866:Flooding Light
1867:Sage's Plan
1868:Sage's Trick
1869:Sage's Stratagem
1870:Sage's Artifice
1871:Fire Technique
1872:Flame Technique
1873:Ice Technique
1874:Frost Technique
1875:Lightning Technique
1876:Thunderstorm Technique
1877:Wind Technique
1878:Storm Technique
1879:Glinting Ray
1880:Sparkling Ray
1881:Extra Healing S
1882:Extra Healing M
1883:Extra Healing L
1884:Extra Healing XL
1885:Stun Cure S
1886:Stun Cure M
1887:Stun Cure L
1888:Stun Cure XL
1889:Body Revitalization S
1890:Body Revitalization M
1891:Body Revitalization L
1892:Body Revitalization XL
1893:Spirit Revitalization
1894:Ashra Spirit S
1895:Ashra Spirit M
1896:Ashra Spirit L
1897:Harvest Season S
1898:Harvest Season M
1899:Harvest Season L
1900:Harvest Season XL
1901:Benevolent Gaze S
1902:Benevolent Gaze M
1903:Benevolent Gaze L
1904:Benevolent Gaze XL
1905:Red Pattern
1906:Blue Pattern
1907:Yellow Pattern
1908:Green Pattern
1909:Grand Decoration S
1910:Grand Decoration M
1911:Grand Decoration L
1912:Polished Shine
1913:Ivory Shine
1914:Body Activation
1915:Whole Body Activation
1916:Forbidden Fragment
1917:Forbidden Block
1918:Budding Prayer
1919:Budding Wish
1920:Guardian Mirror S
1921:Guardian Mirror M
1922:Guardian Mirror L
1923:Guardian Mirror XL
1924:Shelter Mirror
1925:Protection Mirror
1926:Safeguard Mirror
1927:War God's Call S
1928:War God's Call M
1929:War God's Call L
1930:War God's Call XL
1931:War God's Prophecy
1932:War God's Revelation
1933:War God's Oracle
1934:Comforting Timbre S
1935:Comforting Timbre M
1936:Comforting Timbre L
1937:Comforting Timbre XL
1938:Mana Wings S
1939:Mana Wings M
1940:Mana Wings L
1941:Mana Wings XL
1942:Twin Mana Wings
1943:King Mana Wings
1944:Demonic Miasma S
1945:Demonic Miasma M
1946:Demonic Miasma L
1947:Demonic Miasma XL
1948:Demonic Fog
1949:Demonic Mist
1950:Demonic Haze
1951:Gears of Time S
1952:Gears of Time M
1953:Gears of Time L
1954:Gears of Time XL
1955:Time Mastery Gear
1956:Dimension Mastery Gear
1957:Wrapped Thorn S
1958:Wrapped Thorn M
1959:Wrapped Thorn L
1960:Wrapped Thorn XL
1961:Twisted Thorns
1962:Traditional Secrets S
1963:Traditional Secrets M
1964:Traditional Secrets L
1965:Traditional Secrets XL
1966:Traditional Magic
1967:Traditional Forbidden Arts
1968:Laceration Smoke S
1969:Laceration Smoke M
1970:Laceration Smoke L
1971:Laceration Smoke XL
1972:Laceration Smog
1973:Black Laceration Smoke
1974:Hawk's Eye S
1975:Hawk's Eye M
1976:Hawk's Eye L
1977:Hawk's Eye XL
1978:Eagle's Eye
1979:Vulture's Eye
1980:Rose Tears
1981:Shining Dusk
1982:Scarlet Vortex
1983:Majestic Garland
1984:Life Jewel
1985:Mirage Fin
1986:Chaos Charge
1987:Puni Rampart
1988:Golem's Heart
1989:Virtuous Conviction
1990:Beast Hunter
1991:Dragon Killer
1992:Pixie Prank
1993:Amulet's Symbol
1994:Gripping Claws
1995:Beautiful Rose
1996:Pretty Spots
1997:Crystallized Blood
1998:Mystic Flower
1999:Time Mastery Jewel
2000:Elusive Fish
2001:Mysterious Parts
2002:Puni Aura
2003:Golem's Heart
2004:Knight's Spirit
2005:Sharp Weapon
2006:Dragon Power
2007:Fairy King's Symbol
2008:Magic Beast Curse
2009:Source of Nutrition
2045:Synth Quality +5
2046:Synth Quality +7
2047:Synth Quality +10
2048:Synth Quality +12
2049:Synth Quality +15
2050:Synth Quality +17
2051:Synth Quality +20
2052:Synth Quality +22
2053:Synth Quality +25
2054:Synth Quality +30
2055:Synth Quality +35
2056:Synth Quantity +1
2057:Synth Quantity +2
2058:Synth Quantity +3
2059:Synth Quantity +4
2060:Synth Quantity +5
2070:Gear Synth: ATK +1
2071:Gear Synth: ATK +2
2072:Gear Synth: ATK +3
2073:Gear Synth: ATK +4
2074:Gear Synth: ATK +5
2075:Gear Synth: ATK +6
2076:Gear Synth: ATK +7
2077:Gear Synth: DEF +1
2078:Gear Synth: DEF +2
2079:Gear Synth: DEF +3
2080:Gear Synth: DEF +4
2081:Gear Synth: DEF +5
2082:Gear Synth: DEF +6
2083:Gear Synth: DEF +7
2084:Gear Synth: SPD +1
2085:Gear Synth: SPD +2
2086:Gear Synth: SPD +3
2087:Gear Synth: SPD +4
2088:Gear Synth: SPD +5
2089:Gear Synth: SPD +6
2090:Gear Synth: SPD +7
2091:Gear Synth: ATK/DEF +1
2092:Gear Synth: ATK/DEF +2
2093:Gear Synth: ATK/DEF +3
2094:Gear Synth: ATK/DEF +4
2095:Gear Synth: ATK/DEF +5
2096:Gear Synth: ATK/DEF +6
2097:Gear Synth: ATK/DEF +7
2098:Gear Synth: ATK/SPD +1
2099:Gear Synth: ATK/SPD +2
2100:Gear Synth: ATK/SPD +3
2101:Gear Synth: ATK/SPD +4
2102:Gear Synth: ATK/SPD +5
2103:Gear Synth: ATK/SPD +6
2104:Gear Synth: ATK/SPD +7
2105:Gear Synth: DEF/SPD +1
2106:Gear Synth: DEF/SPD +2
2107:Gear Synth: DEF/SPD +3
2108:Gear Synth: DEF/SPD +4
2109:Gear Synth: DEF/SPD +5
2110:Gear Synth: DEF/SPD +6
2111:Gear Synth: DEF/SPD +7
2112:Gear Synth: All +1
2113:Gear Synth: All +2
2114:Gear Synth: All +3
2115:Gear Synth: All +4
2116:Gear Synth: All +5
2117:Gear Synth: All +6
2118:Gear Synth: All +7
2139:Effect Spread +1
2140:Effect Spread +2
2141:Effect Spread +3
2142:Effect Spread +4
2143:Effect Spread +5
2146:Add Fire
2147:Add Ice
2148:Add Lightning
2149:Add Wind
2153:Element Value +1
2154:Element Value +2
2155:Element Value +3
2156:Element Value +4
2157:Element Value +5
2158:Element Value +6
2161:Gather Quantity Up S
2162:Gather Quantity Up M
2163:Gather Quantity Up L
2164:Gather Quantity Up XL
2165:Gather Quantity Up XXL
2166:High Growth S
2167:High Growth M
2168:High Growth L
2169:High Growth XL
2170:High Growth XXL
2171:Trait Level Up S
2172:Trait Level Up M
2173:Trait Level Up L
2174:Trait Level Up XL
2175:Trait Level Up XXL
2176:Rare Gather Rate Up S
2177:Rare Gather Rate Up M
2178:Rare Gather Rate Up L
2179:Rare Gather Rate Up XL
2180:Rare Gather Rate Up XXL
2231:Add (Water)
2232:Add (Plants)
2233:Add (Uni)
2234:Add (Flowers)
2235:Add (Medicinal)
2236:Add (Poisons)
2237:Add (Elixirs)
2238:Add (Sand)
2239:Add (Stone)
2240:Add (Ore)
2241:Add (Gemstones)
2242:Add (Gunpowder)
2243:Add (Fuel)
2244:Add (Edibles)
2245:Add (Fruit)
2246:Add (Beehives)
2247:Add (Mushrooms)
2248:Add (Seafood)
2249:Add (Bugs)
2250:Add (Threads)
2251:Add (Lumber)
2252:Add (Gases)
2253:Add (Puniballs)
2254:Add (Animal Products)
2255:Add (Dragon Mat.)
2256:Add (Magical)
2257:Add (Neutralizers)
2258:Add (General Goods)
2259:Add (Metal)
2260:Add (Jewels)
2261:Add (Spices)
2262:Add (Seeds)
2263:Add (Food)
2264:Add (Medicine)
2265:Add (Bombs)
2266:Add (Magic Tools)
2267:Add (Ingots)
2268:Add (Cloth)
2281:Strength Blessing
2282:Power Blessing
2283:Godly Power Blessing
2284:Defense Blessing
2285:Guardian Blessing
2286:Godly Guardian Blessing
2287:Speed Blessing
2288:Wind Blessing
2289:Bolt Blessing
2290:Power's Curse
2291:Power's Bane
2292:Power's Retribution
2293:Guardian's Curse
2294:Guardian's Bane
2295:Guardian's Retribution
2296:Wind's Curse
2297:Wind's Bane
2298:Wind's Retribution
2299:Puni Slayer
2300:Weasel Slayer
2301:Phantom Slayer
2302:Golem Slayer
2303:Knight Slayer
2304:Scorpion Slayer
2305:Hedgehog Slayer
2306:Dragon Slayer
2307:Shark Slayer
2308:Beetle Slayer
2309:Sheep Slayer
2310:Roadrunner Slayer
2311:Wyvern Slayer
2312:Spirit Slayer
2370:Decorate
2371:Place Accessory
2381:Synth Level Down S
2382:Synth Level Down M
2383:Synth Level Down L
2384:Synth Level Down XL
2387:Gem Reduction Gain S
2388:Gem Reduction Gain M
2389:Gem Reduction Gain L
2390:Gem Reduction Gain XL
2392:Synth Trait Level +1
2393:Synth Trait Level +2
2394:Synth Trait Level +3
2395:Synth Trait Level +4
2396:Synth Trait Level +5
2398:Synth Element Value Gain S
2399:Synth Element Value Gain M
2400:Synth Element Value Gain L
</DropDownList>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808040</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>850</ID>
                  <Description>"EV-EffectList"</Description>
                  <DropDownList DisplayValueAsItem="1">-1:None
0:Hard Thorn Seal
1:Hard Thorn Brand
2:Strike Seal
3:Strike Brand
4:Aggression Seal
5:Aggression Brand
6:Destruction Seal
7:Destruction Brand
8:Torch Seal
9:Torch Brand
10:Blaze Seal
11:Blaze Brand
12:Extinguishing Seal
13:Extinguishing Brand
14:Freeze Seal
15:Freeze Brand
16:Ice Storm Seal
17:Ice Storm Brand
18:Ice Coffin Seal
19:Ice Coffin Brand
20:Thunderbolt Seal
21:Thunderbolt Brand
22:True Lightning Seal
23:True Lightning Brand
24:Bolt Realm Seal
25:Bolt Realm Brand
26:Windbreak Seal
27:Windbreak Brand
28:Wind Ripple Seal
29:Wind Ripple Brand
30:Wind Stopper Seal
31:Wind Stopper Brand
32:Bubbling Seal
33:Bubbling Brand
34:Pain Seal
35:Pain Brand
36:Mallet Seal
37:Mallet Brand
38:Moonlight Seal
39:Moonlight Brand
40:Wisdom Seal
41:Wisdom Brand
42:Prediction Seal
43:Prediction Brand
44:Cure Seal
45:Cure Brand
46:Effect Boost Seal
47:Effect Boost Brand
48:Holy Seal
49:Holy Brand
50:Healing Seal
51:Healing Brand
52:Regeneration Seal
53:Regeneration Brand
54:Revolving Seal
55:Revolving Brand
56:All-Effect Brand
57:All-Effect Seal
58:Food Seal
59:Food Brand
60:Gluttony Seal
61:Gluttony Brand
62:Goddess Seal
63:Goddess Brand
64:Sweet Seal
65:Sweet Brand
66:Recovery Seal
67:Recovery Brand
68:Spiritual Seal
69:Spiritual Brand
70:Wicked Seal
71:Wicked Brand
72:Fortune Seal
73:Fortune Brand
74:Therapeutic Seal
75:Therapeutic Brand
76:Treatment Seal
77:Treatment Brand
78:Tonic Seal
79:Tonic Brand
80:Crimson Fight Seal
81:Crimson Fight Brand
82:Spinning Echo Seal
83:Spinning Echo Brand
84:Silk Seal
85:Silk Brand
86:Monster Seal
87:Monster Brand
88:Insanity Seal
89:Insanity Brand
90:Time Master Seal
91:Time Master Brand
92:Time Reversal Seal
93:Time Reversal Brand
94:Attack Boost Seal
95:Attack Boost Brand
96:Defense Boost Seal
97:Defense Boost Brand
98:Speed Boost Seal
99:Speed Boost Brand
100:Almighty Seal
101:Almighty Brand
102:Accuracy Seal
103:Accuracy Brand
104:Super Evasion Seal
105:Super Evasion Brand
106:Critical Seal
107:Critical Brand
108:Body Source Seal
109:Body Source Brand
110:Thorny Embrace Seal
111:Thorny Embrace Brand
112:Thorny Jail Seal
113:Thorny Jail Brand
114:Wavering Smoke Seal
115:Wavering Smoke Brand
116:Poison Breath Seal
117:Poison Breath Brand
118:Witch's Seal
119:Witch's Brand
120:Demon Lord's Seal
121:Demon Lord's Brand
122:Hero's Seal
123:Hero's Brand
124:Master's Seal
125:Master's Brand
126:Attack Block Seal
127:Attack Block Brand
128:Defense Block Seal
129:Defense Block Brand
130:Speed Block Seal
131:Speed Block Brand
132:Full Block Seal
133:Full Block Brand
134:Sleep Seal
135:Sleep Brand
136:Poison Seal
137:Poison Brand
138:Curse Seal
139:Curse Brand
140:Burns Seal
141:Burns Brand
142:Frostbite Seal
143:Frostbite Brand
144:Paralysis Seal
145:Paralysis Brand
146:Restraint Seal
147:Restraint Brand
148:Debuff Seal
149:Extra Attack Seal
150:Extra Attack Brand
151:Hard Thorn Protection
152:Hard Thorn Blessing
153:Strike Protection
154:Strike Blessing
155:Aggression Protection
156:Aggression Blessing
157:Destruction Protection
158:Destruction Blessing
159:Torch Protection
160:Torch Blessing
161:Blaze Protection
162:Blaze Blessing
163:Extinguishing Protection
164:Extinguishing Blessing
165:Freeze Protection
166:Freeze Protection
167:Freeze Blessing
168:Ice Storm Protection
169:Ice Storm Blessing
170:Ice Coffin Protection
171:Ice Coffin Blessing
172:Thunderbolt Protection
173:Thunderbolt Blessing
174:True Lightning Protection
175:True Lightning Blessing
176:Bolt Realm Protection
177:Bolt Realm Blessing
178:Windbreak Protection
179:Windbreak Blessing
180:Wind Ripple Protection
181:Wind Ripple Blessing
182:Wind Stopper Protection
183:Wind Stopper Blessing
184:Bubbling Protection
185:Bubbling Blessing
186:Pain Protection
187:Pain Blessing
188:Mallet Protection
189:Mallet Blessing
190:Moonlight Protection
191:Moonlight Blessing
192:Wisdom Protection
193:Wisdom Blessing
194:Prediction Protection
195:Prediction Blessing
196:Cure Protection
197:Cure Blessing
198:Effect Boost Protection
199:Effect Boost Blessing
200:Holy Protection
201:Holy Blessing
202:Healing Protection
203:Healing Blessing
204:Regeneration Protection
205:Regeneration Blessing
206:Revolving Protection
207:Revolving Blessing
208:All-Effect Blessing
209:All-Effect Protection
210:Food Protection
211:Food Blessing
212:Gluttony Protection
213:Gluttony Blessing
214:Goddess Protection
215:Goddess Blessing
216:Sweet Protection
217:Sweet Blessing
218:Recovery Protection
219:Recovery Blessing
220:Spiritual Protection
221:Spiritual Blessing
222:Wicked Protection
223:Wicked Blessing
224:Fortune Protection
225:Fortune Blessing
226:Therapeutic Protection
227:Therapeutic Blessing
228:Treatment Protection
229:Treatment Blessing
230:Tonic Protection
231:Tonic Blessing
232:Crimson Fight Protection
233:Crimson Fight Blessing
234:Spinning Echo Protection
235:Spinning Echo Blessing
236:Silk Protection
237:Silk Blessing
238:Monster Protection
239:Monster Blessing
240:Insanity Protection
241:Insanity Blessing
242:Time Master Protection
243:Time Master Blessing
244:Time Reversal Protection
245:Time Reversal Blessing
246:Attack Boost Protection
247:Attack Boost Blessing
248:Defense Boost Protection
249:Defense Boost Blessing
250:Speed Boost Protection
251:Speed Boost Blessing
252:All Boost Protection
253:All Boost Blessing
254:Accuracy Protection
255:Accuracy Blessing
256:Super Evasion Protection
257:Super Evasion Blessing
258:Critical Protection
259:Critical Blessing
260:Body Source Protection
261:Body Source Blessing
262:Thorny Embrace Protection
263:Thorny Embrace Blessing
264:Thorny Jail Protection
265:Thorny Jail Blessing
266:Wavering Smoke Protection
267:Wavering Smoke Blessing
268:Poison Breath Protection
269:Poison Breath Blessing
270:Witch's Protection
271:Witch's Blessing
272:Demon Lord's Protection
273:Demon Lord's Blessing
274:Hero's Protection
275:Hero's Blessing
276:Master's Protection
277:Master's Blessing
278:Attack Block Protection
279:Attack Block Blessing
280:Defense Block Protection
281:Defense Block Blessing
282:Speed Block Protection
283:Speed Block Protection
284:Speed Block Blessing
285:Full Block Protection
286:Full Block Blessing
287:Sleep Protection
288:Sleep Blessing
289:Poison Protection
290:Poison Blessing
291:Curse Protection
292:Curse Blessing
293:Burns Protection
294:Burns Blessing
295:Frostbite Protection
296:Frostbite Blessing
297:Paralysis Protection
298:Paralysis Blessing
299:Restraint Protection
300:Restraint Blessing
301:Debuff Protection
302:Extra Attack Protection
303:Extra Attack Blessing
304:Hard Thorn Mark
305:Hard Thorn Stamp
306:Strike Mark
307:Strike Stamp
308:Aggression Mark
309:Aggression Stamp
310:Destruction Mark
311:Destruction Stamp
312:Torch Mark
313:Torch Stamp
314:Blaze Mark
315:Blaze Stamp
316:Extinguishing Mark
317:Extinguishing Stamp
318:Freeze Mark
319:Freeze Stamp
320:Ice Storm Mark
321:Ice Storm Stamp
322:Ice Coffin Mark
323:Ice Coffin Stamp
324:Thunderbolt Mark
325:Thunderbolt Stamp
326:True Lightning Mark
327:True Lightning Stamp
328:Bolt Realm Mark
329:Bolt Realm Stamp
330:Windbreak Mark
331:Windbreak Stamp
332:Wind Ripple Mark
333:Wind Ripple Stamp
334:Wind Stopper Mark
335:Wind Stopper Stamp
336:Bubbling Mark
337:Bubbling Stamp
338:Pain Mark
339:Pain Stamp
340:Mallet Mark
341:Mallet Stamp
342:Moonlight Mark
343:Moonlight Stamp
344:Wisdom Mark
345:Wisdom Stamp
346:Prediction Mark
347:Prediction Stamp
348:Cure Mark
349:Cure Stamp
350:Effect Boost Mark
351:Effect Boost Stamp
352:Holy Mark
353:Holy Stamp
354:Healing Mark
355:Healing Stamp
356:Regeneration Mark
357:Regeneration Stamp
358:Revolving Mark
359:Revolving Stamp
360:All-Effect Stamp
361:All-Effect Mark
362:Food Mark
363:Food Stamp
364:Gluttony Mark
365:Gluttony Stamp
366:Goddess Mark
367:Goddess Stamp
368:Sweet Mark
369:Sweet Stamp
370:Recovery Mark
371:Recovery Stamp
372:Spiritual Mark
373:Spiritual Stamp
374:Wicked Mark
375:Wicked Stamp
376:Fortune Mark
377:Fortune Stamp
378:Therapeutic Mark
379:Therapeutic Stamp
380:Treatment Mark
381:Treatment Stamp
382:Tonic Mark
383:Tonic Stamp
384:Crimson Fight Mark
385:Crimson Fight Stamp
386:Spinning Echo Mark
387:Spinning Echo Stamp
388:Silk Mark
389:Silk Stamp
390:Monster Mark
391:Monster Stamp
392:Insanity Mark
393:Insanity Stamp
394:Time Master Mark
395:Time Master Stamp
396:Time Reversal Mark
397:Time Reversal Stamp
398:Attack Boost Mark
399:Attack Boost Stamp
400:Defense Boost Mark
401:Defense Boost Stamp
402:Speed Boost Mark
403:Speed Boost Stamp
404:All Boost Mark
405:All Boost Stamp
406:Accuracy Mark
407:Accuracy Stamp
408:Super Evasion Mark
409:Super Evasion Stamp
410:Critical Mark
411:Critical Stamp
412:Body Source Mark
413:Body Source Stamp
414:Thorny Embrace Mark
415:Thorny Embrace Stamp
416:Thorny Jail Mark
417:Thorny Jail Stamp
418:Wavering Smoke Mark
419:Wavering Smoke Stamp
420:Poison Breath Mark
421:Poison Breath Stamp
422:Witch's Mark
423:Witch's Stamp
424:Demon Lord's Mark
425:Demon Lord's Stamp
426:Hero's Mark
427:Hero's Stamp
428:Master's Mark
429:Master's Stamp
430:Attack Block Mark
431:Attack Block Stamp
432:Defense Block Mark
433:Defense Block Stamp
434:Speed Block Mark
435:Speed Block Stamp
436:Full Block Mark
437:Full Block Stamp
438:Sleep Mark
439:Sleep Stamp
440:Poison Mark
441:Poison Stamp
442:Curse Mark
443:Curse Stamp
444:Burns Mark
445:Burns Stamp
446:Frostbite Mark
447:Frostbite Stamp
448:Paralysis Mark
449:Paralysis Stamp
450:Restraint Mark
451:Restraint Stamp
452:Debuff Mark
453:Extra Attack Mark
454:Extra Attack Stamp
</DropDownList>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808040</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>506</ID>
              <Description>"Pointer"</Description>
              <LastState Value="" RealAddress="F66000000620D8B"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>item_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>799</ID>
                  <Description>"Quantity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+02</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>800</ID>
                  <Description>"Level"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+0B</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>838</ID>
                  <Description>"CC of Consumables"</Description>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+0C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>726</ID>
                  <Description>"Trait 1 Level"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+0E</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>727</ID>
                  <Description>"Trait 2 Level"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+0F</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>728</ID>
                  <Description>"Trait 3 Level"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>796</ID>
                  <Description>"Item ID"</Description>
                  <DropDownListLink>ItemList</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+04</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>725</ID>
                  <Description>"Quality"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+06</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>803</ID>
                  <Description>"Trait 1"</Description>
                  <DropDownListLink>TraitList</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+12</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>804</ID>
                  <Description>"Trait 2"</Description>
                  <DropDownListLink>TraitList</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+14</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>805</ID>
                  <Description>"Trait 3"</Description>
                  <DropDownListLink>TraitList</DropDownListLink>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+16</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>806</ID>
                  <Description>"Effect 1"</Description>
                  <DropDownListLink>EffectList</DropDownListLink>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+18</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>807</ID>
                  <Description>"Effect 2"</Description>
                  <DropDownListLink>EffectList</DropDownListLink>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+1A</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>808</ID>
                  <Description>"Effect 3"</Description>
                  <DropDownListLink>EffectList</DropDownListLink>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+1C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>809</ID>
                  <Description>"Effect 4"</Description>
                  <DropDownListLink>EffectList</DropDownListLink>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+1E</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>849</ID>
                  <Description>"EV-Effect"</Description>
                  <DropDownListLink>EV-EffectList</DropDownListLink>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+20</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>839</ID>
                  <Description>"Equipment HP+ 1st"</Description>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+24</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>840</ID>
                  <Description>"Equipment HP+ 2nd"</Description>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+26</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>841</ID>
                  <Description>"Equipment ATK+"</Description>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>842</ID>
                  <Description>"Equipment DEF+"</Description>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+2A</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>843</ID>
                  <Description>"Equipment SPD+"</Description>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+2C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>723</ID>
                  <Description>"Trait 1 Locked"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+03</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>797</ID>
                  <Description>"Trait 2 Locked"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Binary</VariableType>
                  <BitStart>4</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+03</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>798</ID>
                  <Description>"Trait 3 Locked"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Binary</VariableType>
                  <BitStart>5</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+03</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>816</ID>
          <Description>"Created by zachillios"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>808040</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>753</ID>
              <Description>"Highlight Loop For Easy Level"</Description>
              <LastState/>
              <Color>E16941</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Atelier_Ryza_2.exe
  Version: 
  Date   : 2021-01-26
  Author : Zach

  This script does blah blah blah
}

[ENABLE]

// aobscanmodule(loop_for_easy,Atelier_Ryza_2.exe,42 8B 54 26 04) // should be unique
alloc(newmem,$1000,loop_for_easy)

label(code)
label(return)

newmem:

code:
  mov [rsi+r12+04],#9
  jmp return

loop_for_easy:
  jmp newmem
return:
// registersymbol(loop_for_easy)

[DISABLE]

loop_for_easy:
  db 42 8B 54 26 04

// unregistersymbol(loop_for_easy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+1C4BC6

Atelier_Ryza_2.exe+1C4B8E: 48 8D 15 93 C6 BB 00  - lea rdx,[Atelier_Ryza_2.exe+D81228]
Atelier_Ryza_2.exe+1C4B95: 48 8D 0D C4 13 B6 00  - lea rcx,[Atelier_Ryza_2.exe+D25F60]
Atelier_Ryza_2.exe+1C4B9C: E8 DF B2 97 00        - call Atelier_Ryza_2.exe+B3FE80
Atelier_Ryza_2.exe+1C4BA1: 48 8D 0D 50 17 B6 00  - lea rcx,[Atelier_Ryza_2.exe+D262F8]
Atelier_Ryza_2.exe+1C4BA8: E8 D3 B2 97 00        - call Atelier_Ryza_2.exe+B3FE80
Atelier_Ryza_2.exe+1C4BAD: E9 62 01 00 00        - jmp Atelier_Ryza_2.exe+1C4D14
Atelier_Ryza_2.exe+1C4BB2: 49 8B CC              - mov rcx,r12
Atelier_Ryza_2.exe+1C4BB5: 4C 89 6C 24 70        - mov [rsp+70],r13
Atelier_Ryza_2.exe+1C4BBA: E8 A1 4E FB FF        - call Atelier_Ryza_2.exe+179A60
Atelier_Ryza_2.exe+1C4BBF: 48 69 F6 84 00 00 00  - imul rsi,rsi,00000084
// ---------- INJECING HERE ----------
Atelier_Ryza_2.exe+1C4BC6: 42 8B 54 26 04        - mov edx,[rsi+r12+04]
// ---------- DONE INJECING  ----------
Atelier_Ryza_2.exe+1C4BCB: 4A 8D 0C 26           - lea rcx,[rsi+r12]
Atelier_Ryza_2.exe+1C4BCF: 45 33 ED              - xor r13d,r13d
Atelier_Ryza_2.exe+1C4BD2: 48 89 4C 24 60        - mov [rsp+60],rcx
Atelier_Ryza_2.exe+1C4BD7: 48 89 5C 24 58        - mov [rsp+58],rbx
Atelier_Ryza_2.exe+1C4BDC: 4C 89 6C 24 68        - mov [rsp+68],r13
Atelier_Ryza_2.exe+1C4BE1: 84 C0                 - test al,al
Atelier_Ryza_2.exe+1C4BE3: 75 06                 - jne Atelier_Ryza_2.exe+1C4BEB
Atelier_Ryza_2.exe+1C4BE5: 44 38 6B 17           - cmp [rbx+17],r13l
Atelier_Ryza_2.exe+1C4BE9: 74 09                 - je Atelier_Ryza_2.exe+1C4BF4
Atelier_Ryza_2.exe+1C4BEB: 8B 01                 - mov eax,[rcx]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>771</ID>
              <Description>"Infinite Shop Stock"</Description>
              <LastState/>
              <Color>E16941</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Atelier_Ryza_2.exe
  Version: 
  Date   : 2021-01-26
  Author : Zach

  This script does blah blah blah
}

[ENABLE]

// aobscanmodule(shop_stock,Atelier_Ryza_2.exe,28 14 C1 48 83 C4 28) // should be unique
alloc(newmem,$1000,shop_stock)

label(code)
label(return)

newmem:

code:
  mov [rcx+rax*8],#99
  add rsp,28
  jmp return

shop_stock:
  jmp newmem
  nop 2
return:
// registersymbol(shop_stock)

[DISABLE]

shop_stock:
  db 28 14 C1 48 83 C4 28

// unregistersymbol(shop_stock)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+55957E

Atelier_Ryza_2.exe+559544: 4C 8D 0D 9D A8 BD 00  - lea r9,[Atelier_Ryza_2.exe+1133DE8]
Atelier_Ryza_2.exe+55954B: 41 B8 A8 01 00 00     - mov r8d,000001A8
Atelier_Ryza_2.exe+559551: 48 8D 15 A8 A8 BD 00  - lea rdx,[Atelier_Ryza_2.exe+1133E00]
Atelier_Ryza_2.exe+559558: 48 8D 0D 01 CA 7C 00  - lea rcx,[Atelier_Ryza_2.exe+D25F60]
Atelier_Ryza_2.exe+55955F: E8 1C 69 5E 00        - call Atelier_Ryza_2.exe+B3FE80
Atelier_Ryza_2.exe+559564: 48 8D 0D C5 C9 7C 00  - lea rcx,[Atelier_Ryza_2.exe+D25F30]
Atelier_Ryza_2.exe+55956B: 48 83 C4 28           - add rsp,28
Atelier_Ryza_2.exe+55956F: E9 0C 69 5E 00        - jmp Atelier_Ryza_2.exe+B3FE80
Atelier_Ryza_2.exe+559574: 48 63 C1              - movsxd  rax,ecx
Atelier_Ryza_2.exe+559577: 48 8D 0D 02 FC 19 01  - lea rcx,[Atelier_Ryza_2.exe+16F9180]
// ---------- shop_INJECTING HERE ----------
Atelier_Ryza_2.exe+55957E: 28 14 C1              - sub [rcx+rax*8],dl
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+559581: 48 83 C4 28           - add rsp,28
Atelier_Ryza_2.exe+559585: C3                    - ret 
Atelier_Ryza_2.exe+559586: CC                    - int 3 
Atelier_Ryza_2.exe+559587: CC                    - int 3 
Atelier_Ryza_2.exe+559588: CC                    - int 3 
Atelier_Ryza_2.exe+559589: CC                    - int 3 
Atelier_Ryza_2.exe+55958A: CC                    - int 3 
Atelier_Ryza_2.exe+55958B: CC                    - int 3 
Atelier_Ryza_2.exe+55958C: CC                    - int 3 
Atelier_Ryza_2.exe+55958D: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>801</ID>
              <Description>"Quick CC in battle"</Description>
              <LastState/>
              <Color>E16941</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Atelier_Ryza_2.exe
  Version: 
  Date   : 2021-01-28
  Author : Zach

  This script does blah blah blah
}

[ENABLE]

// aobscanmodule(quick_cc,Atelier_Ryza_2.exe,00 F3 0F 10 41 38 F3) // should be unique
alloc(newmem,$1000,quick_cc)

label(code)
label(return)

newmem:

code:
  mov [rcx+38],(float)10
  jmp return

quick_cc+01:
  jmp newmem
return:
// registersymbol(quick_cc)

[DISABLE]

quick_cc+01:
  db F3 0F 10 41 38

// unregistersymbol(quick_cc)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+35CD7

Atelier_Ryza_2.exe+35CB0: 40 53                 - push rbx
Atelier_Ryza_2.exe+35CB2: 48 83 EC 30           - sub rsp,30
Atelier_Ryza_2.exe+35CB6: 80 79 10 00           - cmp byte ptr [rcx+10],00
Atelier_Ryza_2.exe+35CBA: 48 8B D9              - mov rbx,rcx
Atelier_Ryza_2.exe+35CBD: 0F 29 74 24 20        - movaps [rsp+20],xmm6
Atelier_Ryza_2.exe+35CC2: 0F 28 F1              - movaps xmm6,xmm1
Atelier_Ryza_2.exe+35CC5: 0F 84 95 00 00 00     - je Atelier_Ryza_2.exe+35D60
Atelier_Ryza_2.exe+35CCB: 0F 57 C0              - xorps xmm0,xmm0
Atelier_Ryza_2.exe+35CCE: 0F 2F C6              - comiss xmm0,xmm6
Atelier_Ryza_2.exe+35CD1: 0F 83 89 00 00 00     - jae Atelier_Ryza_2.exe+35D60
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+35CD7: F3 0F 10 41 38        - movss xmm0,[rcx+38]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+35CDC: F3 0F 5C 41 3C        - subss xmm0,[rcx+3C]
Atelier_Ryza_2.exe+35CE1: 0F 5A D0              - cvtps2pd xmm2,xmm0
Atelier_Ryza_2.exe+35CE4: 0F 54 15 C5 38 CF 00  - andps xmm2,[Atelier_Ryza_2.exe+D295B0]
Atelier_Ryza_2.exe+35CEB: 66 0F 5A C2           - cvtpd2ps xmm0,xmm2
Atelier_Ryza_2.exe+35CEF: 0F 2F 05 AE 38 CF 00  - comiss xmm0,[Atelier_Ryza_2.exe+D295A4]
Atelier_Ryza_2.exe+35CF6: 72 68                 - jb Atelier_Ryza_2.exe+35D60
Atelier_Ryza_2.exe+35CF8: BA 0C 02 00 00        - mov edx,0000020C
Atelier_Ryza_2.exe+35CFD: E8 DE 04 00 00        - call Atelier_Ryza_2.exe+361E0
Atelier_Ryza_2.exe+35D02: 85 C0                 - test eax,eax
Atelier_Ryza_2.exe+35D04: 7E 17                 - jle Atelier_Ryza_2.exe+35D1D
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>802</ID>
              <Description>"Easy Quest Completion"</Description>
              <LastState/>
              <Color>E16941</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Atelier_Ryza_2.exe
  Version: 
  Date   : 2021-01-28
  Author : Zach

  This script does blah blah blah
}

[ENABLE]

// aobscanmodule(quest_comp,Atelier_Ryza_2.exe,8B 04 88 C3 CC CC CC CC CC CC CC CC CC CC CC 48) // should be unique
alloc(newmem,$1000,quest_comp)

label(code)
label(return)

newmem:

code:
  mov [rax+rcx*4],#300
  ret 
  int 3 
  jmp return

quest_comp:
  jmp newmem
return:
// registersymbol(quest_comp)

[DISABLE]

quest_comp:
  db 8B 04 88 C3 CC

// unregistersymbol(quest_comp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+41A701

Atelier_Ryza_2.exe+41A6EA: CC                    - int 3
Atelier_Ryza_2.exe+41A6EB: CC                    - int 3
Atelier_Ryza_2.exe+41A6EC: CC                    - int 3
Atelier_Ryza_2.exe+41A6ED: CC                    - int 3
Atelier_Ryza_2.exe+41A6EE: CC                    - int 3
Atelier_Ryza_2.exe+41A6EF: CC                    - int 3
Atelier_Ryza_2.exe+41A6F0: 48 63 C2              - movsxd  rax,edx
Atelier_Ryza_2.exe+41A6F3: 4C 63 C1              - movsxd  r8,ecx
Atelier_Ryza_2.exe+41A6F6: 4A 8D 0C 80           - lea rcx,[rax+r8*4]
Atelier_Ryza_2.exe+41A6FA: 48 8D 05 3F DC 2B 01  - lea rax,[Atelier_Ryza_2.exe+16D8340]
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+41A701: 8B 04 88              - mov eax,[rax+rcx*4]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+41A704: C3                    - ret
Atelier_Ryza_2.exe+41A705: CC                    - int 3
Atelier_Ryza_2.exe+41A706: CC                    - int 3
Atelier_Ryza_2.exe+41A707: CC                    - int 3
Atelier_Ryza_2.exe+41A708: CC                    - int 3
Atelier_Ryza_2.exe+41A709: CC                    - int 3
Atelier_Ryza_2.exe+41A70A: CC                    - int 3
Atelier_Ryza_2.exe+41A70B: CC                    - int 3
Atelier_Ryza_2.exe+41A70C: CC                    - int 3
Atelier_Ryza_2.exe+41A70D: CC                    - int 3
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>835</ID>
              <Description>"Easy Shop Level Up"</Description>
              <LastState/>
              <Color>E16941</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Atelier_Ryza_2.exe
  Version: 
  Date   : 2021-01-30
  Author : Zach

  This script does blah blah blah
}

[ENABLE]

// aobscanmodule(easy_shop,Atelier_Ryza_2.exe,66 89 42 02 44 0F B6 0A 41 80 F9 14) // should be unique
alloc(newmem,$1000,easy_shop)

label(code)
label(return)

newmem:

code:
  mov [rdx+02],#99999
  movzx r9d,byte ptr [rdx]
  jmp return

easy_shop:
  jmp newmem
  nop 3
return:
// registersymbol(easy_shop)

[DISABLE]

easy_shop:
  db 66 89 42 02 44 0F B6 0A

// unregistersymbol(easy_shop)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+557956

Atelier_Ryza_2.exe+557923: 48 8D 04 80                 - lea rax,[rax+rax*4]
Atelier_Ryza_2.exe+557927: 49 8D 97 30 25 70 01        - lea rdx,[r15+01702530]
Atelier_Ryza_2.exe+55792E: 48 8D 14 42                 - lea rdx,[rdx+rax*2]
Atelier_Ryza_2.exe+557932: 0F B7 C6                    - movzx eax,si
Atelier_Ryza_2.exe+557935: 45 01 B4 8F 90 19 70 01     - add [r15+rcx*4+01701990],r14d
Atelier_Ryza_2.exe+55793D: 41 39 84 8F 90 19 70 01     - cmp [r15+rcx*4+01701990],eax
Atelier_Ryza_2.exe+557945: 76 06                       - jna Atelier_Ryza_2.exe+55794D
Atelier_Ryza_2.exe+557947: 66 89 72 02                 - mov [rdx+02],si
Atelier_Ryza_2.exe+55794B: EB 0D                       - jmp Atelier_Ryza_2.exe+55795A
Atelier_Ryza_2.exe+55794D: 41 0F B7 84 8F 90 19 70 01  - movzx eax,word ptr [r15+rcx*4+01701990]
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+557956: 66 89 42 02                 - mov [rdx+02],ax
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+55795A: 44 0F B6 0A                 - movzx r9d,byte ptr [rdx]
Atelier_Ryza_2.exe+55795E: 41 80 F9 14                 - cmp r9l,14
Atelier_Ryza_2.exe+557962: 73 77                       - jae Atelier_Ryza_2.exe+5579DB
Atelier_Ryza_2.exe+557964: 0F 1F 40 00                 - nop dword ptr [rax+00]
Atelier_Ryza_2.exe+557968: 0F 1F 84 00 00 00 00 00     - nop dword ptr [rax+rax+00000000]
Atelier_Ryza_2.exe+557970: 0F B7 4A 02                 - movzx ecx,word ptr [rdx+02]
Atelier_Ryza_2.exe+557974: 41 0F B6 C1                 - movzx eax,r9l
Atelier_Ryza_2.exe+557978: 48 C1 E0 04                 - shl rax,04
Atelier_Ryza_2.exe+55797C: 49 03 C3                    - add rax,r11
Atelier_Ryza_2.exe+55797F: 3B 48 04                    - cmp ecx,[rax+04]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>817</ID>
              <Description>"Quick Reputation Up"</Description>
              <LastState/>
              <Color>E16941</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Atelier_Ryza_2.exe
  Version: 
  Date   : 2021-01-30
  Author : Zach

  This script does blah blah blah
}

[ENABLE]

// aobscanmodule(quick_rep,Atelier_Ryza_2.exe,41 89 4D 00 85 FF) // should be unique
alloc(newmem,$1000,quick_rep)

label(code)
label(return)

newmem:

code:
  mov [r13+00],#100
  test edi,edi
  jmp return

quick_rep:
  jmp newmem
  nop
return:
// registersymbol(quick_rep)

[DISABLE]

quick_rep:
  db 41 89 4D 00 85 FF

// unregistersymbol(quick_rep)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+54F28B

Atelier_Ryza_2.exe+54F269: 49 FF C1           - inc r9
Atelier_Ryza_2.exe+54F26C: 49 83 C0 04        - add r8,04
Atelier_Ryza_2.exe+54F270: 49 83 F9 05        - cmp r9,05
Atelier_Ryza_2.exe+54F274: 7C EA              - jl Atelier_Ryza_2.exe+54F260
Atelier_Ryza_2.exe+54F276: FF C7              - inc edi
Atelier_Ryza_2.exe+54F278: 48 83 C6 7C        - add rsi,7C
Atelier_Ryza_2.exe+54F27C: 83 FF 08           - cmp edi,08
Atelier_Ryza_2.exe+54F27F: 0F 8C D0 FE FF FF  - jl Atelier_Ryza_2.exe+54F155
Atelier_Ryza_2.exe+54F285: 8B 7D 30           - mov edi,[rbp+30]
Atelier_Ryza_2.exe+54F288: 41 8B CC           - mov ecx,r12d
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+54F28B: 41 89 4D 00        - mov [r13+00],ecx
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+54F28F: 85 FF              - test edi,edi
Atelier_Ryza_2.exe+54F291: 0F 8E 22 02 00 00  - jng Atelier_Ryza_2.exe+54F4B9
Atelier_Ryza_2.exe+54F297: E8 74 3F 0F 00     - call Atelier_Ryza_2.exe+643210
Atelier_Ryza_2.exe+54F29C: E8 6F 91 E5 FF     - call Atelier_Ryza_2.exe+3A8410
Atelier_Ryza_2.exe+54F2A1: 48 85 C0           - test rax,rax
Atelier_Ryza_2.exe+54F2A4: 0F 84 0F 02 00 00  - je Atelier_Ryza_2.exe+54F4B9
Atelier_Ryza_2.exe+54F2AA: 48 8B 48 58        - mov rcx,[rax+58]
Atelier_Ryza_2.exe+54F2AE: E8 FD E2 BA FF     - call Atelier_Ryza_2.exe+FD5B0
Atelier_Ryza_2.exe+54F2B3: 4C 8B E8           - mov r13,rax
Atelier_Ryza_2.exe+54F2B6: 48 85 C0           - test rax,rax
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>668</ID>
          <Description>"For Coders"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>C0C0C0</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>549</ID>
              <Description>"CompactMode"</Description>
              <LastState/>
              <Color>808080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/* Compact mode *************************************************************
Credit: mgr.inz.Player (https://forum.cheatengine.org/viewtopic.php?t=570055)
***************************************************** Thanks for the info. */

{$lua}
if syntaxcheck then return end

local Compact = {}

function Compact.addMenu()
  if compactManualReadyExists then return end
  local parent = getMainForm().Menu.Items
  compactMenuItem = createMenuItem(parent)
  parent.add(compactMenuItem)
  compactMenuItem.Caption  = 'Compact View Mode'
  compactMenuItem.OnClick  = Compact.cycleFull
  compactManualReadyExists = true
end

function Compact.cycleFull()
  local state = not (compactMenuItem.Caption == 'Compact View Mode')
  compactMenuItem.Caption = state and 'Compact View Mode' or 'Full View Mode'
  getMainForm().Splitter1.Visible = state
  getMainForm().Panel4.Visible    = state
  getMainForm().Panel5.Visible    = state
end

[ENABLE]

Compact.addMenu()
return 'nop'

[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>551</ID>
              <Description>"Atelier Ryza 2: Lost Legends and the Secret Fairy"</Description>
              <LastState Activated="1"/>
              <Color>E16941</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end

local Register = {}

Register.DhaosCollider = {
{"MainScript", [[
aobscanmodule(read_sp,$process,8B15xxxxxxxx8D040A) // should be unique
aobscanmodule(read_gem,$process,8905xxxxxxxx488905xxxxxxxx488905xxxxxxxx8905xxxxxxxx4883C4xxC3CCCCCCCCCCCC48)
aobscanmodule(read_money,$process,8B05xxxxxxxxC3CCCCCCCCCCCCCCCCCC8B05xxxxxxxxC3CCCCCCCCCCCCCCCCCC33C048) // should be unique
registersymbol(read_sp,read_gem,read_money)
]], "unregistersymbol(read_sp,read_gem,read_money)"},
{"HP recovery after battle", [[
aobscanmodule(heal_hp,$process,448944810C) // should be unique
registersymbol(heal_hp)
]], "unregistersymbol(heal_hp)"},
{"Rapid filling for AP", [[
aobscanmodule(write_ap,$process,7E038941xx8379xx007D07C741xx00000000488B49xxE8xxxxxxxx8B43xx3BF87D0F) // should be unique
aobscanmodule(write_ap2,$process,7E038941xx8379xx007D07C741xx00000000488B49xxE8xxxxxxxx488B4B) // should be unique
registersymbol(write_ap,write_ap2)
]], "unregistersymbol(write_ap,write_ap2)"},
{"Rapid filling for T-Lv gauge", [[
aobscanmodule(trace_tactical,$process,751A8379xx05) // should be unique
registersymbol(trace_tactical)
]], "unregistersymbol(trace_tactical)"},
{"Don't Break", [[
aobscanmodule(write_break,$process,8B86xxxxxxxx3986xxxxxxxx7E06xxxxxxxxxxxx4439BExxxxxxxx7D074489BExxxxxxxx66) // should be unique
registersymbol(write_break)
]], "unregistersymbol(write_break)"},
{"Battle result EXP multiplier", [[
aobscanmodule(result_exp,$process,8B7AxxF30F7F4424xx) // should be unique
registersymbol(result_exp)
]], "unregistersymbol(result_exp)"},
{"Battle result Money multiplier", [[
aobscanmodule(result_money,$process,488B5C24308957) // should be unique
registersymbol(result_money)
]], "unregistersymbol(result_money)"},
{"Move speed multiplier", [[
aobscanmodule(write_x_coord,$process,488D5424xxF30F5843) // should be unique
aobscanmodule(write_y_coord,$process,F30F584BxxF30F5853xxF30F585Bxx488B4B) // should be unique
registersymbol(write_x_coord,write_y_coord)
]], "unregistersymbol(write_x_coord,write_y_coord)"},
{"Jump height multiplier", [[
aobscanmodule(write_z_coord,$process,F30F105BxxF30F584B) // should be unique
registersymbol(write_z_coord)
]], "unregistersymbol(write_z_coord)"},
{"Change all Item quality", [[
aobscanmodule(read_item_ptr,$process,0F104Fxx0F118Bxxxxxxxx0F1047xx0F1183xxxxxxxx0F104Fxx0F118Bxxxxxxxx0F1047xx0F1183xxxxxxxx0F104Fxx0F118Bxxxxxxxx8B47xx8983xxxxxxxxE8xxxxxxxx488D4C24) // should be unique
aobscanmodule(read_synth_quality,$process,0FBF41xxC3CCCCCCCCCCCCCCCCCCCCCC4883EC) // should be unique
registersymbol(read_item_ptr,read_synth_quality)
]], "unregistersymbol(read_item_ptr,read_synth_quality)"},
{"Easy Synthesis level up", [[
aobscanmodule(read_element,$process,8B8424xxxxxxxx0141xx44) // should be unique
registersymbol(read_element)
]], "unregistersymbol(read_element)"},
{"Character stats editor", [[
aobscanmodule(read_level,$process,448B66xx4533C0) // should be unique
registersymbol(read_level)
]], "unregistersymbol(read_level)"},
{"Item editor", [[
aobscanmodule(item_editor,$process,0F1007488BCF0F1183) // should be unique
aobscanmodule(trace_synth_ptr,$process,488B4Axx4885C9740F488B5B)
registersymbol(item_editor,trace_synth_ptr)
]], "unregistersymbol(item_editor,trace_synth_ptr)"}
}

Register.zachillios = {
{"Highlight Loop For Easy Level", [[
aobscanmodule(loop_for_easy,$process,428B542604) // should be unique
registersymbol(loop_for_easy)
]], "unregistersymbol(loop_for_easy)"},
{"Infinite Shop Stock", [[
aobscanmodule(shop_stock,$process,2814C14883C428) // should be unique
registersymbol(shop_stock)
]], "unregistersymbol(shop_stock)"},
{"Quick CC in battle", [[
aobscanmodule(quick_cc,$process,00F30F104138F3) // should be unique
registersymbol(quick_cc)
]], "unregistersymbol(quick_cc)"},
{"Easy Quest Completion", [[
aobscanmodule(quest_comp,$process,8B0488C3CCCCCCCCCCCCCCCCCCCCCC48) // should be unique
registersymbol(quest_comp)
]], "unregistersymbol(quest_comp)"},
{"Easy Shop Level Up", [[
aobscanmodule(easy_shop,$process,66894202440FB60A4180F914) // should be unique
registersymbol(easy_shop)
]], "unregistersymbol(easy_shop)"},
{"Quick Reputation Up", [[
aobscanmodule(quick_rep,$process,41894D0085FF) // should be unique
registersymbol(quick_rep)
]], "unregistersymbol(quick_rep)"}
}

function Register.enable(aobSymbol)
  for i = 1, #aobSymbol do
    local array = aobSymbol[i]
    local state = autoAssemble(array[2])
    Register.check = state or Register.color(array[1], 0x808080)
    Register.check = not state or Register.color(array[1], 0xE16941)
  end
  memrec.color = 0xE16941
end

function Register.disable(aobSymbol)
  for i = 1, #aobSymbol do
    local array = aobSymbol[i]
    Register.color(array[1], 0x808080)
    autoAssemble(array[3])
  end
  memrec.color = 0x808080
end

function Register.color(descName, color)
  local desc = getAddressList().getMemoryRecordByDescription(descName)
  if not desc then return end
  desc.Color = color
end

[ENABLE]

Register.enable(Register.DhaosCollider)
Register.enable(Register.zachillios)
getAddressList().getMemoryRecordByDescription("Created by zachillios").Active = true
getAddressList().getMemoryRecordByDescription("MainScript").Active = true

[DISABLE]

getAddressList().getMemoryRecordByDescription("MainScript").Active = false
getAddressList().getMemoryRecordByDescription("Created by zachillios").Active = false
Register.disable(Register.DhaosCollider)
Register.disable(Register.zachillios)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>739</ID>
                  <Description>"MainScript"</Description>
                  <LastState Activated="1"/>
                  <Color>E16941</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>/* getBaseAddr ******************************************************
Credit: TheyCallMeTim13 (https://www.youtube.com/watch?v=lmWPWGwJ8Bg)
********************************************* Thanks for the info. */

{$lua}
if syntaxcheck then return end

local AOB = {}

function AOB.getBaseAddr(ptrSymbol, strSymbol, argOffset)
  local symbolAddr = getAddress(strSymbol)
  symbolAddr  = symbolAddr or error(print("Error: "..strSymbol))
  AOB.offset  = argOffset
  AOB.address = AOB.offset + 0x4
  local offset   = readInteger(symbolAddr + AOB.offset, true)
  local address  = symbolAddr + AOB.address
  local baseAddr = address + offset
  unregisterSymbol(ptrSymbol)
  registerSymbol(ptrSymbol, baseAddr, true)
end

[ENABLE]

AOB.getBaseAddr("sp_addr", "read_sp", 2)
AOB.getBaseAddr("gem_addr", "read_gem", 2)
AOB.getBaseAddr("money_addr", "read_money", 2)

[DISABLE]

unregisterSymbol("sp_addr")
unregisterSymbol("gem_addr")
unregisterSymbol("money_addr")
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>716</ID>
                  <Description>"INJECTION POINT"</Description>
                  <LastState/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{
// MainScript (SP): Atelier_Ryza_2.exe+41ABB7

Atelier_Ryza_2.exe+41ABAA: CC                             - int 3
Atelier_Ryza_2.exe+41ABAB: CC                             - int 3
Atelier_Ryza_2.exe+41ABAC: CC                             - int 3
Atelier_Ryza_2.exe+41ABAD: CC                             - int 3
Atelier_Ryza_2.exe+41ABAE: CC                             - int 3
Atelier_Ryza_2.exe+41ABAF: CC                             - int 3
Atelier_Ryza_2.exe+41ABB0: 85 C9                          - test ecx,ecx
Atelier_Ryza_2.exe+41ABB2: 7F 03                          - jg Atelier_Ryza_2.exe+41ABB7
Atelier_Ryza_2.exe+41ABB4: 33 C0                          - xor eax,eax
Atelier_Ryza_2.exe+41ABB6: C3                             - ret
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+41ABB7: 8B 15 23 F0 2B 01              - mov edx,[Atelier_Ryza_2.exe+16D9BE0]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+41ABBD: 8D 04 0A                       - lea eax,[rdx+rcx]
Atelier_Ryza_2.exe+41ABC0: 3D 9F 86 01 00                 - cmp eax,0001869F
Atelier_Ryza_2.exe+41ABC5: 7E 12                          - jle Atelier_Ryza_2.exe+41ABD9
Atelier_Ryza_2.exe+41ABC7: B8 9F 86 01 00                 - mov eax,0001869F
Atelier_Ryza_2.exe+41ABCC: C7 05 0A F0 2B 01 9F 86 01 00  - mov [Atelier_Ryza_2.exe+16D9BE0],0001869F
Atelier_Ryza_2.exe+41ABD6: 2B C2                          - sub eax,edx
Atelier_Ryza_2.exe+41ABD8: C3                             - ret
Atelier_Ryza_2.exe+41ABD9: 89 05 01 F0 2B 01              - mov [Atelier_Ryza_2.exe+16D9BE0],eax
Atelier_Ryza_2.exe+41ABDF: 8B C1                          - mov eax,ecx
Atelier_Ryza_2.exe+41ABE1: C3                             - ret
}
{
// MainScript (Gems): Atelier_Ryza_2.exe+5600BB

Atelier_Ryza_2.exe+560082: 48 8D 0D 67 7E 23 01  - lea rcx,[Atelier_Ryza_2.exe+1797EF0]
Atelier_Ryza_2.exe+560089: E8 02 4E D3 FF        - call Atelier_Ryza_2.exe+294E90
Atelier_Ryza_2.exe+56008E: 48 8D 0D C3 7E 23 01  - lea rcx,[Atelier_Ryza_2.exe+1797F58]
Atelier_Ryza_2.exe+560095: E8 36 4A D3 FF        - call Atelier_Ryza_2.exe+294AD0
Atelier_Ryza_2.exe+56009A: 48 8B 05 1F 23 17 01  - mov rax,[Atelier_Ryza_2.exe+16D23C0]
Atelier_Ryza_2.exe+5600A1: 48 8D 0D 18 23 17 01  - lea rcx,[Atelier_Ryza_2.exe+16D23C0]
Atelier_Ryza_2.exe+5600A8: FF 50 08              - call qword ptr [rax+08]
Atelier_Ryza_2.exe+5600AB: 33 C0                 - xor eax,eax
Atelier_Ryza_2.exe+5600AD: 66 89 05 AC DE 1A 01  - mov [Atelier_Ryza_2.exe+170DF60],ax
Atelier_Ryza_2.exe+5600B4: 66 89 05 A9 DE 1A 01  - mov [Atelier_Ryza_2.exe+170DF64],ax
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+5600BB: 89 05 A7 DE 1A 01     - mov [Atelier_Ryza_2.exe+170DF68],eax
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+5600C1: 48 89 05 A8 DE 1A 01  - mov [Atelier_Ryza_2.exe+170DF70],rax
Atelier_Ryza_2.exe+5600C8: 48 89 05 A9 DE 1A 01  - mov [Atelier_Ryza_2.exe+170DF78],rax
Atelier_Ryza_2.exe+5600CF: 89 05 AB DE 1A 01     - mov [Atelier_Ryza_2.exe+170DF80],eax
Atelier_Ryza_2.exe+5600D5: 48 83 C4 28           - add rsp,28
Atelier_Ryza_2.exe+5600D9: C3                    - ret
Atelier_Ryza_2.exe+5600DA: CC                    - int 3
Atelier_Ryza_2.exe+5600DB: CC                    - int 3
Atelier_Ryza_2.exe+5600DC: CC                    - int 3
Atelier_Ryza_2.exe+5600DD: CC                    - int 3
Atelier_Ryza_2.exe+5600DE: CC                    - int 3
}
{
// MainScript (Money &amp; Gold Coin): Atelier_Ryza_2.exe+560E60

Atelier_Ryza_2.exe+560E56: C3                 - ret
Atelier_Ryza_2.exe+560E57: CC                 - int 3
Atelier_Ryza_2.exe+560E58: CC                 - int 3
Atelier_Ryza_2.exe+560E59: CC                 - int 3
Atelier_Ryza_2.exe+560E5A: CC                 - int 3
Atelier_Ryza_2.exe+560E5B: CC                 - int 3
Atelier_Ryza_2.exe+560E5C: CC                 - int 3
Atelier_Ryza_2.exe+560E5D: CC                 - int 3
Atelier_Ryza_2.exe+560E5E: CC                 - int 3
Atelier_Ryza_2.exe+560E5F: CC                 - int 3
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+560E60: 8B 05 52 71 23 01  - mov eax,[Atelier_Ryza_2.exe+1797FB8]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+560E66: C3                 - ret
Atelier_Ryza_2.exe+560E67: CC                 - int 3
Atelier_Ryza_2.exe+560E68: CC                 - int 3
Atelier_Ryza_2.exe+560E69: CC                 - int 3
Atelier_Ryza_2.exe+560E6A: CC                 - int 3
Atelier_Ryza_2.exe+560E6B: CC                 - int 3
Atelier_Ryza_2.exe+560E6C: CC                 - int 3
Atelier_Ryza_2.exe+560E6D: CC                 - int 3
Atelier_Ryza_2.exe+560E6E: CC                 - int 3
Atelier_Ryza_2.exe+560E6F: CC                 - int 3
}
{
// heal_hp: "Atelier_Ryza.exe"+3B76F8

"Atelier_Ryza.exe"+3B76DB: 7E 04                 -  jle Atelier_Ryza.exe+3B76E1
"Atelier_Ryza.exe"+3B76DD: 44 89 41 10           -  mov [rcx+10],r8d
"Atelier_Ryza.exe"+3B76E1: 83 79 10 00           -  cmp dword ptr [rcx+10],00
"Atelier_Ryza.exe"+3B76E5: 7D 07                 -  jnl Atelier_Ryza.exe+3B76EE
"Atelier_Ryza.exe"+3B76E7: C7 41 10 00 00 00 00  -  mov [rcx+10],00000000
"Atelier_Ryza.exe"+3B76EE: C3                    -  ret
"Atelier_Ryza.exe"+3B76EF: CC                    -  int 3
"Atelier_Ryza.exe"+3B76F0: 83 FA 5E              -  cmp edx,5E
"Atelier_Ryza.exe"+3B76F3: 77 48                 -  ja Atelier_Ryza.exe+3B773D
"Atelier_Ryza.exe"+3B76F5: 48 63 C2              -  movsxd  rax,edx
// ---------- INJECTING HERE ----------
"Atelier_Ryza.exe"+3B76F8: 44 89 44 81 0C        -  mov [rcx+rax*4+0C],r8d
// ---------- DONE INJECTING  ----------
"Atelier_Ryza.exe"+3B76FD: 85 D2                 -  test edx,edx
"Atelier_Ryza.exe"+3B76FF: 74 21                 -  je Atelier_Ryza.exe+3B7722
"Atelier_Ryza.exe"+3B7701: 83 FA 01              -  cmp edx,01
"Atelier_Ryza.exe"+3B7704: 75 37                 -  jne Atelier_Ryza.exe+3B773D
"Atelier_Ryza.exe"+3B7706: 8B 81 10 01 00 00     -  mov eax,[rcx+00000110]
"Atelier_Ryza.exe"+3B770C: 39 41 10              -  cmp [rcx+10],eax
"Atelier_Ryza.exe"+3B770F: 7E 03                 -  jle Atelier_Ryza.exe+3B7714
"Atelier_Ryza.exe"+3B7711: 89 41 10              -  mov [rcx+10],eax
"Atelier_Ryza.exe"+3B7714: 83 79 10 00           -  cmp dword ptr [rcx+10],00
"Atelier_Ryza.exe"+3B7718: 7D 23                 -  jnl Atelier_Ryza.exe+3B773D
}
{
// Rapid filling for AP (inc): Atelier_Ryza_2.exe+2A5FC

Atelier_Ryza_2.exe+2A5DF: CC                    - int 3
Atelier_Ryza_2.exe+2A5E0: 48 89 5C 24 08        - mov [rsp+08],rbx
Atelier_Ryza_2.exe+2A5E5: 57                    - push rdi
Atelier_Ryza_2.exe+2A5E6: 48 83 EC 20           - sub rsp,20
Atelier_Ryza_2.exe+2A5EA: 8B 79 10              - mov edi,[rcx+10]
Atelier_Ryza_2.exe+2A5ED: 48 8B D9              - mov rbx,rcx
Atelier_Ryza_2.exe+2A5F0: 8D 04 17              - lea eax,[rdi+rdx]
Atelier_Ryza_2.exe+2A5F3: 89 41 10              - mov [rcx+10],eax
Atelier_Ryza_2.exe+2A5F6: 8B 41 14              - mov eax,[rcx+14]
Atelier_Ryza_2.exe+2A5F9: 39 41 10              - cmp [rcx+10],eax
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+2A5FC: 7E 03                 - jle Atelier_Ryza_2.exe+2A601
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+2A5FE: 89 41 10              - mov [rcx+10],eax
Atelier_Ryza_2.exe+2A601: 83 79 10 00           - cmp dword ptr [rcx+10],00
Atelier_Ryza_2.exe+2A605: 7D 07                 - jnl Atelier_Ryza_2.exe+2A60E
Atelier_Ryza_2.exe+2A607: C7 41 10 00 00 00 00  - mov [rcx+10],00000000
Atelier_Ryza_2.exe+2A60E: 48 8B 49 20           - mov rcx,[rcx+20]
Atelier_Ryza_2.exe+2A612: E8 A9 71 58 00        - call Atelier_Ryza_2.exe+5B17C0
Atelier_Ryza_2.exe+2A617: 8B 43 14              - mov eax,[rbx+14]
Atelier_Ryza_2.exe+2A61A: 3B F8                 - cmp edi,eax
Atelier_Ryza_2.exe+2A61C: 7D 0F                 - jnl Atelier_Ryza_2.exe+2A62D
Atelier_Ryza_2.exe+2A61E: 39 43 10              - cmp [rbx+10],eax
}
{
// Rapid filling for AP (dec): Atelier_Ryza_2.exe+2AA8E

Atelier_Ryza_2.exe+2AA70: 48 89 5C 24 08        - mov [rsp+08],rbx
Atelier_Ryza_2.exe+2AA75: 57                    - push rdi
Atelier_Ryza_2.exe+2AA76: 48 83 EC 20           - sub rsp,20
Atelier_Ryza_2.exe+2AA7A: 80 79 18 00           - cmp byte ptr [rcx+18],00
Atelier_Ryza_2.exe+2AA7E: 8B FA                 - mov edi,edx
Atelier_Ryza_2.exe+2AA80: 48 8B D9              - mov rbx,rcx
Atelier_Ryza_2.exe+2AA83: 74 36                 - je Atelier_Ryza_2.exe+2AABB
Atelier_Ryza_2.exe+2AA85: 29 51 10              - sub [rcx+10],edx
Atelier_Ryza_2.exe+2AA88: 8B 41 14              - mov eax,[rcx+14]
Atelier_Ryza_2.exe+2AA8B: 39 41 10              - cmp [rcx+10],eax
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+2AA8E: 7E 03                 - jle Atelier_Ryza_2.exe+2AA93
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+2AA90: 89 41 10              - mov [rcx+10],eax
Atelier_Ryza_2.exe+2AA93: 83 79 10 00           - cmp dword ptr [rcx+10],00
Atelier_Ryza_2.exe+2AA97: 7D 07                 - jnl Atelier_Ryza_2.exe+2AAA0
Atelier_Ryza_2.exe+2AA99: C7 41 10 00 00 00 00  - mov [rcx+10],00000000
Atelier_Ryza_2.exe+2AAA0: 48 8B 49 20           - mov rcx,[rcx+20]
Atelier_Ryza_2.exe+2AAA4: E8 17 6D 58 00        - call Atelier_Ryza_2.exe+5B17C0
Atelier_Ryza_2.exe+2AAA9: 48 8B 4B 08           - mov rcx,[rbx+08]
Atelier_Ryza_2.exe+2AAAD: 8B D7                 - mov edx,edi
Atelier_Ryza_2.exe+2AAAF: 48 8B 89 80 00 00 00  - mov rcx,[rcx+00000080]
Atelier_Ryza_2.exe+2AAB6: E8 55 C9 02 00        - call Atelier_Ryza_2.exe+57410
}
{
// Rapid filling for T-Lv gauge: Atelier_Ryza_2.exe+57606

Atelier_Ryza_2.exe+575E1: 48 63 D0              - movsxd  rdx,eax
Atelier_Ryza_2.exe+575E4: 48 8D 05 8D 65 CD 00  - lea rax,[Atelier_Ryza_2.exe+D2DB78]
Atelier_Ryza_2.exe+575EB: 8B 04 90              - mov eax,[rax+rdx*4]
Atelier_Ryza_2.exe+575EE: 39 41 1C              - cmp [rcx+1C],eax
Atelier_Ryza_2.exe+575F1: 7E 03                 - jle Atelier_Ryza_2.exe+575F6
Atelier_Ryza_2.exe+575F3: 89 41 1C              - mov [rcx+1C],eax
Atelier_Ryza_2.exe+575F6: 83 79 1C 00           - cmp dword ptr [rcx+1C],00
Atelier_Ryza_2.exe+575FA: 7D 07                 - jnl Atelier_Ryza_2.exe+57603
Atelier_Ryza_2.exe+575FC: C7 41 1C 00 00 00 00  - mov [rcx+1C],00000000
Atelier_Ryza_2.exe+57603: 39 41 1C              - cmp [rcx+1C],eax
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+57606: 75 1A                 - jne Atelier_Ryza_2.exe+57622
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+57608: 83 79 18 05           - cmp dword ptr [rcx+18],05
Atelier_Ryza_2.exe+5760C: 7D 14                 - jnl Atelier_Ryza_2.exe+57622
Atelier_Ryza_2.exe+5760E: 41 B0 01              - mov r8l,01
Atelier_Ryza_2.exe+57611: BA 01 00 00 00        - mov edx,00000001
Atelier_Ryza_2.exe+57616: E8 15 00 00 00        - call Atelier_Ryza_2.exe+57630
Atelier_Ryza_2.exe+5761B: C7 43 1C 00 00 00 00  - mov [rbx+1C],00000000
Atelier_Ryza_2.exe+57622: 48 8B 4B 10           - mov rcx,[rbx+10]
Atelier_Ryza_2.exe+57626: 48 83 C4 20           - add rsp,20
Atelier_Ryza_2.exe+5762A: 5B                    - pop rbx
Atelier_Ryza_2.exe+5762B: E9 D0 4A 56 00        - jmp Atelier_Ryza_2.exe+5BC100
}
{
// Don't Break: Atelier_Ryza_2.exe+3234E8

Atelier_Ryza_2.exe+3234C5: 48 8B 6C 24 70           - mov rbp,[rsp+70]
Atelier_Ryza_2.exe+3234CA: 85 C0                    - test eax,eax
Atelier_Ryza_2.exe+3234CC: 0F 8E 93 00 00 00        - jng Atelier_Ryza_2.exe+323565
Atelier_Ryza_2.exe+3234D2: 41 8B DF                 - mov ebx,r15d
Atelier_Ryza_2.exe+3234D5: 44 3B F0                 - cmp r14d,eax
Atelier_Ryza_2.exe+3234D8: 7E 05                    - jle Atelier_Ryza_2.exe+3234DF
Atelier_Ryza_2.exe+3234DA: 41 8B DE                 - mov ebx,r14d
Atelier_Ryza_2.exe+3234DD: 2B D8                    - sub ebx,eax
Atelier_Ryza_2.exe+3234DF: 41 2B C6                 - sub eax,r14d
Atelier_Ryza_2.exe+3234E2: 89 86 14 01 00 00        - mov [rsi+00000114],eax
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+3234E8: 8B 86 38 01 00 00        - mov eax,[rsi+00000138]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+3234EE: 39 86 14 01 00 00        - cmp [rsi+00000114],eax
Atelier_Ryza_2.exe+3234F4: 7E 06                    - jle Atelier_Ryza_2.exe+3234FC
Atelier_Ryza_2.exe+3234F6: 89 86 14 01 00 00        - mov [rsi+00000114],eax
Atelier_Ryza_2.exe+3234FC: 44 39 BE 14 01 00 00     - cmp [rsi+00000114],r15d
Atelier_Ryza_2.exe+323503: 7D 07                    - jnl Atelier_Ryza_2.exe+32350C
Atelier_Ryza_2.exe+323505: 44 89 BE 14 01 00 00     - mov [rsi+00000114],r15d
Atelier_Ryza_2.exe+32350C: 66 0F 6E 96 14 01 00 00  - movd xmm2,[rsi+00000114]
Atelier_Ryza_2.exe+323514: 48 8B D6                 - mov rdx,rsi
Atelier_Ryza_2.exe+323517: 66 0F 6E 86 38 01 00 00  - movd xmm0,[rsi+00000138]
Atelier_Ryza_2.exe+32351F: 48 8B 4E 08              - mov rcx,[rsi+08]
}
{
// Battle result EXP multiplier: Atelier_Ryza_2.exe+5E4BAD

Atelier_Ryza_2.exe+5E4B84: 41 56                    - push r14
Atelier_Ryza_2.exe+5E4B86: 41 57                    - push r15
Atelier_Ryza_2.exe+5E4B88: 48 81 EC 80 00 00 00     - sub rsp,00000080
Atelier_Ryza_2.exe+5E4B8F: 48 8B 41 08              - mov rax,[rcx+08]
Atelier_Ryza_2.exe+5E4B93: 4C 8B F9                 - mov r15,rcx
Atelier_Ryza_2.exe+5E4B96: 0F 57 C0                 - xorps xmm0,xmm0
Atelier_Ryza_2.exe+5E4B99: 0F 29 74 24 70           - movaps [rsp+70],xmm6
Atelier_Ryza_2.exe+5E4B9E: 45 33 ED                 - xor r13d,r13d
Atelier_Ryza_2.exe+5E4BA1: 48 8D 4C 24 50           - lea rcx,[rsp+50]
Atelier_Ryza_2.exe+5E4BA6: 48 8B 90 E0 00 00 00     - mov rdx,[rax+000000E0]
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+5E4BAD: 8B 7A 40                 - mov edi,[rdx+40]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+5E4BB0: F3 0F 7F 44 24 50        - movdqu [rsp+50],xmm0
Atelier_Ryza_2.exe+5E4BB6: 4C 89 6C 24 60           - mov [rsp+60],r13
Atelier_Ryza_2.exe+5E4BBB: E8 B0 37 F6 FF           - call Atelier_Ryza_2.exe+548370
Atelier_Ryza_2.exe+5E4BC0: 48 8B 5C 24 50           - mov rbx,[rsp+50]
Atelier_Ryza_2.exe+5E4BC5: F3 0F 10 35 7B 41 74 00  - movss xmm6,[Atelier_Ryza_2.exe+D28D48]
Atelier_Ryza_2.exe+5E4BCD: 48 3B 5C 24 58           - cmp rbx,[rsp+58]
Atelier_Ryza_2.exe+5E4BD2: 74 4E                    - je Atelier_Ryza_2.exe+5E4C22
Atelier_Ryza_2.exe+5E4BD4: 48 8B 0B                 - mov rcx,[rbx]
Atelier_Ryza_2.exe+5E4BD7: E8 74 81 CB FF           - call Atelier_Ryza_2.exe+29CD50
Atelier_Ryza_2.exe+5E4BDC: 3D 74 01 00 00           - cmp eax,00000174
}
{
// result_money: "Atelier_Ryza.exe"+48CF70

"Atelier_Ryza.exe"+48CF53: E8 88 9B B8 FF           -  call Atelier_Ryza.exe+16AE0
"Atelier_Ryza.exe"+48CF58: 8B C8                    -  mov ecx,eax
"Atelier_Ryza.exe"+48CF5A: B8 1F 85 EB 51           -  mov eax,51EB851F
"Atelier_Ryza.exe"+48CF5F: 0F AF CB                 -  imul ecx,ebx
"Atelier_Ryza.exe"+48CF62: F7 E9                    -  imul ecx
"Atelier_Ryza.exe"+48CF64: C1 FA 05                 -  sar edx,05
"Atelier_Ryza.exe"+48CF67: 8B C2                    -  mov eax,edx
"Atelier_Ryza.exe"+48CF69: C1 E8 1F                 -  shr eax,1F
"Atelier_Ryza.exe"+48CF6C: 03 D0                    -  add edx,eax
"Atelier_Ryza.exe"+48CF6E: 03 D3                    -  add edx,ebx
// ---------- INJECTING HERE ----------
"Atelier_Ryza.exe"+48CF70: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
// ---------- DONE INJECTING  ----------
"Atelier_Ryza.exe"+48CF75: 89 57 4C                 -  mov [rdi+4C],edx
"Atelier_Ryza.exe"+48CF78: 48 83 C4 20              -  add rsp,20
"Atelier_Ryza.exe"+48CF7C: 5F                       -  pop rdi
"Atelier_Ryza.exe"+48CF7D: C3                       -  ret
"Atelier_Ryza.exe"+48CF7E: CC                       -  int 3
"Atelier_Ryza.exe"+48CF7F: CC                       -  int 3
"Atelier_Ryza.exe"+48CF80: 48 89 5C 24 08           -  mov [rsp+08],rbx
"Atelier_Ryza.exe"+48CF85: 48 89 74 24 10           -  mov [rsp+10],rsi
"Atelier_Ryza.exe"+48CF8A: 57                       -  push rdi
"Atelier_Ryza.exe"+48CF8B: 48 83 EC 50              -  sub rsp,50
}
{
// Move speed multiplier: Atelier_Ryza_2.exe+8B6679

Atelier_Ryza_2.exe+8B664B: E8 E0 1F 00 00           - call Atelier_Ryza_2.exe+8B8630
Atelier_Ryza_2.exe+8B6650: 48 83 BB 88 00 00 00 00  - cmp qword ptr [rbx+00000088],00
Atelier_Ryza_2.exe+8B6658: 76 16                    - jna Atelier_Ryza_2.exe+8B6670
Atelier_Ryza_2.exe+8B665A: F3 0F 10 0D 06 02 47 00  - movss xmm1,[Atelier_Ryza_2.exe+D26868]
Atelier_Ryza_2.exe+8B6662: 44 0F B6 C7              - movzx r8d,dil
Atelier_Ryza_2.exe+8B6666: 48 8B CB                 - mov rcx,rbx
Atelier_Ryza_2.exe+8B6669: E8 62 0C 00 00           - call Atelier_Ryza_2.exe+8B72D0
Atelier_Ryza_2.exe+8B666E: EB 04                    - jmp Atelier_Ryza_2.exe+8B6674
Atelier_Ryza_2.exe+8B6670: C6 43 48 00              - mov byte ptr [rbx+48],00
Atelier_Ryza_2.exe+8B6674: F3 0F 10 43 10           - movss xmm0,[rbx+10]
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+8B6679: 48 8D 54 24 20           - lea rdx,[rsp+20]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+8B667E: F3 0F 58 43 28           - addss xmm0,[rbx+28]
Atelier_Ryza_2.exe+8B6683: F3 0F 10 4B 14           - movss xmm1,[rbx+14]
Atelier_Ryza_2.exe+8B6688: F3 0F 10 53 18           - movss xmm2,[rbx+18]
write_z_coord: F3 0F 10 5B 1C           - movss xmm3,[rbx+1C]
Atelier_Ryza_2.exe+8B6692: F3 0F 58 4B 2C           - addss xmm1,[rbx+2C]
Atelier_Ryza_2.exe+8B6697: F3 0F 58 53 30           - addss xmm2,[rbx+30]
Atelier_Ryza_2.exe+8B669C: F3 0F 58 5B 34           - addss xmm3,[rbx+34]
Atelier_Ryza_2.exe+8B66A1: 48 8B 4B 58              - mov rcx,[rbx+58]
Atelier_Ryza_2.exe+8B66A5: F3 0F 11 44 24 20        - movss [rsp+20],xmm0
Atelier_Ryza_2.exe+8B66AB: F3 0F 11 4C 24 24        - movss [rsp+24],xmm1
}
{
// Jump hight multiplier: Atelier_Ryza_2.exe+8B668D

Atelier_Ryza_2.exe+8B6662: 44 0F B6 C7        - movzx r8d,dil
Atelier_Ryza_2.exe+8B6666: 48 8B CB           - mov rcx,rbx
Atelier_Ryza_2.exe+8B6669: E8 62 0C 00 00     - call Atelier_Ryza_2.exe+8B72D0
Atelier_Ryza_2.exe+8B666E: EB 04              - jmp Atelier_Ryza_2.exe+8B6674
Atelier_Ryza_2.exe+8B6670: C6 43 48 00        - mov byte ptr [rbx+48],00
Atelier_Ryza_2.exe+8B6674: F3 0F 10 43 10     - movss xmm0,[rbx+10]
Atelier_Ryza_2.exe+8B6679: 48 8D 54 24 20     - lea rdx,[rsp+20]
Atelier_Ryza_2.exe+8B667E: F3 0F 58 43 28     - addss xmm0,[rbx+28]
Atelier_Ryza_2.exe+8B6683: F3 0F 10 4B 14     - movss xmm1,[rbx+14]
Atelier_Ryza_2.exe+8B6688: F3 0F 10 53 18     - movss xmm2,[rbx+18]
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+8B668D: F3 0F 10 5B 1C     - movss xmm3,[rbx+1C]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+8B6692: F3 0F 58 4B 2C     - addss xmm1,[rbx+2C]
Atelier_Ryza_2.exe+8B6697: F3 0F 58 53 30     - addss xmm2,[rbx+30]
Atelier_Ryza_2.exe+8B669C: F3 0F 58 5B 34     - addss xmm3,[rbx+34]
Atelier_Ryza_2.exe+8B66A1: 48 8B 4B 58        - mov rcx,[rbx+58]
Atelier_Ryza_2.exe+8B66A5: F3 0F 11 44 24 20  - movss [rsp+20],xmm0
Atelier_Ryza_2.exe+8B66AB: F3 0F 11 4C 24 24  - movss [rsp+24],xmm1
Atelier_Ryza_2.exe+8B66B1: F3 0F 11 54 24 28  - movss [rsp+28],xmm2
Atelier_Ryza_2.exe+8B66B7: F3 0F 11 5C 24 2C  - movss [rsp+2C],xmm3
Atelier_Ryza_2.exe+8B66BD: 0F 28 44 24 20     - movaps xmm0,[rsp+20]
Atelier_Ryza_2.exe+8B66C2: 0F 29 44 24 20     - movaps [rsp+20],xmm0
}
{
// Send the picked up items to the Container: Atelier_Ryza_2.exe+3CCCB0

Atelier_Ryza_2.exe+3CCC8F: CC                             - int 3
Atelier_Ryza_2.exe+3CCC90: 48 89 5C 24 08                 - mov [rsp+08],rbx
Atelier_Ryza_2.exe+3CCC95: 48 89 6C 24 10                 - mov [rsp+10],rbp
Atelier_Ryza_2.exe+3CCC9A: 48 89 74 24 18                 - mov [rsp+18],rsi
Atelier_Ryza_2.exe+3CCC9F: 57                             - push rdi
Atelier_Ryza_2.exe+3CCCA0: 41 56                          - push r14
Atelier_Ryza_2.exe+3CCCA2: 41 57                          - push r15
Atelier_Ryza_2.exe+3CCCA4: 48 83 EC 60                    - sub rsp,60
Atelier_Ryza_2.exe+3CCCA8: 48 8B D9                       - mov rbx,rcx
Atelier_Ryza_2.exe+3CCCAB: E8 50 C2 0B 00                 - call Atelier_Ryza_2.exe+488F00
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+3CCCB0: 84 C0                          - test al,al
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+3CCCB2: 48 8D 0D 37 8A 3E 01           - lea rcx,[Atelier_Ryza_2.exe+17B56F0]
Atelier_Ryza_2.exe+3CCCB9: 4C 8D 3D F0 89 3E 01           - lea r15,[Atelier_Ryza_2.exe+17B56B0]
Atelier_Ryza_2.exe+3CCCC0: 4C 0F 45 F9                    - cmovne r15,rcx
Atelier_Ryza_2.exe+3CCCC4: 49 8B CF                       - mov rcx,r15
Atelier_Ryza_2.exe+3CCCC7: E8 14 5D ED FF                 - call Atelier_Ryza_2.exe+2A29E0
Atelier_Ryza_2.exe+3CCCCC: 89 83 84 00 00 00              - mov [rbx+00000084],eax
Atelier_Ryza_2.exe+3CCCD2: 44 8B C0                       - mov r8d,eax
Atelier_Ryza_2.exe+3CCCD5: 48 8B 4B 28                    - mov rcx,[rbx+28]
Atelier_Ryza_2.exe+3CCCD9: 48 BD 0B D7 A3 70 3D 0A D7 A3  - mov rbp,A3D70A3D70A3D70B
Atelier_Ryza_2.exe+3CCCE3: 48 2B 4B 20                    - sub rcx,[rbx+20]
}
{
// Change all Item quality (normal): Atelier_Ryza_2.exe+4C568E

Atelier_Ryza_2.exe+4C565D: 0F 84 80 00 00 00     - je Atelier_Ryza_2.exe+4C56E3
Atelier_Ryza_2.exe+4C5663: 48 83 C2 03           - add rdx,03
Atelier_Ryza_2.exe+4C5667: 48 81 C1 53 01 00 00  - add rcx,00000153
Atelier_Ryza_2.exe+4C566E: 41 B8 61 00 00 00     - mov r8d,00000061
Atelier_Ryza_2.exe+4C5674: E8 17 97 7C 00        - call Atelier_Ryza_2.exe+C8ED90
Atelier_Ryza_2.exe+4C5679: 85 C0                 - test eax,eax
Atelier_Ryza_2.exe+4C567B: 0F 84 91 00 00 00     - je Atelier_Ryza_2.exe+4C5712
item_editor: 0F 10 07              - movups xmm0,[rdi]
Atelier_Ryza_2.exe+4C5684: 48 8B CF              - mov rcx,rdi
Atelier_Ryza_2.exe+4C5687: 0F 11 83 50 01 00 00  - movups [rbx+00000150],xmm0
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+4C568E: 0F 10 4F 10           - movups xmm1,[rdi+10]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+4C5692: 0F 11 8B 60 01 00 00  - movups [rbx+00000160],xmm1
Atelier_Ryza_2.exe+4C5699: 0F 10 47 20           - movups xmm0,[rdi+20]
Atelier_Ryza_2.exe+4C569D: 0F 11 83 70 01 00 00  - movups [rbx+00000170],xmm0
Atelier_Ryza_2.exe+4C56A4: 0F 10 4F 30           - movups xmm1,[rdi+30]
Atelier_Ryza_2.exe+4C56A8: 0F 11 8B 80 01 00 00  - movups [rbx+00000180],xmm1
Atelier_Ryza_2.exe+4C56AF: 0F 10 47 40           - movups xmm0,[rdi+40]
Atelier_Ryza_2.exe+4C56B3: 0F 11 83 90 01 00 00  - movups [rbx+00000190],xmm0
Atelier_Ryza_2.exe+4C56BA: 0F 10 4F 50           - movups xmm1,[rdi+50]
Atelier_Ryza_2.exe+4C56BE: 0F 11 8B A0 01 00 00  - movups [rbx+000001A0],xmm1
Atelier_Ryza_2.exe+4C56C5: 8B 47 60              - mov eax,[rdi+60]
}
{
// Change all Item quality (in Synthesis): Atelier_Ryza_2.exe+29D3A0

Atelier_Ryza_2.exe+29D396: CC           - int 3
Atelier_Ryza_2.exe+29D397: CC           - int 3
Atelier_Ryza_2.exe+29D398: CC           - int 3
Atelier_Ryza_2.exe+29D399: CC           - int 3
Atelier_Ryza_2.exe+29D39A: CC           - int 3
Atelier_Ryza_2.exe+29D39B: CC           - int 3
Atelier_Ryza_2.exe+29D39C: CC           - int 3
Atelier_Ryza_2.exe+29D39D: CC           - int 3
Atelier_Ryza_2.exe+29D39E: CC           - int 3
Atelier_Ryza_2.exe+29D39F: CC           - int 3
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+29D3A0: 0F BF 41 06  - movsx eax,word ptr [rcx+06]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+29D3A4: C3           - ret
Atelier_Ryza_2.exe+29D3A5: CC           - int 3
Atelier_Ryza_2.exe+29D3A6: CC           - int 3
Atelier_Ryza_2.exe+29D3A7: CC           - int 3
Atelier_Ryza_2.exe+29D3A8: CC           - int 3
Atelier_Ryza_2.exe+29D3A9: CC           - int 3
Atelier_Ryza_2.exe+29D3AA: CC           - int 3
Atelier_Ryza_2.exe+29D3AB: CC           - int 3
Atelier_Ryza_2.exe+29D3AC: CC           - int 3
Atelier_Ryza_2.exe+29D3AD: CC           - int 3
}
{
// Easy Synthesis level Up: Atelier_Ryza_2.exe+17E473

Atelier_Ryza_2.exe+17E450: 48 8D 4C 24 68        - lea rcx,[rsp+68]
Atelier_Ryza_2.exe+17E455: 44 8B C7              - mov r8d,edi
Atelier_Ryza_2.exe+17E458: E8 D3 B1 FF FF        - call Atelier_Ryza_2.exe+179630
Atelier_Ryza_2.exe+17E45D: 84 C0                 - test al,al
Atelier_Ryza_2.exe+17E45F: 74 37                 - je Atelier_Ryza_2.exe+17E498
Atelier_Ryza_2.exe+17E461: 48 8B 4C 24 70        - mov rcx,[rsp+70]
Atelier_Ryza_2.exe+17E466: 45 33 C0              - xor r8d,r8d
Atelier_Ryza_2.exe+17E469: 44 89 44 24 40        - mov [rsp+40],r8d
Atelier_Ryza_2.exe+17E46E: 48 85 C9              - test rcx,rcx
Atelier_Ryza_2.exe+17E471: 74 25                 - je Atelier_Ryza_2.exe+17E498
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+17E473: 8B 84 24 D0 00 00 00  - mov eax,[rsp+000000D0]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+17E47A: 01 41 04              - add [rcx+04],eax
Atelier_Ryza_2.exe+17E47D: 44 8B 41 04           - mov r8d,[rcx+04]
Atelier_Ryza_2.exe+17E481: 8B 94 AE 48 11 00 00  - mov edx,[rsi+rbp*4+00001148]
Atelier_Ryza_2.exe+17E488: 44 3B C2              - cmp r8d,edx
Atelier_Ryza_2.exe+17E48B: 7E 0B                 - jle Atelier_Ryza_2.exe+17E498
Atelier_Ryza_2.exe+17E48D: 44 2B C2              - sub r8d,edx
Atelier_Ryza_2.exe+17E490: 89 51 04              - mov [rcx+04],edx
Atelier_Ryza_2.exe+17E493: 44 89 44 24 40        - mov [rsp+40],r8d
Atelier_Ryza_2.exe+17E498: 85 FF                 - test edi,edi
Atelier_Ryza_2.exe+17E49A: 7F 50                 - jg Atelier_Ryza_2.exe+17E4EC
}
{
// Character stats editor: Atelier_Ryza_2.exe+2F68C6

Atelier_Ryza_2.exe+2F6894: 4C 89 A4 24 90 00 00 00  - mov [rsp+00000090],r12
Atelier_Ryza_2.exe+2F689C: 4C 89 6C 24 60           - mov [rsp+60],r13
Atelier_Ryza_2.exe+2F68A1: 4C 89 74 24 58           - mov [rsp+58],r14
Atelier_Ryza_2.exe+2F68A6: 4C 89 7C 24 50           - mov [rsp+50],r15
Atelier_Ryza_2.exe+2F68AB: E8 B0 33 1F 00           - call Atelier_Ryza_2.exe+4E9C60
Atelier_Ryza_2.exe+2F68B0: 8B 8D 80 00 00 00        - mov ecx,[rbp+00000080]
Atelier_Ryza_2.exe+2F68B6: E8 B5 C5 10 00           - call Atelier_Ryza_2.exe+402E70
Atelier_Ryza_2.exe+2F68BB: 48 8B 4D 18              - mov rcx,[rbp+18]
Atelier_Ryza_2.exe+2F68BF: 8B D0                    - mov edx,eax
Atelier_Ryza_2.exe+2F68C1: E8 2A 3D 24 00           - call Atelier_Ryza_2.exe+53A5F0
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+2F68C6: 44 8B 66 04              - mov r12d,[rsi+04]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+2F68CA: 45 33 C0                 - xor r8d,r8d
Atelier_Ryza_2.exe+2F68CD: 48 8B 4D 20              - mov rcx,[rbp+20]
Atelier_Ryza_2.exe+2F68D1: 41 8B D4                 - mov edx,r12d
Atelier_Ryza_2.exe+2F68D4: E8 F7 3C 24 00           - call Atelier_Ryza_2.exe+53A5D0
Atelier_Ryza_2.exe+2F68D9: 33 D2                    - xor edx,edx
Atelier_Ryza_2.exe+2F68DB: 48 8B CE                 - mov rcx,rsi
Atelier_Ryza_2.exe+2F68DE: E8 1D 54 1F 00           - call Atelier_Ryza_2.exe+4EBD00
Atelier_Ryza_2.exe+2F68E3: 48 8B 4D 30              - mov rcx,[rbp+30]
Atelier_Ryza_2.exe+2F68E7: 8B D0                    - mov edx,eax
Atelier_Ryza_2.exe+2F68E9: 45 33 C0                 - xor r8d,r8d
}
{
// item_editor: "Atelier_Ryza.exe"+3963FF

"Atelier_Ryza.exe"+3963DA: 48 8B FA              -  mov rdi,rdx
"Atelier_Ryza.exe"+3963DD: 48 8B D9              -  mov rbx,rcx
"Atelier_Ryza.exe"+3963E0: 48 85 D2              -  test rdx,rdx
"Atelier_Ryza.exe"+3963E3: 74 68                 -  je Atelier_Ryza.exe+39644D
"Atelier_Ryza.exe"+3963E5: 48 83 C2 02           -  add rdx,02
"Atelier_Ryza.exe"+3963E9: 48 81 C1 1E 01 00 00  -  add rcx,0000011E
"Atelier_Ryza.exe"+3963F0: 41 B8 40 00 00 00     -  mov r8d,00000040
"Atelier_Ryza.exe"+3963F6: E8 35 61 61 00        -  call Atelier_Ryza.exe+9AC530
"Atelier_Ryza.exe"+3963FB: 85 C0                 -  test eax,eax
"Atelier_Ryza.exe"+3963FD: 74 7D                 -  je Atelier_Ryza.exe+39647C
// ---------- INJECTING HERE ----------
"Atelier_Ryza.exe"+3963FF: 0F 10 07              -  movups xmm0,[rdi]
"Atelier_Ryza.exe"+396402: 48 8B CF              -  mov rcx,rdi
// ---------- DONE INJECTING  ----------
"Atelier_Ryza.exe"+396405: 0F 11 83 1C 01 00 00  -  movups [rbx+0000011C],xmm0
"Atelier_Ryza.exe"+39640C: 0F 10 4F 10           -  movups xmm1,[rdi+10]
"Atelier_Ryza.exe"+396410: 0F 11 8B 2C 01 00 00  -  movups [rbx+0000012C],xmm1
"Atelier_Ryza.exe"+396417: 0F 10 47 20           -  movups xmm0,[rdi+20]
"Atelier_Ryza.exe"+39641B: 0F 11 83 3C 01 00 00  -  movups [rbx+0000013C],xmm0
"Atelier_Ryza.exe"+396422: 0F 10 4F 30           -  movups xmm1,[rdi+30]
"Atelier_Ryza.exe"+396426: 0F 11 8B 4C 01 00 00  -  movups [rbx+0000014C],xmm1
"Atelier_Ryza.exe"+39642D: 0F B7 47 40           -  movzx eax,word ptr [rdi+40]
"Atelier_Ryza.exe"+396431: 66 89 83 5C 01 00 00  -  mov [rbx+0000015C],ax
"Atelier_Ryza.exe"+396438: E8 E3 A3 DE FF        -  call Atelier_Ryza.exe+180820
}
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>818</ID>
                  <Description>"Ignore damage"</Description>
                  <LastState/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,Atelier_Ryza_2.exe,8B 07 29 83 0C 01 00 00) // should be unique
registersymbol(INJECT)

INJECT:
  xor eax,eax

[DISABLE]

INJECT:
  db 8B 07

unregistersymbol(INJECT)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+32372B

Atelier_Ryza_2.exe+3236FF: C7 44 24 20 FF FF FF FF  - mov [rsp+20],FFFFFFFF
Atelier_Ryza_2.exe+323707: 48 8B 48 30              - mov rcx,[rax+30]
Atelier_Ryza_2.exe+32370B: 48 8B 89 F8 21 00 00     - mov rcx,[rcx+000021F8]
Atelier_Ryza_2.exe+323712: E8 49 42 28 00           - call Atelier_Ryza_2.exe+5A7960
Atelier_Ryza_2.exe+323717: 29 37                    - sub [rdi],esi
Atelier_Ryza_2.exe+323719: 8B 07                    - mov eax,[rdi]
Atelier_Ryza_2.exe+32371B: 48 8B 74 24 58           - mov rsi,[rsp+58]
Atelier_Ryza_2.exe+323720: 41 0F 48 C4              - cmovs eax,r12d
Atelier_Ryza_2.exe+323724: 48 8B 6C 24 50           - mov rbp,[rsp+50]
Atelier_Ryza_2.exe+323729: 89 07                    - mov [rdi],eax
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+32372B: 8B 07                    - mov eax,[rdi]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+32372D: 29 83 0C 01 00 00        - sub [rbx+0000010C],eax
Atelier_Ryza_2.exe+323733: 8B 07                    - mov eax,[rdi]
Atelier_Ryza_2.exe+323735: 01 83 80 04 00 00        - add [rbx+00000480],eax
Atelier_Ryza_2.exe+32373B: 44 38 64 24 70           - cmp [rsp+70],r12l
Atelier_Ryza_2.exe+323740: 74 11                    - je Atelier_Ryza_2.exe+323753
Atelier_Ryza_2.exe+323742: 41 81 FE 21 4E 00 00     - cmp r14d,00004E21
Atelier_Ryza_2.exe+323749: 77 08                    - ja Atelier_Ryza_2.exe+323753
Atelier_Ryza_2.exe+32374B: 41 8B CE                 - mov ecx,r14d
Atelier_Ryza_2.exe+32374E: E8 1D 0C FD FF           - call Atelier_Ryza_2.exe+2F4370
Atelier_Ryza_2.exe+323753: 44 39 A3 0C 01 00 00     - cmp [rbx+0000010C],r12d
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>764</ID>
                  <Description>"Coordinates"</Description>
                  <LastState/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>define(address,"Atelier_Ryza_2.exe"+8B75F5)
define(bytes,0F 11 43 28 E8 D2 28 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_2.exe"+8B75F5)

label(code)
label(return)

newmem:

code:
  movups [rbx+28],xmm0
  call Atelier_Ryza_2.exe+8B9ED0
  jmp return

address:
  jmp newmem
  nop 4
return:

[DISABLE]

address:
  db bytes
  // movups [rbx+28],xmm0
  // call Atelier_Ryza_2.exe+8B9ED0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+8B75F5

Atelier_Ryza_2.exe+8B75BE: F3 0F 11 44 24 40              - movss [rsp+40],xmm0
Atelier_Ryza_2.exe+8B75C4: F3 0F 10 44 24 30              - movss xmm0,[rsp+30]
Atelier_Ryza_2.exe+8B75CA: F3 0F 58 43 30                 - addss xmm0,[rbx+30]
Atelier_Ryza_2.exe+8B75CF: F3 0F 11 4C 24 44              - movss [rsp+44],xmm1
Atelier_Ryza_2.exe+8B75D5: F3 0F 10 4C 24 34              - movss xmm1,[rsp+34]
Atelier_Ryza_2.exe+8B75DB: F3 0F 58 4B 34                 - addss xmm1,[rbx+34]
Atelier_Ryza_2.exe+8B75E0: F3 0F 11 44 24 48              - movss [rsp+48],xmm0
Atelier_Ryza_2.exe+8B75E6: F3 0F 11 4C 24 4C              - movss [rsp+4C],xmm1
Atelier_Ryza_2.exe+8B75EC: 0F 28 44 24 40                 - movaps xmm0,[rsp+40]
Atelier_Ryza_2.exe+8B75F1: 0F 29 45 80                    - movaps [rbp-80],xmm0
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+8B75F5: 0F 11 43 28                    - movups [rbx+28],xmm0
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+8B75F9: E8 D2 28 00 00                 - call Atelier_Ryza_2.exe+8B9ED0
Atelier_Ryza_2.exe+8B75FE: 48 8B 4B 60                    - mov rcx,[rbx+60]
Atelier_Ryza_2.exe+8B7602: 48 8D 54 24 20                 - lea rdx,[rsp+20]
Atelier_Ryza_2.exe+8B7607: 44 0F B6 CE                    - movzx r9d,sil
Atelier_Ryza_2.exe+8B760B: C6 83 D5 00 00 00 00           - mov byte ptr [rbx+000000D5],00
Atelier_Ryza_2.exe+8B7612: 4C 8B C3                       - mov r8,rbx
Atelier_Ryza_2.exe+8B7615: C7 83 CC 00 00 00 FF FF 7F 7F  - mov [rbx+000000CC],7F7FFFFF
Atelier_Ryza_2.exe+8B761F: 44 0F 11 4B 10                 - movups [rbx+10],xmm9
Atelier_Ryza_2.exe+8B7624: C7 44 24 20 00 00 80 3F        - mov [rsp+20],3F800000
Atelier_Ryza_2.exe+8B762C: E8 6F 11 01 00                 - call Atelier_Ryza_2.exe+8C87A0
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>744</ID>
                  <Description>"Easy Synthesis level Up.old"</Description>
                  <LastState/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(write_synth_level,$process,7E0B442BC2) // should be unique
registersymbol(write_synth_level)

write_synth_level:
  nop 2

[DISABLE]

write_synth_level:
  db 7E 0B

unregistersymbol(write_synth_level)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>781</ID>
                  <Description>"Item editor.old"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">[ENABLE]

alloc(newmem,$1000,item_editor)
label(code_item_editor)
registersymbol(code_item_editor,item_ptr)

newmem:
  code_item_editor:
    readmem(item_editor,6)
    mov [item_ptr],rdi
    jmp return
    align 10 CC

  item_ptr:
    dq 0

item_editor:
  jmp code_item_editor
  nop
return:

[DISABLE]

item_editor:
  readmem(code_item_editor,6)

unregistersymbol(code_item_editor,item_ptr)
dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>782</ID>
                      <Description>"REQ: Check Basket or Container in the game."</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>783</ID>
                      <Description>"Pointer"</Description>
                      <LastState Value="" RealAddress="F66000000620D8B"/>
                      <Color>008080</Color>
                      <GroupHeader>1</GroupHeader>
                      <Address>item_ptr</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>784</ID>
                          <Description>"Item ID"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+04</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>785</ID>
                          <Description>"Quality"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+06</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>786</ID>
                          <Description>"Trait 1 Level"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Byte</VariableType>
                          <Address>+0E</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>787</ID>
                          <Description>"Trait 2 Level"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Byte</VariableType>
                          <Address>+0F</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>788</ID>
                          <Description>"Trait 3 Level"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Byte</VariableType>
                          <Address>+10</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>789</ID>
                          <Description>"Trait 1"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+12</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>790</ID>
                          <Description>"Trait 2"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+14</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>791</ID>
                          <Description>"Trait 3"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+16</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>792</ID>
                          <Description>"Effect 1"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+18</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>793</ID>
                          <Description>"Effect 2"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+1A</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>794</ID>
                          <Description>"Effect 3"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+1C</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>795</ID>
                          <Description>"Effect 4"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+1E</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>834</ID>
                  <Description>"battle_chara_ptr+03C5 word #257 JGB"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>837</ID>
                  <Description>"cmp Shop unlocks address"</Description>
                  <LastState/>
                  <Color>808080</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(shop_unlocks,$process,80BC10xxxxxxxx020F) // should be unique
registersymbol(shop_unlocks)

[DISABLE]

unregistersymbol(shop_unlocks)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+55A547

Atelier_Ryza_2.exe+55A520: 48 03 78 18              - add rdi,[rax+18]
Atelier_Ryza_2.exe+55A524: 8B 57 4C                 - mov edx,[rdi+4C]
Atelier_Ryza_2.exe+55A527: 8B 4F 48                 - mov ecx,[rdi+48]
Atelier_Ryza_2.exe+55A52A: E8 B1 23 00 00           - call Atelier_Ryza_2.exe+55C8E0
Atelier_Ryza_2.exe+55A52F: 84 C0                    - test al,al
Atelier_Ryza_2.exe+55A531: 0F 84 E0 00 00 00        - je Atelier_Ryza_2.exe+55A617
Atelier_Ryza_2.exe+55A537: 48 63 47 58              - movsxd  rax,dword ptr [rdi+58]
Atelier_Ryza_2.exe+55A53B: 48 8D 15 BE 5A AA FF     - lea rdx,[Atelier_Ryza_2.exe]
Atelier_Ryza_2.exe+55A542: 83 F8 FF                 - cmp eax,-01
Atelier_Ryza_2.exe+55A545: 74 0E                    - je Atelier_Ryza_2.exe+55A555
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+55A547: 80 BC 10 F2 26 70 01 02  - cmp byte ptr [rax+rdx+017026F2],02
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+55A54F: 0F 85 C2 00 00 00        - jne Atelier_Ryza_2.exe+55A617
Atelier_Ryza_2.exe+55A555: 45 85 FF                 - test r15d,r15d
Atelier_Ryza_2.exe+55A558: 74 1D                    - je Atelier_Ryza_2.exe+55A577
Atelier_Ryza_2.exe+55A55A: 48 63 47 54              - movsxd  rax,dword ptr [rdi+54]
Atelier_Ryza_2.exe+55A55E: 83 F8 FF                 - cmp eax,-01
Atelier_Ryza_2.exe+55A561: 74 14                    - je Atelier_Ryza_2.exe+55A577
Atelier_Ryza_2.exe+55A563: 48 8D 0C 80              - lea rcx,[rax+rax*4]
Atelier_Ryza_2.exe+55A567: 0F B7 84 4A 34 25 70 01  - movzx eax,word ptr [rdx+rcx*2+01702534]
Atelier_Ryza_2.exe+55A56F: 66 03 47 1C              - add ax,[rdi+1C]
Atelier_Ryza_2.exe+55A573: 66 89 43 04              - mov [rbx+04],ax
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>900</ID>
      <Description>"Atelier_Ryza_2.exe"</Description>
      <LastState RealAddress="140000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>String</VariableType>
      <Length>2</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>Atelier_Ryza_2.exe</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>861</ID>
      <Description>"Storage Capacity"</Description>
      <LastState Value="5000" RealAddress="1417F3C6C"/>
      <VariableType>4 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17F3C6C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>862</ID>
      <Description>"Storage Capacity"</Description>
      <LastState Value="5000" RealAddress="1417F3C70"/>
      <VariableType>4 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17F3C70</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>904</ID>
      <Description>"Storage Flag"</Description>
      <LastState Value="0" RealAddress="1417F3C74"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17F3C74</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>863</ID>
      <Description>"Basket Capacity"</Description>
      <LastState Value="200" RealAddress="1417F3C2C"/>
      <VariableType>4 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17F3C2C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>864</ID>
      <Description>"Basket Capacity"</Description>
      <LastState Value="200" RealAddress="1417F3C30"/>
      <VariableType>4 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17F3C30</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>870</ID>
      <Description>"Basket Flag"</Description>
      <LastState Value="0" RealAddress="1417F3C34"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17F3C34</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>869</ID>
      <Description>"Basket Pointer"</Description>
      <LastState Value="000000014176D780" RealAddress="1417F3C38"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17F3C38</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>868</ID>
      <Description>"Storage Pointer"</Description>
      <LastState Value="00000001417725A0" RealAddress="1417F3C78"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17F3C78</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>871</ID>
      <Description>"Last Storage Slot"</Description>
      <LastState Value="65535" RealAddress="1417E91A0"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17725A0+64*1300</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>872</ID>
      <Description>"Max Last Storage Slot"</Description>
      <LastState Value="65535" RealAddress="1417F00F4"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>2 Bytes</VariableType>
      <Address>Atelier_Ryza_2.exe+17725A0+64*141d</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>873</ID>
      <Description>"Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="1417725A0"/>
      <ShowAsSigned>0</ShowAsSigned>
      <Color>008080</Color>
      <GroupHeader>1</GroupHeader>
      <Address>Atelier_Ryza_2.exe+17725A0+64*0</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>874</ID>
          <Description>"Quantity"</Description>
          <LastState Value="1" RealAddress="1417725A2"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>+02</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>875</ID>
          <Description>"Level"</Description>
          <LastState Value="16" RealAddress="1417725AB"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>+0B</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>876</ID>
          <Description>"CC of Consumables"</Description>
          <LastState Value="0" RealAddress="1417725AC"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>+0C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>877</ID>
          <Description>"Trait 1 Level"</Description>
          <LastState Value="99" RealAddress="1417725AE"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>+0E</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>878</ID>
          <Description>"Trait 2 Level"</Description>
          <LastState Value="99" RealAddress="1417725AF"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>+0F</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>879</ID>
          <Description>"Trait 3 Level"</Description>
          <LastState Value="99" RealAddress="1417725B0"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>+10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>880</ID>
          <Description>"Item ID"</Description>
          <DropDownListLink>ItemList</DropDownListLink>
          <LastState Value="45" RealAddress="1417725A4"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>881</ID>
          <Description>"Quality"</Description>
          <LastState Value="999" RealAddress="1417725A6"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+06</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>882</ID>
          <Description>"Trait 1"</Description>
          <DropDownListLink>TraitList</DropDownListLink>
          <LastState Value="15" RealAddress="1417725B2"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+12</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>883</ID>
          <Description>"Trait 2"</Description>
          <DropDownListLink>TraitList</DropDownListLink>
          <LastState Value="341" RealAddress="1417725B4"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>884</ID>
          <Description>"Trait 3"</Description>
          <DropDownListLink>TraitList</DropDownListLink>
          <LastState Value="341" RealAddress="1417725B6"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+16</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>885</ID>
          <Description>"Effect 1"</Description>
          <DropDownListLink>EffectList</DropDownListLink>
          <LastState Value="-1" RealAddress="1417725B8"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>886</ID>
          <Description>"Effect 2"</Description>
          <DropDownListLink>EffectList</DropDownListLink>
          <LastState Value="-1" RealAddress="1417725BA"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+1A</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>887</ID>
          <Description>"Effect 3"</Description>
          <DropDownListLink>EffectList</DropDownListLink>
          <LastState Value="-1" RealAddress="1417725BC"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+1C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>888</ID>
          <Description>"Effect 4"</Description>
          <DropDownListLink>EffectList</DropDownListLink>
          <LastState Value="-1" RealAddress="1417725BE"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+1E</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>889</ID>
          <Description>"EV-Effect"</Description>
          <DropDownListLink>EV-EffectList</DropDownListLink>
          <LastState Value="-1" RealAddress="1417725C0"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>890</ID>
          <Description>"Equipment HP+ 1st"</Description>
          <LastState Value="0" RealAddress="1417725C4"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+24</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>891</ID>
          <Description>"Equipment HP+ 2nd"</Description>
          <LastState Value="0" RealAddress="1417725C6"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+26</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>892</ID>
          <Description>"Equipment ATK+"</Description>
          <LastState Value="0" RealAddress="1417725C8"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>893</ID>
          <Description>"Equipment DEF+"</Description>
          <LastState Value="0" RealAddress="1417725CA"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+2A</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>894</ID>
          <Description>"Equipment SPD+"</Description>
          <LastState Value="0" RealAddress="1417725CC"/>
          <ShowAsSigned>1</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+2C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>895</ID>
          <Description>"Trait 1 Locked"</Description>
          <LastState Value="0" RealAddress="1417725A3"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Binary</VariableType>
          <BitStart>3</BitStart>
          <BitLength>1</BitLength>
          <ShowAsBinary>0</ShowAsBinary>
          <Address>+03</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>896</ID>
          <Description>"Trait 2 Locked"</Description>
          <LastState Value="0" RealAddress="1417725A3"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Binary</VariableType>
          <BitStart>4</BitStart>
          <BitLength>1</BitLength>
          <ShowAsBinary>0</ShowAsBinary>
          <Address>+03</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>897</ID>
          <Description>"Trait 3 Locked"</Description>
          <LastState Value="0" RealAddress="1417725A3"/>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Binary</VariableType>
          <BitStart>5</BitStart>
          <BitLength>1</BitLength>
          <ShowAsBinary>0</ShowAsBinary>
          <Address>+03</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>899</ID>
      <Description>"Item Capacity Magic"</Description>
      <Options moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_2.exe
  Version:
  Date   : 2021-06-27
  Author : Compeador

  This script Prevents SaveLoad Crash due to capacity
  change by revert it back.
}

globalalloc(mem_basket,0x20000,0x200000000)
globalalloc(mem_storage,0x1000000,0x200030000)

define(address, "Atelier_Ryza_2.exe"+2A40B4)
define(bytes,0F 1F 40 00 0F 1F 84 00 00 00 00 00)

define(address2, "Atelier_Ryza_2.exe"+2A446A) // main load proc
define(bytes2,8B 41 10 8B DA)

define(address3, "Atelier_Ryza_2.exe"+2A4056)
define(bytes3,39 59 10 7E 25)

[ENABLE]

assert(address,bytes)
alloc(newmem, $1000, "Atelier_Ryza_2.exe"+2A40B4)

label(code)
label(return)
label(val_basket_capcity)
label(val_storage_capcity)

newmem:
  push rcx
  push rdx

  mov rcx,[Atelier_Ryza_2.exe+17F3C2C]
  mov [val_basket_capcity],rcx
  mov rcx,[Atelier_Ryza_2.exe+17F3C6C]
  mov [val_storage_capcity],rcx

  lea rcx,[Atelier_Ryza_2.exe+17F3C2C]
  mov edx,C8
  mov [rcx],edx
  lea rcx,[Atelier_Ryza_2.exe+17F3C30]
  mov [rcx],edx

  lea rcx,[Atelier_Ryza_2.exe+17F3C6C]
  mov edx,1388
  mov [rcx],edx
  lea rcx,[Atelier_Ryza_2.exe+17F3C70]
  mov [rcx],edx

  pop rdx
  pop rcx
code:
  nop dword ptr [rax+00]
  nop dword ptr [rax+rax+00000000]
  jmp return

val_basket_capcity:
  dq C8
registersymbol(val_basket_capcity)

val_storage_capcity:
  dq 1388
registersymbol(val_storage_capcity)

address:
  jmp newmem
  nop 7
return:

assert(address2,bytes2)
alloc(newmem2,$1000,"Atelier_Ryza_2.exe"+2A446A)

label(code2)
label(return2)
label(Lstorage)
label(Lbasket)
label(Lret2)

newmem2:
  mov eax,[rcx+10]
  mov ebx,edx
  push r11
  lea r11,[Atelier_Ryza_2.exe+17F3C20]
  cmp rcx,r11
  je Lbasket
  lea r11,[Atelier_Ryza_2.exe+17F3C60]
  cmp rcx,r11
  je Lstorage
  jmp Lret2

Lbasket:
  push rdx
  mov r11d,[val_basket_capcity]
  mov [rcx+10],r11d
  lea rdx,[Atelier_Ryza_2.exe+17F3C2C]
  mov [rdx],r11d
  pop rdx
  jmp Lret2

Lstorage:
  push rdx
  mov r11d,[val_storage_capcity]
  mov [rcx+10],r11d
  lea rdx,[Atelier_Ryza_2.exe+17F3C6C]
  mov [rdx],r11d
  pop rdx
  jmp Lret2

Lret2:
  pop r11
  jmp return2

code2:
  mov eax,[rcx+10]
  mov ebx,edx
  jmp return2

address2:
  jmp newmem2
return2:

assert(address3,bytes3)
alloc(newmem3,$1000,"Atelier_Ryza_2.exe"+2A4056)

label(code3)
label(return3)
label(Lbasket2)
label(Lstorage2)
label(Lret3)

newmem3:
  push rdx
  push r11
  lea rdx,[Atelier_Ryza_2.exe+17F3C20]
  cmp rcx,rdx
  je Lbasket2
  lea rdx,[Atelier_Ryza_2.exe+17F3C60]
  cmp rcx,rdx
  je Lstorage2
  jmp Lret3

Lbasket2:
  mov r11d,[val_basket_capcity]
  mov [rcx+10],r11d
  lea rdx,[Atelier_Ryza_2.exe+17F3C2C]
  mov [rdx],r11d
  jmp Lret3

Lstorage2:
  mov r11d,[val_storage_capcity]
  mov [rcx+10],r11d
  lea rdx,[Atelier_Ryza_2.exe+17F3C6C]
  mov [rdx],r11d
  jmp Lret3

Lret3:
  pop r11
  pop rdx
  jmp code3

code3:
  cmp [rcx+10],ebx
  jle Atelier_Ryza_2.exe+2A4080
  jmp return3

address3:
  jmp newmem3
return3:

[DISABLE]

address:
  db bytes
  // nop dword ptr [rax+00]
  // nop dword ptr [rax+rax+00000000]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+2A40B4

Atelier_Ryza_2.exe+2A409D: CC                       - int 3
Atelier_Ryza_2.exe+2A409E: CC                       - int 3
Atelier_Ryza_2.exe+2A409F: CC                       - int 3
Atelier_Ryza_2.exe+2A40A0: 48 89 5C 24 08           - mov [rsp+08],rbx
Atelier_Ryza_2.exe+2A40A5: 57                       - push rdi
Atelier_Ryza_2.exe+2A40A6: 48 83 EC 20              - sub rsp,20
Atelier_Ryza_2.exe+2A40AA: 33 FF                    - xor edi,edi
Atelier_Ryza_2.exe+2A40AC: 48 8B D9                 - mov rbx,rcx
Atelier_Ryza_2.exe+2A40AF: 39 79 10                 - cmp [rcx+10],edi
Atelier_Ryza_2.exe+2A40B2: 7E 34                    - jle Atelier_Ryza_2.exe+2A40E8
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+2A40B4: 0F 1F 40 00              - nop dword ptr [rax+00]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+2A40B8: 0F 1F 84 00 00 00 00 00  - nop dword ptr [rax+rax+00000000]
Atelier_Ryza_2.exe+2A40C0: 48 63 C7                 - movsxd  rax,edi
Atelier_Ryza_2.exe+2A40C3: 48 6B C8 64              - imul rcx,rax,64
Atelier_Ryza_2.exe+2A40C7: 48 03 4B 18              - add rcx,[rbx+18]
Atelier_Ryza_2.exe+2A40CB: E8 A0 90 00 00           - call Atelier_Ryza_2.exe+2AD170
Atelier_Ryza_2.exe+2A40D0: FF C7                    - inc edi
Atelier_Ryza_2.exe+2A40D2: 3B 7B 10                 - cmp edi,[rbx+10]
Atelier_Ryza_2.exe+2A40D5: 7C E9                    - jl Atelier_Ryza_2.exe+2A40C0
Atelier_Ryza_2.exe+2A40D7: 8B 43 10                 - mov eax,[rbx+10]
Atelier_Ryza_2.exe+2A40DA: 89 43 0C                 - mov [rbx+0C],eax
}
address2:
  db bytes2
  // mov eax,[rcx+10]
  // mov ebx,edx

dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+2A446A

Atelier_Ryza_2.exe+2A4459: CC                    - int 3
Atelier_Ryza_2.exe+2A445A: CC                    - int 3
Atelier_Ryza_2.exe+2A445B: CC                    - int 3
Atelier_Ryza_2.exe+2A445C: CC                    - int 3
Atelier_Ryza_2.exe+2A445D: CC                    - int 3
Atelier_Ryza_2.exe+2A445E: CC                    - int 3
Atelier_Ryza_2.exe+2A445F: CC                    - int 3
Atelier_Ryza_2.exe+2A4460: 48 89 5C 24 08        - mov [rsp+08],rbx
Atelier_Ryza_2.exe+2A4465: 57                    - push rdi
Atelier_Ryza_2.exe+2A4466: 48 83 EC 20           - sub rsp,20
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+2A446A: 8B 41 10              - mov eax,[rcx+10]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+2A446D: 8B DA                 - mov ebx,edx
Atelier_Ryza_2.exe+2A446F: 48 8B F9              - mov rdi,rcx
Atelier_Ryza_2.exe+2A4472: 85 C0                 - test eax,eax
Atelier_Ryza_2.exe+2A4474: 74 68                 - je Atelier_Ryza_2.exe+2A44DE
Atelier_Ryza_2.exe+2A4476: 85 D2                 - test edx,edx
Atelier_Ryza_2.exe+2A4478: 78 04                 - js Atelier_Ryza_2.exe+2A447E
Atelier_Ryza_2.exe+2A447A: 3B C2                 - cmp eax,edx
Atelier_Ryza_2.exe+2A447C: 7D 60                 - jnl Atelier_Ryza_2.exe+2A44DE
Atelier_Ryza_2.exe+2A447E: 48 8D 0D 5B AA A9 00  - lea rcx,[Atelier_Ryza_2.exe+D3EEE0]
Atelier_Ryza_2.exe+2A4485: E8 16 3B 8B 00        - call Atelier_Ryza_2.exe+B57FA0
}
address3:
  db bytes3
  // cmp [rcx+10],ebx
  // jle Atelier_Ryza_2.exe+2A4080

dealloc(newmem3)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+2A4056

Atelier_Ryza_2.exe+2A403D: CC              - int 3
Atelier_Ryza_2.exe+2A403E: CC              - int 3
Atelier_Ryza_2.exe+2A403F: CC              - int 3
Atelier_Ryza_2.exe+2A4040: 48 89 5C 24 08  - mov [rsp+08],rbx
Atelier_Ryza_2.exe+2A4045: 48 89 74 24 10  - mov [rsp+10],rsi
Atelier_Ryza_2.exe+2A404A: 57              - push rdi
Atelier_Ryza_2.exe+2A404B: 48 83 EC 20     - sub rsp,20
Atelier_Ryza_2.exe+2A404F: 33 FF           - xor edi,edi
Atelier_Ryza_2.exe+2A4051: 48 8B F1        - mov rsi,rcx
Atelier_Ryza_2.exe+2A4054: 8B DF           - mov ebx,edi
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+2A4056: 39 59 10        - cmp [rcx+10],ebx
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+2A4059: 7E 25           - jle Atelier_Ryza_2.exe+2A4080
Atelier_Ryza_2.exe+2A405B: 0F 1F 44 00 00  - nop dword ptr [rax+rax+00]
Atelier_Ryza_2.exe+2A4060: 48 63 D3        - movsxd  rdx,ebx
Atelier_Ryza_2.exe+2A4063: 48 6B CA 64     - imul rcx,rdx,64
Atelier_Ryza_2.exe+2A4067: 48 03 4E 18     - add rcx,[rsi+18]
Atelier_Ryza_2.exe+2A406B: E8 40 84 00 00  - call Atelier_Ryza_2.exe+2AC4B0
Atelier_Ryza_2.exe+2A4070: 3D 95 03 00 00  - cmp eax,00000395
Atelier_Ryza_2.exe+2A4075: 77 09           - ja Atelier_Ryza_2.exe+2A4080
Atelier_Ryza_2.exe+2A4077: FF C7           - inc edi
Atelier_Ryza_2.exe+2A4079: FF C3           - inc ebx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>901</ID>
          <Description>"Custom Basket"</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end

local Basket = {}

function Basket.init()
  module_addr = getAddress("Atelier_Ryza_2.exe")
  cur_addr = getAddress("mem_basket")
  flag_inited = readInteger(module_addr+0x17F3C34)
  if flag_inited == 0 then
    for i=1,1200 do
      writeBytes(cur_addr,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x01,0xFF,0x00,0x00,0x01,0x01,0x01,0x48,0x55,0x01,0x55,0x01,0x55,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x6F,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00)
      cur_addr = cur_addr + 100
    end
    src_addr = module_addr + 0x176D780
    dst_addr = getAddress("mem_basket")
    for i=1,200 do
      for j=1,25 do
        _bytes = readInteger(src_addr)
        writeInteger(dst_addr, _bytes)
        src_addr = src_addr + 4
        dst_addr = dst_addr + 4
      end
    end
    writeInteger(module_addr+0x17F3C34,1) -- mark flag inited
  end
  writeInteger(module_addr+0x17F3C2C, 999) -- basket capacity
  writeInteger(module_addr+0x17F3C30, 999) -- basket capacity
  writeQword(module_addr+0x17F3C38,getAddress("mem_basket")) -- redirect basket pointer
end

function Basket.terminate()
  module_addr = getAddress("Atelier_Ryza_2.exe")
  writeInteger(module_addr+0x17F3C2C, 200)
  writeInteger(module_addr+0x17F3C30, 200)
  writeQword(module_addr+0x17F3C38,module_addr+0x176D780)
  writeInteger(module_addr+0x17F3C34,0)
end

[ENABLE]
-- 0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x01,0xFF,0x00,0x00,0x01,0x01,0x01,0x48,0x55,0x01,0x55,0x01,0x55,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x6F,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00
Basket.init()

[DISABLE]
Basket.terminate()
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>903</ID>
              <Description>"Bigger Basket (Re-activate after load save)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
val_basket_capcity:
  dq 3E7
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
val_basket_capcity:
  dq C8
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>902</ID>
                  <Description>"Basket Capacity (Max: 999)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>val_basket_capcity</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>905</ID>
          <Description>"Custom Storage"</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end

local Storage = {}

function Storage.init()
  module_addr = getAddress("Atelier_Ryza_2.exe")
  cur_addr = getAddress("mem_storage")
  flag_inited = readInteger(module_addr+0x17F3C74)
  if flag_inited == 0 then
    for i=1,1200 do
      writeBytes(cur_addr,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x01,0xFF,0x00,0x00,0x01,0x01,0x01,0x48,0x55,0x01,0x55,0x01,0x55,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x6F,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00)
      cur_addr = cur_addr + 100
    end
    src_addr = module_addr + 0x17725A0
    dst_addr = getAddress("mem_storage")
    for i=1,5000 do
      for j=1,25 do
        _bytes = readInteger(src_addr)
        writeInteger(dst_addr, _bytes)
        src_addr = src_addr + 4
        dst_addr = dst_addr + 4
      end
    end
    writeInteger(module_addr+0x17F3C74,1)
  end
  writeInteger(module_addr+0x17F3C6C, 99999) -- storage capacity
  writeInteger(module_addr+0x17F3C70, 99999) -- storage capacity
  writeQword(module_addr+0x17F3C78,getAddress("mem_storage")) -- redirect storage pointer
end

function Storage.terminate()
  module_addr = getAddress("Atelier_Ryza_2.exe")
  writeInteger(module_addr+0x17F3C6C, 5000)
  writeInteger(module_addr+0x17F3C70, 5000)
  writeQword(module_addr+0x17F3C78,module_addr+0x17725A0)
  writeInteger(module_addr+0x17F3C74,0)
end

[ENABLE]
-- 0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x01,0xFF,0x00,0x00,0x01,0x01,0x01,0x48,0x55,0x01,0x55,0x01,0x55,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x6F,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00
Storage.init()
entry = getAddressList().getMemoryRecordByDescription("Necessary S/L Patches")
if entry ~= nil then
  entry.Active = false
  entry.Active = true
end

[DISABLE]
Storage.terminate()
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>915</ID>
              <Description>"Necessary S/L Patches"</Description>
              <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>910</ID>
                  <Description>"Load Patch"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>define(address,"Atelier_Ryza_2.exe"+CA626F)
define(bytes,0F B6 0A 88 08)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_2.exe"+CA626F)

label(code)
label(return)

newmem:
  movzx ecx,byte ptr [rdx]
  cmp r14,7A120
  jne code
  push rax
  mov rax,mem_storage
  add rax,rsi
  mov [rax],cl
  pop rax
code:
  mov [rax],cl
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // movzx ecx,byte ptr [rdx]
  // mov [rax],cl

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+CA626F

Atelier_Ryza_2.exe+CA6254: 66 89 08        - mov [rax],cx
Atelier_Ryza_2.exe+CA6257: C3              - ret
Atelier_Ryza_2.exe+CA6258: 48 8B 0A        - mov rcx,[rdx]
Atelier_Ryza_2.exe+CA625B: 48 89 08        - mov [rax],rcx
Atelier_Ryza_2.exe+CA625E: C3              - ret
Atelier_Ryza_2.exe+CA625F: 0F B7 0A        - movzx ecx,word ptr [rdx]
Atelier_Ryza_2.exe+CA6262: 44 0F B6 42 02  - movzx r8d,byte ptr [rdx+02]
Atelier_Ryza_2.exe+CA6267: 66 89 08        - mov [rax],cx
Atelier_Ryza_2.exe+CA626A: 44 88 40 02     - mov [rax+02],r8l
Atelier_Ryza_2.exe+CA626E: C3              - ret
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+CA626F: 0F B6 0A        - movzx ecx,byte ptr [rdx]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+CA6272: 88 08           - mov [rax],cl
Atelier_Ryza_2.exe+CA6274: C3              - ret
Atelier_Ryza_2.exe+CA6275: F3 0F 6F 02     - movdqu xmm0,[rdx]
Atelier_Ryza_2.exe+CA6279: F3 0F 7F 00     - movdqu [rax],xmm0
Atelier_Ryza_2.exe+CA627D: C3              - ret
Atelier_Ryza_2.exe+CA627E: 66 90           - nop 2
Atelier_Ryza_2.exe+CA6280: 4C 8B 02        - mov r8,[rdx]
Atelier_Ryza_2.exe+CA6283: 0F B7 4A 08     - movzx ecx,word ptr [rdx+08]
Atelier_Ryza_2.exe+CA6287: 44 0F B6 4A 0A  - movzx r9d,byte ptr [rdx+0A]
Atelier_Ryza_2.exe+CA628C: 4C 89 00        - mov [rax],r8
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>911</ID>
                  <Description>"Save Patch"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>loadlibrary(luaclient-x86_64.dll)
luacall(openLuaServer('CELUASERVER'))

CELUA_ServerName:
db 'CELUASERVER',0

define(address,"Atelier_Ryza_2.exe"+57581F)
define(bytes,48 8D 15 8A C1 C0 00)

[ENABLE]

{$lua}
if syntaxcheck then return end
function save_data()
  os.execute("mkdir D:\\CEdata")
  local file = io.open("D:\\CEdata\\storage.dat", 'r')
  if file then
    file:close()
    os.execute( string.format("copy D:\\CEdata\\storage.dat D:\\CEdata\\storage_%s.dat", os.date("%Y-%m-%d-%H-%M-%S")) )
  end
  file = io.open("D:\\CEdata\\storage.dat", 'wb')
  local src_addr = getAddress("mem_storage")
  local ori_addr = getAddress("Atelier_Ryza_2.exe") + 0x17725A0
  for i=1,100000 do
    _bytes = readBytes(src_addr, 100, true) -- read custom storage
    if _bytes then
      file:write(string.char(unpack(_bytes))) -- write to file
      if i &lt; 4800 and readInteger(ori_addr) == 0xffff then
        writeBytes(ori_addr, _bytes)
      end
    end
    src_addr = src_addr + 100
    ori_addr = ori_addr + 100
  end
  file:close()
end
{$asm}

assert(address,bytes)
alloc(newmem,$1000, "Atelier_Ryza_2.exe"+57581F)
alloc(lua_funcid, 4)
alloc(lua_funcname, 256)

label(code)
label(return)

lua_funcname:
  db 'save_data',0

newmem:
  sub rsp,20+6*8 // shadow space + registers CE used
  mov [rsp+20],rcx
  mov [rsp+28],rdx
  mov [rsp+30],r8
  mov [rsp+38],r9
  mov [rsp+40],r10
  mov [rsp+48],r11

  mov ecx,[lua_funcid]
  test ecx,ecx
  jne short hasrefid
  mov rcx,lua_funcname
  call CELUA_GetFunctionReferenceFromName
  mov [lua_funcid],eax
  mov ecx,eax

hasrefid:
  mov edx,0 // number of params
  call CELUA_ExecuteFunctionByReference

  // clean ups
  mov rcx,[rsp+20]
  mov rdx,[rsp+28]
  mov r8,[rsp+30]
  mov r9,[rsp+38]
  mov r10,[rsp+40]
  mov r11,[rsp+48]
  add rsp,20+6*8

code:
  lea rdx,[Atelier_Ryza_2.exe+11819B0]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // lea rdx,[Atelier_Ryza_2.exe+11819B0]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+57581F

Atelier_Ryza_2.exe+5757E3: 41 B9 98 3A 00 00        - mov r9d,00003A98
Atelier_Ryza_2.exe+5757E9: C7 44 24 20 01 00 00 00  - mov [rsp+20],00000001
Atelier_Ryza_2.exe+5757F1: 4C 8D 05 C8 6E 27 01     - lea r8,[Atelier_Ryza_2.exe+17EC6C0]
Atelier_Ryza_2.exe+5757F8: 48 8B CB                 - mov rcx,rbx
Atelier_Ryza_2.exe+5757FB: 48 8D 15 96 C1 C0 00     - lea rdx,[Atelier_Ryza_2.exe+1181998]
Atelier_Ryza_2.exe+575802: E8 D9 C3 FD FF           - call Atelier_Ryza_2.exe+551BE0
Atelier_Ryza_2.exe+575807: 41 B9 20 A1 07 00        - mov r9d,0007A120
Atelier_Ryza_2.exe+57580D: C7 44 24 20 01 00 00 00  - mov [rsp+20],00000001
Atelier_Ryza_2.exe+575815: 4C 8D 05 84 CD 1F 01     - lea r8,[Atelier_Ryza_2.exe+17725A0]
Atelier_Ryza_2.exe+57581C: 48 8B CB                 - mov rcx,rbx
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+57581F: 48 8D 15 8A C1 C0 00     - lea rdx,[Atelier_Ryza_2.exe+11819B0]
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+575826: E8 B5 C3 FD FF           - call Atelier_Ryza_2.exe+551BE0
Atelier_Ryza_2.exe+57582B: 41 B9 98 3A 00 00        - mov r9d,00003A98
Atelier_Ryza_2.exe+575831: C7 44 24 20 01 00 00 00  - mov [rsp+20],00000001
Atelier_Ryza_2.exe+575839: 4C 8D 05 40 A9 27 01     - lea r8,[Atelier_Ryza_2.exe+17F0180]
Atelier_Ryza_2.exe+575840: 48 8B CB                 - mov rcx,rbx
Atelier_Ryza_2.exe+575843: 48 8D 15 76 C1 C0 00     - lea rdx,[Atelier_Ryza_2.exe+11819C0]
Atelier_Ryza_2.exe+57584A: E8 91 C3 FD FF           - call Atelier_Ryza_2.exe+551BE0
Atelier_Ryza_2.exe+57584F: 41 B9 88 13 00 00        - mov r9d,00001388
Atelier_Ryza_2.exe+575855: C7 44 24 20 01 00 00 00  - mov [rsp+20],00000001
Atelier_Ryza_2.exe+57585D: 4C 8D 05 8C 6B 1F 01     - lea r8,[Atelier_Ryza_2.exe+176C3F0]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>918</ID>
                  <Description>"Auto-Load Custom Storage"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>loadlibrary(luaclient-x86_64.dll)
luacall(openLuaServer('CELUASERVER'))

CELUA_ServerName:
db 'CELUASERVER',0

define(address,"Atelier_Ryza_2.exe"+43071A)
define(bytes,E8 01 01 00 00)

[ENABLE]

{$lua}
if syntaxcheck then return end
function load_data()
  local file = io.open("D:\\CEdata\\storage.dat", 'rb')
  if file then
    dst_addr = getAddress("mem_storage")
    for j=1,100000 do
      buffer = file:read(100)
      writeBytes(dst_addr, {buffer:byte(1,#buffer)})
      dst_addr = dst_addr + 100
    end
    file:close()
  end
end
{$asm}

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_2.exe"+43071A)
alloc(lua_funcid, 4)
alloc(lua_funcname, 256)

label(code)
label(return)

lua_funcname:
  db 'load_data',0

newmem:
  call Atelier_Ryza_2.exe+430820

  sub rsp,20+6*8 // shadow space + registers CE used
  mov [rsp+20],rcx
  mov [rsp+28],rdx
  mov [rsp+30],r8
  mov [rsp+38],r9
  mov [rsp+40],r10
  mov [rsp+48],r11

  mov ecx,[lua_funcid]
  test ecx,ecx
  jne short hasrefid
  mov rcx,lua_funcname
  call CELUA_GetFunctionReferenceFromName
  mov [lua_funcid],eax
  mov ecx,eax

hasrefid:
  mov edx,0 // number of params
  call CELUA_ExecuteFunctionByReference
  // clean ups
  mov rcx,[rsp+20]
  mov rdx,[rsp+28]
  mov r8,[rsp+30]
  mov r9,[rsp+38]
  mov r10,[rsp+40]
  mov r11,[rsp+48]
  add rsp,20+6*8

code:
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // call Atelier_Ryza_2.exe+430820

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_2.exe+43071A

Atelier_Ryza_2.exe+4306FD: CC                    - int 3 
Atelier_Ryza_2.exe+4306FE: CC                    - int 3 
Atelier_Ryza_2.exe+4306FF: CC                    - int 3 
Atelier_Ryza_2.exe+430700: 40 53                 - push rbx
Atelier_Ryza_2.exe+430702: 48 83 EC 20           - sub rsp,20
Atelier_Ryza_2.exe+430706: 48 8B D9              - mov rbx,rcx
Atelier_Ryza_2.exe+430709: 48 8D 0D B0 EE B9 00  - lea rcx,[Atelier_Ryza_2.exe+FCF5C0]
Atelier_Ryza_2.exe+430710: E8 8B 78 72 00        - call Atelier_Ryza_2.exe+B57FA0
Atelier_Ryza_2.exe+430715: 33 D2                 - xor edx,edx
Atelier_Ryza_2.exe+430717: 48 8B CB              - mov rcx,rbx
// ---------- INJECTING HERE ----------
Atelier_Ryza_2.exe+43071A: E8 01 01 00 00        - call Atelier_Ryza_2.exe+430820
// ---------- DONE INJECTING  ----------
Atelier_Ryza_2.exe+43071F: 48 8D 0D C2 EE B9 00  - lea rcx,[Atelier_Ryza_2.exe+FCF5E8]
Atelier_Ryza_2.exe+430726: 8B D8                 - mov ebx,eax
Atelier_Ryza_2.exe+430728: E8 73 78 72 00        - call Atelier_Ryza_2.exe+B57FA0
Atelier_Ryza_2.exe+43072D: 85 DB                 - test ebx,ebx
Atelier_Ryza_2.exe+43072F: 79 4C                 - jns Atelier_Ryza_2.exe+43077D
Atelier_Ryza_2.exe+430731: 48 8D 0D 60 EB 90 00  - lea rcx,[Atelier_Ryza_2.exe+D3F298]
Atelier_Ryza_2.exe+430738: E8 63 78 72 00        - call Atelier_Ryza_2.exe+B57FA0
Atelier_Ryza_2.exe+43073D: 48 8D 0D 74 EB 90 00  - lea rcx,[Atelier_Ryza_2.exe+D3F2B8]
Atelier_Ryza_2.exe+430744: E8 57 78 72 00        - call Atelier_Ryza_2.exe+B57FA0
Atelier_Ryza_2.exe+430749: 4C 8D 0D 58 ED B9 00  - lea r9,[Atelier_Ryza_2.exe+FCF4A8]
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>908</ID>
              <Description>"Bigger Storage (Re-activate after load save)"</Description>
              <Options moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
val_storage_capcity:
  dq 1869F
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
val_storage_capcity:
  dq 1388
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>909</ID>
                  <Description>"Storage Capacity (Max: 99999)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>val_storage_capcity</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>913</ID>
              <Description>"Load Original Storage"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end

local Storage = {}

function Storage.load_from_ori()
  src_addr = module_addr + 0x17725A0
  dst_addr = getAddress("mem_storage")
  for i=1,5000 do
    for j=1,25 do
      _bytes = readInteger(src_addr)
      writeInteger(dst_addr, _bytes)
      src_addr = src_addr + 4
      dst_addr = dst_addr + 4
    end
  end
end

[ENABLE]
Storage.load_from_ori()
 
[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>914</ID>
              <Description>"Save to Original Storage"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end

local Storage = {}

function Storage.save_to_ori()
  local src_addr = getAddress("mem_storage")
  local dst_addr = getAddress("Atelier_Ryza_2.exe") + 0x17725A0
  for i=1,4900 do
    _bytes = readBytes(src_addr, 100, true) -- read custom storage
    if _bytes then
      writeBytes(dst_addr, _bytes)
    end
    src_addr = src_addr + 100
    dst_addr = dst_addr + 100
  end
end

[ENABLE]
Storage.save_to_ori()
 
[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>916</ID>
              <Description>"Save Custom Storage to File"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}

local Storage = {}
function Storage.save_data()
  os.execute("mkdir D:\\CEdata")
  local file = io.open("D:\\CEdata\\storage.dat", 'r')
  if file then
    file:close()
    os.execute( string.format("copy D:\\CEdata\\storage.dat D:\\CEdata\\storage_%s.dat", os.date("%Y-%m-%d-%H-%M-%S")) )
  end
  file = io.open("D:\\CEdata\\storage.dat", 'wb')
  local src_addr = getAddress("mem_storage")
  local ori_addr = getAddress("Atelier_Ryza_2.exe") + 0x17725A0
  for i=1,100000 do
    _bytes = readBytes(src_addr, 100, true) -- read custom storage
    if _bytes then
      file:write(string.char(unpack(_bytes))) -- write to file
      if i &lt; 4800 and readInteger(ori_addr) == 0xffff then
        writeBytes(ori_addr, _bytes)
      end
    end
    src_addr = src_addr + 100
    ori_addr = ori_addr + 100
  end
  file:close()
end

[ENABLE]
Storage.save_data()

[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>917</ID>
              <Description>"Load Custom Storage from File"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
local Storage = {}
function Storage.load_data()
  local file = io.open("D:\\CEdata\\storage.dat", 'rb')
  if file then
    dst_addr = getAddress("mem_storage")
    for j=1,100000 do
      buffer = file:read(100)
      writeBytes(dst_addr, {buffer:byte(1,#buffer)})
      dst_addr = dst_addr + 100
    end
    file:close()
  end
end

[ENABLE]
Storage.load_data()

[DISABLE]
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>Change of jle Atelier_Ryza_2.exe+17E498</Description>
      <AddressString>Atelier_Ryza_2.exe+17E48B</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>44</Byte>
        <Byte>3B</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>7E</Byte>
        <Byte>0B</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>2B</Byte>
        <Byte>C2</Byte>
        <Byte>89</Byte>
        <Byte>51</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je Atelier_Ryza_2.exe+32997E</Description>
      <AddressString>Atelier_Ryza_2.exe+329971</AddressString>
      <Before>
        <Byte>B4</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>0B</Byte>
      </Actual>
      <After>
        <Byte>B8</Byte>
        <Byte>43</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je Atelier_Ryza_2.exe+38FD7</Description>
      <AddressString>Atelier_Ryza_2.exe+38FB8</AddressString>
      <Before>
        <Byte>41</Byte>
        <Byte>14</Byte>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>1D</Byte>
      </Actual>
      <After>
        <Byte>C6</Byte>
        <Byte>80</Byte>
        <Byte>B4</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne Atelier_Ryza_2.exe+57622</Description>
      <AddressString>Atelier_Ryza_2.exe+57606</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>39</Byte>
        <Byte>41</Byte>
        <Byte>1C</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>1A</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>79</Byte>
        <Byte>18</Byte>
        <Byte>05</Byte>
        <Byte>7D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je Atelier_Ryza_2.exe+32D123</Description>
      <AddressString>Atelier_Ryza_2.exe+32D109</AddressString>
      <Before>
        <Byte>B4</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>80</Byte>
        <Byte>BB</Byte>
        <Byte>C5</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne Atelier_Ryza_2.exe+32D123</Description>
      <AddressString>Atelier_Ryza_2.exe+32D112</AddressString>
      <Before>
        <Byte>C5</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>0F</Byte>
      </Actual>
      <After>
        <Byte>B9</Byte>
        <Byte>4F</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of maxss xmm0,xmm2</Description>
      <AddressString>Atelier_Ryza_2.exe+507D6</AddressString>
      <Before>
        <Byte>5D</Byte>
        <Byte>D1</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5F</Byte>
        <Byte>C2</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>81</Byte>
        <Byte>C8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jle Atelier_Ryza_2.exe+3234DF</Description>
      <AddressString>Atelier_Ryza_2.exe+3234D8</AddressString>
      <Before>
        <Byte>8B</Byte>
        <Byte>DF</Byte>
        <Byte>44</Byte>
        <Byte>3B</Byte>
        <Byte>F0</Byte>
      </Before>
      <Actual>
        <Byte>7E</Byte>
        <Byte>05</Byte>
      </Actual>
      <After>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>DE</Byte>
        <Byte>2B</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of sub eax,r14d</Description>
      <AddressString>Atelier_Ryza_2.exe+3234DF</AddressString>
      <Before>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>DE</Byte>
        <Byte>2B</Byte>
        <Byte>D8</Byte>
      </Before>
      <Actual>
        <Byte>41</Byte>
        <Byte>2B</Byte>
        <Byte>C6</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>14</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jle Atelier_Ryza_2.exe+3234FC</Description>
      <AddressString>Atelier_Ryza_2.exe+3234F4</AddressString>
      <Before>
        <Byte>86</Byte>
        <Byte>14</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>7E</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>14</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Basket Pointer</Description>
      <AddressString>Atelier_Ryza_2.exe+2A3D2C</AddressString>
      <Before>
        <Byte>8B</Byte>
        <Byte>01</Byte>
        <Byte>FF</Byte>
        <Byte>50</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>57</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>8B</Byte>
        <Byte>CB</Byte>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rax+rbx+017FA6D0],r14l</Description>
      <AddressString>Atelier_Ryza_2.exe+6E2408</AddressString>
      <Before>
        <Byte>7F</Byte>
        <Byte>01</Byte>
        <Byte>01</Byte>
        <Byte>EB</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>88</Byte>
        <Byte>B4</Byte>
        <Byte>18</Byte>
        <Byte>D0</Byte>
        <Byte>A6</Byte>
        <Byte>7F</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>FF</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>mem_basket</Name>
      <Address>200000000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mem_storage</Name>
      <Address>200030000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>f_SaveData</Name>
      <Address>00910000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FuncSaveData</Name>
      <Address>E8960000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" RLECount="11" OffsetHex="00000000" DisplayMethod="Unsigned Integer"/>
        <Element Offset="44" Vartype="Pointer" Bytesize="8" OffsetHex="0000002C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="52" Vartype="4 Bytes" Bytesize="4" RLECount="34" OffsetHex="00000034" DisplayMethod="Unsigned Integer"/>
        <Element Offset="188" Vartype="Pointer" Bytesize="8" OffsetHex="000000BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="196" Vartype="4 Bytes" Bytesize="4" RLECount="34" OffsetHex="000000C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="332" Vartype="Pointer" Bytesize="8" OffsetHex="0000014C" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="340" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="00000154" DisplayMethod="Unsigned Integer"/>
        <Element Offset="388" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000184" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="404" Vartype="Pointer" Bytesize="8" OffsetHex="00000194" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="412" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="0000019C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="436" Vartype="Pointer" Bytesize="8" OffsetHex="000001B4" Description="Pointer to instance of BtlDamageMgr" DisplayMethod="Unsigned Integer"/>
        <Element Offset="444" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000001BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="464" Vartype="Double" Bytesize="8" OffsetHex="000001D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="472" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000001D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="492" Vartype="Pointer" Bytesize="8" OffsetHex="000001EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="500" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000001F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="508" Vartype="Pointer" Bytesize="8" OffsetHex="000001FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="516" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000204" DisplayMethod="Unsigned Integer"/>
        <Element Offset="524" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000020C" DisplayMethod="Hexadecimal"/>
        <Element Offset="528" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000210" DisplayMethod="Unsigned Integer"/>
        <Element Offset="544" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000220" DisplayMethod="Hexadecimal"/>
        <Element Offset="548" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="00000224" DisplayMethod="Unsigned Integer"/>
        <Element Offset="596" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000254" DisplayMethod="Unsigned Integer"/>
        <Element Offset="608" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000260" DisplayMethod="Hexadecimal"/>
        <Element Offset="612" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="00000264" DisplayMethod="Unsigned Integer"/>
        <Element Offset="644" Vartype="Pointer" Bytesize="8" OffsetHex="00000284" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="652" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="0000028C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="676" Vartype="4 Bytes" Bytesize="4" OffsetHex="000002A4" DisplayMethod="Hexadecimal"/>
        <Element Offset="680" Vartype="4 Bytes" Bytesize="4" OffsetHex="000002A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="684" Vartype="Pointer" Bytesize="8" OffsetHex="000002AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="692" Vartype="4 Bytes" Bytesize="4" OffsetHex="000002B4" DisplayMethod="Hexadecimal"/>
        <Element Offset="696" Vartype="4 Bytes" Bytesize="4" OffsetHex="000002B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="700" Vartype="Pointer" Bytesize="8" OffsetHex="000002BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="708" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="000002C4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="764" Vartype="Pointer" Bytesize="8" OffsetHex="000002FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="772" Vartype="4 Bytes" Bytesize="4" RLECount="20" OffsetHex="00000304" DisplayMethod="Unsigned Integer"/>
        <Element Offset="852" Vartype="Pointer" Bytesize="8" OffsetHex="00000354" DisplayMethod="Unsigned Integer"/>
        <Element Offset="860" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="0000035C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="896" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000380" DisplayMethod="Hexadecimal"/>
        <Element Offset="920" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000398" DisplayMethod="Unsigned Integer"/>
        <Element Offset="928" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003A0" DisplayMethod="Hexadecimal"/>
        <Element Offset="932" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="000003A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="988" Vartype="Pointer" Bytesize="8" OffsetHex="000003DC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="996" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000003E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1012" Vartype="Float" Bytesize="4" OffsetHex="000003F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1016" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1020" Vartype="Float" Bytesize="4" OffsetHex="000003FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1024" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000400" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1036" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000040C" DisplayMethod="Hexadecimal"/>
        <Element Offset="1044" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000414" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1060" Vartype="Pointer" Bytesize="8" OffsetHex="00000424" Description="Pointer to instance of BtlCharaFieldPointMoveParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1068" Vartype="Pointer" Bytesize="8" OffsetHex="0000042C" Description="Pointer to instance of BtlCharaMonster" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1076" Vartype="Pointer" Bytesize="8" OffsetHex="00000434" Description="Pointer to instance of BtlCharaActionMgr" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1084" Vartype="Pointer" Bytesize="8" RLECount="18" OffsetHex="0000043C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1228" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000004CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1244" Vartype="4 Bytes" Bytesize="4" OffsetHex="000004DC" DisplayMethod="Hexadecimal"/>
        <Element Offset="1248" Vartype="4 Bytes" Bytesize="4" RLECount="21" OffsetHex="000004E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1332" Vartype="Pointer" Bytesize="8" OffsetHex="00000534" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1340" Vartype="4 Bytes" Bytesize="4" RLECount="89" OffsetHex="0000053C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1696" Vartype="Double" Bytesize="8" OffsetHex="000006A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1704" Vartype="4 Bytes" Bytesize="4" RLECount="30" OffsetHex="000006A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1824" Vartype="Float" Bytesize="4" OffsetHex="00000720" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1828" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000724" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1836" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="0000072C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1860" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="00000744" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1908" Vartype="Pointer" Bytesize="8" OffsetHex="00000774" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1916" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="0000077C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1928" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000788" DisplayMethod="Hexadecimal"/>
        <Element Offset="1932" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="0000078C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1936" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000790" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1948" Vartype="Pointer" Bytesize="8" OffsetHex="0000079C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1956" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1960" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="1964" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000007AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1980" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000007BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2000" Vartype="Double" Bytesize="8" OffsetHex="000007D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2008" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000007D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2016" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007E0" DisplayMethod="Hexadecimal"/>
        <Element Offset="2020" Vartype="Pointer" Bytesize="8" OffsetHex="000007E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2028" Vartype="Pointer" Bytesize="8" OffsetHex="000007EC" Description="Pointer to instance of EventExecChara" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2036" Vartype="Pointer" Bytesize="8" OffsetHex="000007F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2044" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007FC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2048" Vartype="Double" Bytesize="8" OffsetHex="00000800" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2056" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000808" DisplayMethod="Hexadecimal"/>
        <Element Offset="2060" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000080C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2068" Vartype="Pointer" Bytesize="8" OffsetHex="00000814" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2076" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000081C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2084" Vartype="Pointer" Bytesize="8" OffsetHex="00000824" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2092" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="0000082C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2116" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000844" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2132" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000854" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2156" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="0000086C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2172" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="0000087C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2192" Vartype="Double" Bytesize="8" OffsetHex="00000890" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2200" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000898" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2208" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008A0" DisplayMethod="Hexadecimal"/>
        <Element Offset="2212" Vartype="Pointer" Bytesize="8" OffsetHex="000008A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2220" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000008AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2228" Vartype="Pointer" Bytesize="8" OffsetHex="000008B4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2236" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2240" Vartype="Double" Bytesize="8" OffsetHex="000008C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2248" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008C8" DisplayMethod="Hexadecimal"/>
        <Element Offset="2252" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000008CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2260" Vartype="Pointer" Bytesize="8" OffsetHex="000008D4" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2268" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000008DC" DisplayMethod="Hexadecimal"/>
        <Element Offset="2276" Vartype="Pointer" Bytesize="8" OffsetHex="000008E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2284" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000008EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2308" Vartype="Pointer" Bytesize="8" OffsetHex="00000904" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2316" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="0000090C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2348" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="0000092C" DisplayMethod="Hexadecimal"/>
        <Element Offset="2356" Vartype="Pointer" Bytesize="8" OffsetHex="00000934" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2364" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="0000093C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2384" Vartype="Double" Bytesize="8" OffsetHex="00000950" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2392" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000958" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2396" Vartype="Pointer" Bytesize="8" OffsetHex="0000095C" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2404" Vartype="Pointer" Bytesize="8" OffsetHex="00000964" Description="Pointer to instance of UtilMode&lt;BtlCharaActionMgr&gt;" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2412" Vartype="Pointer" Bytesize="8" OffsetHex="0000096C" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2420" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000974" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2444" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="0000098C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2472" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="2476" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000009AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2488" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009B8" DisplayMethod="Hexadecimal"/>
        <Element Offset="2492" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009BC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2500" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009C4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2508" Vartype="4 Bytes" Bytesize="4" RLECount="19" OffsetHex="000009CC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2584" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A18" DisplayMethod="Hexadecimal"/>
        <Element Offset="2588" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A1C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2600" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A28" DisplayMethod="Hexadecimal"/>
        <Element Offset="2612" Vartype="Pointer" Bytesize="8" OffsetHex="00000A34" Description="Pointer to instance of BtlSkillChain" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2620" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A3C" DisplayMethod="Hexadecimal"/>
        <Element Offset="2628" Vartype="4 Bytes" Bytesize="4" RLECount="7" OffsetHex="00000A44" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2656" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A60" DisplayMethod="Hexadecimal"/>
        <Element Offset="2660" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2664" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000A68" DisplayMethod="Hexadecimal"/>
        <Element Offset="2676" Vartype="Pointer" Bytesize="8" OffsetHex="00000A74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2684" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000A7C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2704" Vartype="Double" Bytesize="8" OffsetHex="00000A90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2712" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2716" Vartype="Pointer" Bytesize="8" OffsetHex="00000A9C" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2724" Vartype="Pointer" Bytesize="8" OffsetHex="00000AA4" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2732" Vartype="Pointer" Bytesize="8" OffsetHex="00000AAC" Description="Pointer to instance of BtlHudChain" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2740" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000AB4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2748" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000ABC" DisplayMethod="Hexadecimal"/>
        <Element Offset="2756" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000AC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2776" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AD8" DisplayMethod="Hexadecimal"/>
        <Element Offset="2780" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000ADC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2804" Vartype="Pointer" Bytesize="8" OffsetHex="00000AF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2812" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000AFC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2832" Vartype="Double" Bytesize="8" OffsetHex="00000B10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2840" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2844" Vartype="Pointer" Bytesize="8" OffsetHex="00000B1C" Description="Pointer to instance of BtlCharaActionMgr" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2852" Vartype="4 Bytes" Bytesize="4" RLECount="12" OffsetHex="00000B24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2900" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000B54" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2916" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000B64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2940" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="00000B7C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2972" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B9C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2976" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BA0" DisplayMethod="Hexadecimal"/>
        <Element Offset="2980" Vartype="Pointer" Bytesize="8" OffsetHex="00000BA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2988" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000BAC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3012" Vartype="Pointer" Bytesize="8" OffsetHex="00000BC4" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3020" Vartype="Pointer" Bytesize="8" OffsetHex="00000BCC" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3028" Vartype="Pointer" Bytesize="8" OffsetHex="00000BD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3036" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000BDC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3060" Vartype="Pointer" Bytesize="8" OffsetHex="00000BF4" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3068" Vartype="Pointer" Bytesize="8" OffsetHex="00000BFC" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3076" Vartype="Double" Bytesize="8" OffsetHex="00000C04" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3084" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C0C" DisplayMethod="Hexadecimal"/>
        <Element Offset="3092" Vartype="Pointer" Bytesize="8" OffsetHex="00000C14" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3100" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C1C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3108" Vartype="Pointer" Bytesize="8" OffsetHex="00000C24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3116" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C2C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3124" Vartype="Pointer" Bytesize="8" OffsetHex="00000C34" Description="Pointer to instance of elixir::EXEffectNode" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3132" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C3C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3140" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000C44" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3148" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000C4C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3184" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000C70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3196" Vartype="4 Bytes" Bytesize="4" RLECount="10" OffsetHex="00000C7C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3236" Vartype="Pointer" Bytesize="8" OffsetHex="00000CA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3244" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000CAC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3268" Vartype="Pointer" Bytesize="8" OffsetHex="00000CC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3276" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000CCC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3296" Vartype="Double" Bytesize="8" OffsetHex="00000CE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3304" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000CE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3316" Vartype="Double" Bytesize="8" OffsetHex="00000CF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3324" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000CFC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3336" Vartype="Double" Bytesize="8" OffsetHex="00000D08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3344" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3356" Vartype="Double" Bytesize="8" OffsetHex="00000D1C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3364" Vartype="Float" Bytesize="4" OffsetHex="00000D24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3368" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3380" Vartype="Double" Bytesize="8" OffsetHex="00000D34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3388" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D3C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3400" Vartype="Double" Bytesize="8" OffsetHex="00000D48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3408" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3420" Vartype="Double" Bytesize="8" OffsetHex="00000D5C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3428" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000D64" DisplayMethod="Hexadecimal"/>
        <Element Offset="3444" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000D74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3460" Vartype="Pointer" Bytesize="8" OffsetHex="00000D84" Description="Pointer to instance of Chara" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3468" Vartype="Pointer" Bytesize="8" OffsetHex="00000D8C" Description="Pointer to instance of elixir::EXClothModelObject" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3476" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D94" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3480" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000D98" DisplayMethod="Hexadecimal"/>
        <Element Offset="3492" Vartype="Pointer" Bytesize="8" OffsetHex="00000DA4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3500" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DAC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3508" Vartype="Pointer" Bytesize="8" OffsetHex="00000DB4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3516" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DBC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3524" Vartype="Pointer" Bytesize="8" OffsetHex="00000DC4" Description="Pointer to instance of elixir::EXEffectNode" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3532" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DCC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3540" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000DD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3548" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000DDC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3584" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000E00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3596" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00000E0C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3628" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E2C" DisplayMethod="Hexadecimal"/>
        <Element Offset="3636" Vartype="Pointer" Bytesize="8" OffsetHex="00000E34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3644" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000E3C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3668" Vartype="Pointer" Bytesize="8" OffsetHex="00000E54" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3676" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000E5C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3696" Vartype="Double" Bytesize="8" OffsetHex="00000E70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3704" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000E78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3716" Vartype="Double" Bytesize="8" OffsetHex="00000E84" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3724" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000E8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3736" Vartype="Double" Bytesize="8" OffsetHex="00000E98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3744" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000EA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3756" Vartype="Double" Bytesize="8" OffsetHex="00000EAC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3764" Vartype="Float" Bytesize="4" OffsetHex="00000EB4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3768" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000EB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3780" Vartype="Double" Bytesize="8" OffsetHex="00000EC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3788" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000ECC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3800" Vartype="Double" Bytesize="8" OffsetHex="00000ED8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3808" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000EE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3820" Vartype="Double" Bytesize="8" OffsetHex="00000EEC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3828" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000EF4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3844" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000F04" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3860" Vartype="Pointer" Bytesize="8" OffsetHex="00000F14" Description="Pointer to instance of Chara" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3868" Vartype="Pointer" Bytesize="8" OffsetHex="00000F1C" Description="Pointer to instance of elixir::EXClothModelObject" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3876" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000F24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3880" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000F28" DisplayMethod="Hexadecimal"/>
        <Element Offset="3892" Vartype="Pointer" Bytesize="8" OffsetHex="00000F34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3900" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F3C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3908" Vartype="Pointer" Bytesize="8" OffsetHex="00000F44" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3916" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F4C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3924" Vartype="Pointer" Bytesize="8" OffsetHex="00000F54" Description="Pointer to instance of elixir::EXEffectNode" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3932" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F5C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3940" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000F64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3948" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000F6C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3984" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000F90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3996" Vartype="4 Bytes" Bytesize="4" RLECount="8" OffsetHex="00000F9C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4028" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FBC" DisplayMethod="Hexadecimal"/>
        <Element Offset="4036" Vartype="Pointer" Bytesize="8" OffsetHex="00000FC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4044" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000FCC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4068" Vartype="Pointer" Bytesize="8" OffsetHex="00000FE4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4076" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000FEC" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="unnamed structure 2" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Float" Bytesize="4" OffsetHex="00000000" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="Double" Bytesize="8" OffsetHex="00000004" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="0000000C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000020" DisplayMethod="Hexadecimal"/>
        <Element Offset="40" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000028" DisplayMethod="Unsigned Integer"/>
        <Element Offset="100" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000064" DisplayMethod="Hexadecimal"/>
        <Element Offset="104" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000068" DisplayMethod="Unsigned Integer"/>
        <Element Offset="108" Vartype="Double" Bytesize="8" OffsetHex="0000006C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="116" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000074" DisplayMethod="Unsigned Integer"/>
        <Element Offset="136" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000088" DisplayMethod="Hexadecimal"/>
        <Element Offset="144" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000090" DisplayMethod="Unsigned Integer"/>
        <Element Offset="168" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000000A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="176" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="180" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000000B4" DisplayMethod="Hexadecimal"/>
        <Element Offset="192" Vartype="Pointer" Bytesize="8" OffsetHex="000000C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000000C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="224" Vartype="Pointer" Bytesize="8" OffsetHex="000000E0" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="232" Vartype="Pointer" Bytesize="8" OffsetHex="000000E8" Description="Pointer to instance of BtlHudTurn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="240" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="244" Vartype="4 Bytes" Bytesize="4" OffsetHex="000000F4" DisplayMethod="Hexadecimal"/>
        <Element Offset="248" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000000F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="256" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000100" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="Pointer" Bytesize="8" OffsetHex="00000108" DisplayMethod="Unsigned Integer"/>
        <Element Offset="272" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000110" DisplayMethod="Unsigned Integer"/>
        <Element Offset="276" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000114" DisplayMethod="Hexadecimal"/>
        <Element Offset="280" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000118" DisplayMethod="Unsigned Integer"/>
        <Element Offset="300" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="0000012C" DisplayMethod="Hexadecimal"/>
        <Element Offset="324" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000144" DisplayMethod="Unsigned Integer"/>
        <Element Offset="332" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000014C" DisplayMethod="Hexadecimal"/>
        <Element Offset="336" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="00000150" DisplayMethod="Unsigned Integer"/>
        <Element Offset="392" Vartype="Pointer" Bytesize="8" OffsetHex="00000188" DisplayMethod="Unsigned Integer"/>
        <Element Offset="400" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000190" DisplayMethod="Unsigned Integer"/>
        <Element Offset="404" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000194" DisplayMethod="Hexadecimal"/>
        <Element Offset="408" Vartype="Pointer" Bytesize="8" OffsetHex="00000198" DisplayMethod="Unsigned Integer"/>
        <Element Offset="416" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="000001A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="452" Vartype="4 Bytes" Bytesize="4" OffsetHex="000001C4" DisplayMethod="Hexadecimal"/>
        <Element Offset="456" Vartype="Pointer" Bytesize="8" OffsetHex="000001C8" Description="Pointer to instance of BtlHudParamPartyS" DisplayMethod="Unsigned Integer"/>
        <Element Offset="464" Vartype="Pointer" Bytesize="8" OffsetHex="000001D0" Description="Pointer to instance of BtlCharaParty" DisplayMethod="Unsigned Integer"/>
        <Element Offset="472" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000001D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="480" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000001E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="496" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000001F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="512" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000200" DisplayMethod="Hexadecimal"/>
        <Element Offset="520" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000208" DisplayMethod="Unsigned Integer"/>
        <Element Offset="580" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="00000244" DisplayMethod="Unsigned Integer"/>
        <Element Offset="596" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000254" DisplayMethod="Unsigned Integer"/>
        <Element Offset="616" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000268" DisplayMethod="Hexadecimal"/>
        <Element Offset="624" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000270" DisplayMethod="Unsigned Integer"/>
        <Element Offset="648" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000288" DisplayMethod="Hexadecimal"/>
        <Element Offset="656" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000290" DisplayMethod="Unsigned Integer"/>
        <Element Offset="660" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000294" DisplayMethod="Hexadecimal"/>
        <Element Offset="664" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000298" DisplayMethod="Unsigned Integer"/>
        <Element Offset="676" Vartype="Double" Bytesize="8" OffsetHex="000002A4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="684" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000002AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="704" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000002C0" DisplayMethod="Hexadecimal"/>
        <Element Offset="712" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="000002C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="772" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000304" DisplayMethod="Hexadecimal"/>
        <Element Offset="776" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000308" DisplayMethod="Unsigned Integer"/>
        <Element Offset="780" Vartype="Double" Bytesize="8" OffsetHex="0000030C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="788" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000314" DisplayMethod="Unsigned Integer"/>
        <Element Offset="808" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000328" DisplayMethod="Hexadecimal"/>
        <Element Offset="816" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000330" DisplayMethod="Unsigned Integer"/>
        <Element Offset="840" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000348" DisplayMethod="Hexadecimal"/>
        <Element Offset="848" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000350" DisplayMethod="Unsigned Integer"/>
        <Element Offset="852" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000354" DisplayMethod="Hexadecimal"/>
        <Element Offset="864" Vartype="Pointer" Bytesize="8" OffsetHex="00000360" DisplayMethod="Unsigned Integer"/>
        <Element Offset="872" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000368" DisplayMethod="Unsigned Integer"/>
        <Element Offset="896" Vartype="Pointer" Bytesize="8" OffsetHex="00000380" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="904" Vartype="Pointer" Bytesize="8" OffsetHex="00000388" Description="Pointer to instance of BtlHudTurn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="912" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000390" DisplayMethod="Unsigned Integer"/>
        <Element Offset="916" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000394" DisplayMethod="Hexadecimal"/>
        <Element Offset="920" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000398" DisplayMethod="Unsigned Integer"/>
        <Element Offset="928" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000003A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="936" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000003A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="948" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003B4" DisplayMethod="Hexadecimal"/>
        <Element Offset="952" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000003B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="972" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000003CC" DisplayMethod="Hexadecimal"/>
        <Element Offset="996" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000003E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1004" Vartype="4 Bytes" Bytesize="4" OffsetHex="000003EC" DisplayMethod="Hexadecimal"/>
        <Element Offset="1008" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="000003F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1064" Vartype="Pointer" Bytesize="8" OffsetHex="00000428" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1072" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000430" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1076" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000434" DisplayMethod="Hexadecimal"/>
        <Element Offset="1080" Vartype="Pointer" Bytesize="8" OffsetHex="00000438" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1088" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000440" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1124" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000464" DisplayMethod="Hexadecimal"/>
        <Element Offset="1128" Vartype="Pointer" Bytesize="8" OffsetHex="00000468" Description="Pointer to instance of BtlHudParamPartyS" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1136" Vartype="Pointer" Bytesize="8" OffsetHex="00000470" Description="Pointer to instance of BtlCharaMonster" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1144" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000478" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1148" Vartype="Float" Bytesize="4" OffsetHex="0000047C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1152" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000480" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1168" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000490" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1184" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000004A0" DisplayMethod="Hexadecimal"/>
        <Element Offset="1192" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="000004A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1252" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="000004E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1268" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000004F4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1288" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000508" DisplayMethod="Hexadecimal"/>
        <Element Offset="1296" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000510" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1320" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000528" DisplayMethod="Hexadecimal"/>
        <Element Offset="1328" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000530" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1332" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000534" DisplayMethod="Hexadecimal"/>
        <Element Offset="1336" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000538" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1348" Vartype="Double" Bytesize="8" OffsetHex="00000544" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1356" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="0000054C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1376" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000560" DisplayMethod="Hexadecimal"/>
        <Element Offset="1384" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000568" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1444" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005A4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1448" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1452" Vartype="Double" Bytesize="8" OffsetHex="000005AC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1460" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000005B4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1480" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000005C8" DisplayMethod="Hexadecimal"/>
        <Element Offset="1488" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000005D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1512" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000005E8" DisplayMethod="Hexadecimal"/>
        <Element Offset="1520" Vartype="4 Bytes" Bytesize="4" OffsetHex="000005F0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1524" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000005F4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1536" Vartype="Pointer" Bytesize="8" OffsetHex="00000600" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1544" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000608" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1568" Vartype="Pointer" Bytesize="8" OffsetHex="00000620" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1576" Vartype="Pointer" Bytesize="8" OffsetHex="00000628" Description="Pointer to instance of BtlHudTurn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1584" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000630" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1588" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000634" DisplayMethod="Hexadecimal"/>
        <Element Offset="1592" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000638" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1600" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000640" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1608" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000648" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1620" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000654" DisplayMethod="Hexadecimal"/>
        <Element Offset="1624" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000658" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1632" Vartype="Pointer" Bytesize="8" OffsetHex="00000660" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1640" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000668" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1644" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="0000066C" DisplayMethod="Hexadecimal"/>
        <Element Offset="1668" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000684" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1676" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000068C" DisplayMethod="Hexadecimal"/>
        <Element Offset="1680" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="00000690" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1736" Vartype="Pointer" Bytesize="8" OffsetHex="000006C8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1744" Vartype="4 Bytes" Bytesize="4" OffsetHex="000006D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1748" Vartype="4 Bytes" Bytesize="4" OffsetHex="000006D4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1752" Vartype="Pointer" Bytesize="8" OffsetHex="000006D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1760" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="000006E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1796" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000704" DisplayMethod="Hexadecimal"/>
        <Element Offset="1800" Vartype="Pointer" Bytesize="8" OffsetHex="00000708" Description="Pointer to instance of BtlHudParamPartyS" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1808" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000710" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1816" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000718" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1824" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000720" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1840" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000730" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1856" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000740" DisplayMethod="Hexadecimal"/>
        <Element Offset="1864" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000748" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1924" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="00000784" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1940" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000794" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1960" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000007A8" DisplayMethod="Hexadecimal"/>
        <Element Offset="1968" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000007B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1992" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000007C8" DisplayMethod="Hexadecimal"/>
        <Element Offset="2000" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2004" Vartype="4 Bytes" Bytesize="4" OffsetHex="000007D4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2008" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="000007D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2020" Vartype="Double" Bytesize="8" OffsetHex="000007E4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2028" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="000007EC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2048" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000800" DisplayMethod="Hexadecimal"/>
        <Element Offset="2056" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000808" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2116" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000844" DisplayMethod="Hexadecimal"/>
        <Element Offset="2120" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000848" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2124" Vartype="Double" Bytesize="8" OffsetHex="0000084C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2132" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000854" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2152" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000868" DisplayMethod="Hexadecimal"/>
        <Element Offset="2160" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000870" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2184" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000888" DisplayMethod="Hexadecimal"/>
        <Element Offset="2192" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000890" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2196" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000894" DisplayMethod="Hexadecimal"/>
        <Element Offset="2208" Vartype="Pointer" Bytesize="8" OffsetHex="000008A0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2216" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="000008A8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2240" Vartype="Pointer" Bytesize="8" OffsetHex="000008C0" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2248" Vartype="Pointer" Bytesize="8" OffsetHex="000008C8" Description="Pointer to instance of BtlHudTurn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2256" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2260" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008D4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2264" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000008D8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2272" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000008E0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2280" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="000008E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2292" Vartype="4 Bytes" Bytesize="4" OffsetHex="000008F4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2296" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000008F8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2304" Vartype="Pointer" Bytesize="8" OffsetHex="00000900" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2312" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000908" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2316" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="0000090C" DisplayMethod="Hexadecimal"/>
        <Element Offset="2340" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000924" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2348" Vartype="4 Bytes" Bytesize="4" OffsetHex="0000092C" DisplayMethod="Hexadecimal"/>
        <Element Offset="2352" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="00000930" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2408" Vartype="Pointer" Bytesize="8" OffsetHex="00000968" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2416" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000970" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2420" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000974" DisplayMethod="Hexadecimal"/>
        <Element Offset="2424" Vartype="Pointer" Bytesize="8" OffsetHex="00000978" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2432" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000980" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2468" Vartype="4 Bytes" Bytesize="4" OffsetHex="000009A4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2472" Vartype="Pointer" Bytesize="8" OffsetHex="000009A8" Description="Pointer to instance of BtlHudParamPartyS" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2480" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009B0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2488" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="000009B8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2496" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="000009C0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2512" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="000009D0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2528" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="000009E0" DisplayMethod="Hexadecimal"/>
        <Element Offset="2536" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="000009E8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2596" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="00000A24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2612" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000A34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2632" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A48" DisplayMethod="Hexadecimal"/>
        <Element Offset="2640" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000A50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2664" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000A68" DisplayMethod="Hexadecimal"/>
        <Element Offset="2672" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2676" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A74" DisplayMethod="Hexadecimal"/>
        <Element Offset="2680" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000A78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2692" Vartype="Double" Bytesize="8" OffsetHex="00000A84" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2700" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000A8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2720" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000AA0" DisplayMethod="Hexadecimal"/>
        <Element Offset="2728" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000AA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2788" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AE4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2792" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2796" Vartype="Double" Bytesize="8" OffsetHex="00000AEC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2804" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000AF4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2824" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B08" DisplayMethod="Hexadecimal"/>
        <Element Offset="2832" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000B10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2856" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B28" DisplayMethod="Hexadecimal"/>
        <Element Offset="2864" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B30" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2868" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000B34" DisplayMethod="Hexadecimal"/>
        <Element Offset="2880" Vartype="Pointer" Bytesize="8" OffsetHex="00000B40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2888" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000B48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2912" Vartype="Pointer" Bytesize="8" OffsetHex="00000B60" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2920" Vartype="Pointer" Bytesize="8" OffsetHex="00000B68" Description="Pointer to instance of BtlHudTurn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2928" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2932" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B74" DisplayMethod="Hexadecimal"/>
        <Element Offset="2936" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B78" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2944" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000B80" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2952" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000B88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2964" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000B94" DisplayMethod="Hexadecimal"/>
        <Element Offset="2968" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000B98" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2976" Vartype="Pointer" Bytesize="8" OffsetHex="00000BA0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2984" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2988" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000BAC" DisplayMethod="Hexadecimal"/>
        <Element Offset="3012" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000BC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3020" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000BCC" DisplayMethod="Hexadecimal"/>
        <Element Offset="3024" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="00000BD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3080" Vartype="Pointer" Bytesize="8" OffsetHex="00000C08" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3088" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3092" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C14" DisplayMethod="Hexadecimal"/>
        <Element Offset="3096" Vartype="Pointer" Bytesize="8" OffsetHex="00000C18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3104" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000C20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3140" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000C44" DisplayMethod="Hexadecimal"/>
        <Element Offset="3144" Vartype="Pointer" Bytesize="8" OffsetHex="00000C48" Description="Pointer to instance of BtlHudParamPartyS" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3152" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3160" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000C58" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3168" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000C60" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3184" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000C70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3200" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000C80" DisplayMethod="Hexadecimal"/>
        <Element Offset="3208" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000C88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3268" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="00000CC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3284" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000CD4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3304" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000CE8" DisplayMethod="Hexadecimal"/>
        <Element Offset="3312" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000CF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3336" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D08" DisplayMethod="Hexadecimal"/>
        <Element Offset="3344" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3348" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D14" DisplayMethod="Hexadecimal"/>
        <Element Offset="3352" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000D18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3364" Vartype="Double" Bytesize="8" OffsetHex="00000D24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3372" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000D2C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3392" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D40" DisplayMethod="Hexadecimal"/>
        <Element Offset="3400" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000D48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3460" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D84" DisplayMethod="Hexadecimal"/>
        <Element Offset="3464" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D88" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3468" Vartype="Double" Bytesize="8" OffsetHex="00000D8C" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3476" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000D94" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3496" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DA8" DisplayMethod="Hexadecimal"/>
        <Element Offset="3504" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000DB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3528" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DC8" DisplayMethod="Hexadecimal"/>
        <Element Offset="3536" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000DD0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3540" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000DD4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3552" Vartype="Pointer" Bytesize="8" OffsetHex="00000DE0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3560" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000DE8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3584" Vartype="Pointer" Bytesize="8" OffsetHex="00000E00" Description="Pointer to instance of GameModeBattle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3592" Vartype="Pointer" Bytesize="8" OffsetHex="00000E08" Description="Pointer to instance of BtlHudTurn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3600" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3604" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E14" DisplayMethod="Hexadecimal"/>
        <Element Offset="3608" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E18" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3616" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000E20" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3624" Vartype="4 Bytes" Bytesize="4" RLECount="3" OffsetHex="00000E28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3636" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E34" DisplayMethod="Hexadecimal"/>
        <Element Offset="3640" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E38" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3648" Vartype="Pointer" Bytesize="8" OffsetHex="00000E40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3656" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E48" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3660" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000E4C" DisplayMethod="Hexadecimal"/>
        <Element Offset="3684" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3692" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000E6C" DisplayMethod="Hexadecimal"/>
        <Element Offset="3696" Vartype="4 Bytes" Bytesize="4" RLECount="14" OffsetHex="00000E70" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3752" Vartype="Pointer" Bytesize="8" OffsetHex="00000EA8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3760" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000EB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3764" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000EB4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3768" Vartype="Pointer" Bytesize="8" OffsetHex="00000EB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3776" Vartype="4 Bytes" Bytesize="4" RLECount="9" OffsetHex="00000EC0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3812" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000EE4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3816" Vartype="Pointer" Bytesize="8" OffsetHex="00000EE8" Description="Pointer to instance of BtlHudParamPartyS" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3824" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EF0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3832" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000EF8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3836" Vartype="Float" Bytesize="4" OffsetHex="00000EFC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3840" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000F00" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3856" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000F10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3872" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F20" DisplayMethod="Hexadecimal"/>
        <Element Offset="3880" Vartype="4 Bytes" Bytesize="4" RLECount="15" OffsetHex="00000F28" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3940" Vartype="Double" Bytesize="8" RLECount="2" OffsetHex="00000F64" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3956" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000F74" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3976" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F88" DisplayMethod="Hexadecimal"/>
        <Element Offset="3984" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000F90" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4008" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FA8" DisplayMethod="Hexadecimal"/>
        <Element Offset="4016" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FB0" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4020" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000FB4" DisplayMethod="Hexadecimal"/>
        <Element Offset="4024" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000FB8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4036" Vartype="Double" Bytesize="8" OffsetHex="00000FC4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4044" Vartype="4 Bytes" Bytesize="4" RLECount="5" OffsetHex="00000FCC" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4064" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FE0" DisplayMethod="Hexadecimal"/>
        <Element Offset="4072" Vartype="4 Bytes" Bytesize="4" RLECount="6" OffsetHex="00000FE8" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
